<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='25036' time_ms='1551143739423'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.151-b12
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.151-b12) for windows-amd64 JRE (1.8.0_151-b12), built on Sep  5 2017 19:33:46 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log 
</args>
<command>
VolatileTest.class
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.151-b12
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Java\jdk1.8.0_151\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Java\jdk1.8.0_151\jre\lib\endorsed
sun.boot.library.path=D:\Java\jdk1.8.0_151\jre\bin
java.library.path=D:\Java\jdk1.8.0_151\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\libnvvp;D:\Java\jdk1.8.0_151\bin;D:\Java\jdk1.8.0_151\jre\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\apache-maven-3.5.2-bin\apache-maven-3.5.2\bin;E:\MATLAB\R2018b\runtime\win64;E:\MATLAB\R2018b\bin;D:\MATLAB\R2016a\runtime\win64;D:\MATLAB\R2016a\bin;D:\MATLAB\R2016a\polyspace\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;D:\apache-maven-3.5.2-bin\apache-maven-3.5.2\bin;E:\cygwin64\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;D:\Python3.6\Scripts\;D:\Python3.6\;C:\Users\pc\AppData\Local\Microsoft\WindowsApps;D:\Anaconda3\Scripts\;;.
java.home=D:\Java\jdk1.8.0_151\jre
java.class.path=.;D:\Java\jdk1.8.0_151\lib\dt.jar;D:\Java\jdk1.8.0_151\lib\tools.jar;
sun.boot.class.path=D:\Java\jdk1.8.0_151\jre\lib\resources.jar;D:\Java\jdk1.8.0_151\jre\lib\rt.jar;D:\Java\jdk1.8.0_151\jre\lib\sunrsasign.jar;D:\Java\jdk1.8.0_151\jre\lib\jsse.jar;D:\Java\jdk1.8.0_151\jre\lib\jce.jar;D:\Java\jdk1.8.0_151\jre\lib\charsets.jar;D:\Java\jdk1.8.0_151\jre\lib\jfr.jar;D:\Java\jdk1.8.0_151\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
sun.java.command=VolatileTest.class
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='21536'/>
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='419' backedge_count='5120' iicount='419' level='3' stamp='0.181' comment='tiered' hot_count='419'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<task_queued compile_id='2' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='244' backedge_count='1024' iicount='244' level='3' stamp='0.182' comment='tiered' hot_count='244'/>
<task_queued compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2432' iicount='2432' level='3' stamp='0.183' comment='tiered' hot_count='2432'/>
<task_queued compile_id='4' method='java/lang/Character toLowerCase (I)I' bytes='9' count='640' iicount='640' level='3' stamp='0.183' comment='tiered' hot_count='640'/>
<task_queued compile_id='5' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='640' iicount='640' level='3' stamp='0.183' comment='tiered' hot_count='640'/>
<task_queued compile_id='6' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='640' iicount='640' level='3' stamp='0.183' comment='tiered' hot_count='640'/>
<task_queued compile_id='7' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='640' iicount='640' level='3' stamp='0.183' comment='tiered' hot_count='640'/>
<writer thread='19132'/>
<thread_logfile thread='19132' filename='C:\Users\pc\AppData\Local\Temp\\hs_c19132_pid25036.log'/>
<writer thread='21536'/>
<task_queued compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='512' iicount='512' level='3' stamp='0.185' comment='tiered' hot_count='512'/>
<writer thread='19132'/>
Loaded disassembler from D:\Java\jdk1.8.0_151\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002c586d0:
Code:
<writer thread='20928'/>
<thread_logfile thread='20928' filename='C:\Users\pc\AppData\Local\Temp\\hs_c20928_pid25036.log'/>
<writer thread='19132'/>
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c58840: 
<writer thread='20376'/>
<thread_logfile thread='20376' filename='C:\Users\pc\AppData\Local\Temp\\hs_c20376_pid25036.log'/>
<writer thread='19132'/>
mov    0x8(%rdx),%r10d
  0x0000000002c58844: shl    $0x3,%r10
  0x0000000002c58848: cmp    %rax,%r10
  0x0000000002c5884b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c58851: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5885c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c58860: 
<writer thread='14456'/>
<thread_logfile thread='14456' filename='C:\Users\pc\AppData\Local\Temp\\hs_c14456_pid25036.log'/>
<writer thread='19132'/>
mov    %eax,-0x6000(%rsp)
  0x0000000002c58867: push   %rbp
  0x0000000002c58868: sub    $0x30,%rsp
  0x0000000002c5886c: movabs $0x1bd517a8,%rax   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c58876: mov    0xdc(%rax),%esi
  0x0000000002c5887c: add    $0x8,%esi
  0x0000000002c5887f: mov    %esi,0xdc(%rax)
  0x0000000002c58885: movabs $0x1bb74fb8,%rax   ;   {metadata({method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5888f: and    $0x1ff8,%esi
  0x0000000002c58895: cmp    $0x0,%esi
  0x0000000002c58898: je     0x0000000002c589d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000002c5889e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002c588a1: cmp    $0x0,%eax
  0x0000000002c588a4: movabs $0x1bd517a8,%rsi   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c588ae: movabs $0x108,%rdi
  0x0000000002c588b8: jne    0x0000000002c588c8
  0x0000000002c588be: movabs $0x118,%rdi
  0x0000000002c588c8: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c588cc: lea    0x1(%rbx),%rbx
  0x0000000002c588d0: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c588d4: jne    0x0000000002c589c5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002c588da: mov    0xc(%rdx),%esi
  0x0000000002c588dd: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002c588e1: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002c589e8
  0x0000000002c588e4: cmp    $0x0,%edi
  0x0000000002c588e7: movabs $0x1bd517a8,%rbx   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c588f1: movabs $0x128,%rcx
  0x0000000002c588fb: jle    0x0000000002c5890b
  0x0000000002c58901: movabs $0x138,%rcx
  0x0000000002c5890b: mov    (%rbx,%rcx,1),%r8
  0x0000000002c5890f: lea    0x1(%r8),%r8
  0x0000000002c58913: mov    %r8,(%rbx,%rcx,1)
  0x0000000002c58917: jle    0x0000000002c589c5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002c5891d: mov    $0x0,%ebx
  0x0000000002c58922: jmpq   0x0000000002c5898a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002c58927: nop
  0x0000000002c58928: movslq %ebx,%rcx
  0x0000000002c5892b: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c58930: mov    %rax,%r8
  0x0000000002c58933: shl    $0x5,%eax
  0x0000000002c58936: sub    %r8d,%eax
  0x0000000002c58939: add    %ecx,%eax
  0x0000000002c5893b: inc    %ebx
  0x0000000002c5893d: movabs $0x1bd517a8,%rcx   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c58947: mov    0xe0(%rcx),%r8d
  0x0000000002c5894e: add    $0x8,%r8d
  0x0000000002c58952: mov    %r8d,0xe0(%rcx)
  0x0000000002c58959: movabs $0x1bb74fb8,%rcx   ;   {metadata({method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c58963: and    $0xfff8,%r8d
  0x0000000002c5896a: cmp    $0x0,%r8d
  0x0000000002c5896e: je     0x0000000002c589ed  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002c58974: test   %eax,-0x1e3887a(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c5897a: movabs $0x1bd517a8,%rcx   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c58984: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002c5898a: cmp    %edi,%ebx
  0x0000000002c5898c: movabs $0x1bd517a8,%rcx   ;   {metadata(method data for {method} {0x000000001bb74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c58996: movabs $0x148,%r8
  0x0000000002c589a0: jge    0x0000000002c589b0
  0x0000000002c589a6: movabs $0x158,%r8
  0x0000000002c589b0: mov    (%rcx,%r8,1),%r9
  0x0000000002c589b4: lea    0x1(%r9),%r9
  0x0000000002c589b8: mov    %r9,(%rcx,%r8,1)
  0x0000000002c589bc: jl     0x0000000002c58928  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c589c2: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002c589c5: add    $0x30,%rsp
  0x0000000002c589c9: pop    %rbp
  0x0000000002c589ca: test   %eax,-0x1e388d0(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c589d0: retq   
  0x0000000002c589d1: mov    %rax,0x8(%rsp)
  0x0000000002c589d6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c589de: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000002c589e3: jmpq   0x0000000002c5889e
  0x0000000002c589e8: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002c589ed: mov    %rcx,0x8(%rsp)
  0x0000000002c589f2: movq   $0x2d,(%rsp)
  0x0000000002c589fa: callq  0x0000000002c58220  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c589ff: jmpq   0x0000000002c58974
  0x0000000002c58a04: nop
  0x0000000002c58a05: nop
  0x0000000002c58a06: mov    0x2a8(%r15),%rax
  0x0000000002c58a0d: movabs $0x0,%r10
  0x0000000002c58a17: mov    %r10,0x2a8(%r15)
  0x0000000002c58a1e: movabs $0x0,%r10
  0x0000000002c58a28: mov    %r10,0x2b0(%r15)
  0x0000000002c58a2f: add    $0x30,%rsp
  0x0000000002c58a33: pop    %rbp
  0x0000000002c58a34: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c58a39: hlt    
  0x0000000002c58a3a: hlt    
  0x0000000002c58a3b: hlt    
  0x0000000002c58a3c: hlt    
  0x0000000002c58a3d: hlt    
  0x0000000002c58a3e: hlt    
  0x0000000002c58a3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c58a40: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c58a45: mov    %rsp,-0x28(%rsp)
  0x0000000002c58a4a: sub    $0x80,%rsp
  0x0000000002c58a51: mov    %rax,0x78(%rsp)
  0x0000000002c58a56: mov    %rcx,0x70(%rsp)
  0x0000000002c58a5b: mov    %rdx,0x68(%rsp)
  0x0000000002c58a60: mov    %rbx,0x60(%rsp)
  0x0000000002c58a65: mov    %rbp,0x50(%rsp)
  0x0000000002c58a6a: mov    %rsi,0x48(%rsp)
  0x0000000002c58a6f: mov    %rdi,0x40(%rsp)
  0x0000000002c58a74: mov    %r8,0x38(%rsp)
  0x0000000002c58a79: mov    %r9,0x30(%rsp)
  0x0000000002c58a7e: mov    %r10,0x28(%rsp)
  0x0000000002c58a83: mov    %r11,0x20(%rsp)
  0x0000000002c58a88: mov    %r12,0x18(%rsp)
  0x0000000002c58a8d: mov    %r13,0x10(%rsp)
  0x0000000002c58a92: mov    %r14,0x8(%rsp)
  0x0000000002c58a97: mov    %r15,(%rsp)
  0x0000000002c58a9b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c58aa5: movabs $0x2c58a45,%rdx    ;   {internal_word}
  0x0000000002c58aaf: mov    %rsp,%r8
  0x0000000002c58ab2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c58ab6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c58abb: hlt    
[Deopt Handler Code]
  0x0000000002c58abc: movabs $0x2c58abc,%r10    ;   {section_word}
  0x0000000002c58ac6: push   %r10
  0x0000000002c58ac8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c58acd: hlt    
  0x0000000002c58ace: hlt    
  0x0000000002c58acf: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x0000000002c58840' size='1448' address='0x0000000002c586d0' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='470' backedge_count='5985' iicount='470' stamp='0.373'/>
<writer thread='21536'/>
<task_queued compile_id='9' method='java/lang/String indexOf (II)I' bytes='70' count='269' backedge_count='6144' iicount='269' level='3' stamp='0.373' comment='tiered' hot_count='269'/>
Decoding compiled method 0x0000000002c59250:
Code:
[Entry Point]
  # {method} {0x000000001bb896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002c593c0: mov    0x8(%rdx),%r10d
  0x0000000002c593c4: shl    $0x3,%r10
  0x0000000002c593c8: cmp    %r10,%rax
  0x0000000002c593cb: je     0x0000000002c593d8
  0x0000000002c593d1: jmpq   0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c593d6: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002c593d8: mov    %eax,-0x6000(%rsp)
  0x0000000002c593df: push   %rbp
  0x0000000002c593e0: mov    %rsp,%rbp
  0x0000000002c593e3: sub    $0x80,%rsp
  0x0000000002c593ea: mov    %rsi,0x30(%rsp)
  0x0000000002c593ef: mov    %rdi,0x28(%rsp)
  0x0000000002c593f4: mov    %r9,0x48(%rsp)
  0x0000000002c593f9: cmp    $0x0,%r9
  0x0000000002c593fd: lea    0x48(%rsp),%rax
  0x0000000002c59402: cmove  0x48(%rsp),%rax
  0x0000000002c59408: mov    %rax,0x20(%rsp)
  0x0000000002c5940d: mov    %r8,%r9
  0x0000000002c59410: mov    %rdx,0x38(%rsp)
  0x0000000002c59415: cmp    $0x0,%rdx
  0x0000000002c59419: lea    0x38(%rsp),%r8
  0x0000000002c5941e: cmove  0x38(%rsp),%r8
  0x0000000002c59424: movabs $0x76b700c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002c5942e: mov    %r14,0x68(%rsp)
  0x0000000002c59433: lea    0x68(%rsp),%r14
  0x0000000002c59438: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002c5943b: movabs $0x2c5943b,%r10    ;   {section_word}
  0x0000000002c59445: mov    %r10,0x1e0(%r15)
  0x0000000002c5944c: mov    %rsp,0x1d8(%r15)
  0x0000000002c59453: cmpb   $0x0,0x67965498(%rip)        # 0x000000006a5be8f2
                                                ;   {external_word}
  0x0000000002c5945a: je     0x0000000002c594a2
  0x0000000002c59460: push   %rdx
  0x0000000002c59461: push   %r8
  0x0000000002c59463: push   %r9
  0x0000000002c59465: movabs $0x1bb896b8,%rdx   ;   {metadata({method} {0x000000001bb896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c5946f: mov    %r15,%rcx
  0x0000000002c59472: sub    $0x20,%rsp
  0x0000000002c59476: test   $0xf,%esp
  0x0000000002c5947c: je     0x0000000002c59494
  0x0000000002c59482: sub    $0x8,%rsp
  0x0000000002c59486: callq  0x0000000069fdc520  ;   {runtime_call}
  0x0000000002c5948b: add    $0x8,%rsp
  0x0000000002c5948f: jmpq   0x0000000002c59499
  0x0000000002c59494: callq  0x0000000069fdc520  ;   {runtime_call}
  0x0000000002c59499: add    $0x20,%rsp
  0x0000000002c5949d: pop    %r9
  0x0000000002c5949f: pop    %r8
  0x0000000002c594a1: pop    %rdx
  0x0000000002c594a2: lea    0x1f8(%r15),%rcx
  0x0000000002c594a9: movl   $0x4,0x270(%r15)
  0x0000000002c594b4: callq  0x000000006b2d098a  ;   {runtime_call}
  0x0000000002c594b9: vzeroupper 
  0x0000000002c594bc: movl   $0x5,0x270(%r15)
  0x0000000002c594c7: mov    %r15d,%ecx
  0x0000000002c594ca: shr    $0x4,%ecx
  0x0000000002c594cd: and    $0xffc,%ecx
  0x0000000002c594d3: movabs $0xe30000,%r10     ;   {external_word}
  0x0000000002c594dd: mov    %ecx,(%r10,%rcx,1)
  0x0000000002c594e1: cmpl   $0x0,0x67965fe5(%rip)        # 0x000000006a5bf4d0
                                                ;   {external_word}
  0x0000000002c594eb: jne    0x0000000002c594ff
  0x0000000002c594f1: cmpl   $0x0,0x30(%r15)
  0x0000000002c594f9: je     0x0000000002c59518
  0x0000000002c594ff: mov    %r15,%rcx
  0x0000000002c59502: mov    %rsp,%r12
  0x0000000002c59505: sub    $0x20,%rsp
  0x0000000002c59509: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5950d: callq  0x0000000069ff36a0  ;   {runtime_call}
  0x0000000002c59512: mov    %r12,%rsp
  0x0000000002c59515: xor    %r12,%r12
  0x0000000002c59518: movl   $0x8,0x270(%r15)
  0x0000000002c59523: cmpl   $0x1,0x29c(%r15)
  0x0000000002c5952e: je     0x0000000002c595be
  0x0000000002c59534: cmpb   $0x0,0x679653b7(%rip)        # 0x000000006a5be8f2
                                                ;   {external_word}
  0x0000000002c5953b: je     0x0000000002c59579
  0x0000000002c59541: movabs $0x1bb896b8,%rdx   ;   {metadata({method} {0x000000001bb896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c5954b: mov    %r15,%rcx
  0x0000000002c5954e: sub    $0x20,%rsp
  0x0000000002c59552: test   $0xf,%esp
  0x0000000002c59558: je     0x0000000002c59570
  0x0000000002c5955e: sub    $0x8,%rsp
  0x0000000002c59562: callq  0x0000000069fdc520  ;   {runtime_call}
  0x0000000002c59567: add    $0x8,%rsp
  0x0000000002c5956b: jmpq   0x0000000002c59575
  0x0000000002c59570: callq  0x0000000069fdc520  ;   {runtime_call}
  0x0000000002c59575: add    $0x20,%rsp
  0x0000000002c59579: movabs $0x0,%r10
  0x0000000002c59583: mov    %r10,0x1d8(%r15)
  0x0000000002c5958a: movabs $0x0,%r10
  0x0000000002c59594: mov    %r10,0x1e0(%r15)
  0x0000000002c5959b: mov    0x38(%r15),%rcx
  0x0000000002c5959f: movl   $0x0,0x100(%rcx)
  0x0000000002c595a9: leaveq 
  0x0000000002c595aa: cmpq   $0x0,0x8(%r15)
  0x0000000002c595b2: jne    0x0000000002c595b9
  0x0000000002c595b8: retq   
  0x0000000002c595b9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002c595be: mov    %rsp,%r12
  0x0000000002c595c1: sub    $0x20,%rsp
  0x0000000002c595c5: and    $0xfffffffffffffff0,%rsp
  0x0000000002c595c9: callq  0x0000000069fdc540  ;   {runtime_call}
  0x0000000002c595ce: mov    %r12,%rsp
  0x0000000002c595d1: xor    %r12,%r12
  0x0000000002c595d4: jmpq   0x0000000002c59534
  0x0000000002c595d9: hlt    
  0x0000000002c595da: hlt    
  0x0000000002c595db: hlt    
  0x0000000002c595dc: hlt    
  0x0000000002c595dd: hlt    
  0x0000000002c595de: hlt    
  0x0000000002c595df: hlt    
<nmethod compile_id='10' compile_kind='c2n' level='0' entry='0x0000000002c593c0' size='912' address='0x0000000002c59250' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='1280' iicount='1280' stamp='0.546'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5ac10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5ada0: mov    0x8(%rdx),%r10d
  0x0000000002c5ada4: shl    $0x3,%r10
  0x0000000002c5ada8: cmp    %rax,%r10
  0x0000000002c5adab: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5adb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5adbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5adc0: mov    %eax,-0x6000(%rsp)
  0x0000000002c5adc7: push   %rbp
  0x0000000002c5adc8: sub    $0x30,%rsp
  0x0000000002c5adcc: movabs $0x1bd7add8,%rax   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5add6: mov    0xdc(%rax),%esi
  0x0000000002c5addc: add    $0x8,%esi
  0x0000000002c5addf: mov    %esi,0xdc(%rax)
  0x0000000002c5ade5: movabs $0x1bb75138,%rax   ;   {metadata({method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5adef: and    $0x1ff8,%esi
  0x0000000002c5adf5: cmp    $0x0,%esi
  0x0000000002c5adf8: je     0x0000000002c5b011  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000002c5adfe: mov    0xc(%rdx),%eax
  0x0000000002c5ae01: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002c5ae05: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002c5b028
  0x0000000002c5ae08: cmp    $0x0,%r9d
  0x0000000002c5ae0c: movabs $0x1bd7add8,%rdi   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ae16: movabs $0x108,%rbx
  0x0000000002c5ae20: jge    0x0000000002c5ae30
  0x0000000002c5ae26: movabs $0x118,%rbx
  0x0000000002c5ae30: mov    (%rdi,%rbx,1),%rcx
  0x0000000002c5ae34: lea    0x1(%rcx),%rcx
  0x0000000002c5ae38: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002c5ae3c: jge    0x0000000002c5ae5e  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002c5ae42: movabs $0x1bd7add8,%r9    ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ae4c: incl   0x128(%r9)
  0x0000000002c5ae53: mov    $0x0,%r9d
  0x0000000002c5ae59: jmpq   0x0000000002c5ae97  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000002c5ae5e: cmp    %esi,%r9d
  0x0000000002c5ae61: movabs $0x1bd7add8,%rdi   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ae6b: movabs $0x140,%rbx
  0x0000000002c5ae75: jl     0x0000000002c5ae85
  0x0000000002c5ae7b: movabs $0x150,%rbx
  0x0000000002c5ae85: mov    (%rdi,%rbx,1),%rcx
  0x0000000002c5ae89: lea    0x1(%rcx),%rcx
  0x0000000002c5ae8d: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002c5ae91: jge    0x0000000002c5b000  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002c5ae97: cmp    $0x10000,%r8d
  0x0000000002c5ae9e: movabs $0x1bd7add8,%rdi   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5aea8: movabs $0x160,%rbx
  0x0000000002c5aeb2: jge    0x0000000002c5aec2
  0x0000000002c5aeb8: movabs $0x170,%rbx
  0x0000000002c5aec2: mov    (%rdi,%rbx,1),%rcx
  0x0000000002c5aec6: lea    0x1(%rcx),%rcx
  0x0000000002c5aeca: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002c5aece: jge    0x0000000002c5afd4
  0x0000000002c5aed4: jmpq   0x0000000002c5af76  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002c5aed9: nopl   0x0(%rax)
  0x0000000002c5aee0: movslq %r9d,%rdx
  0x0000000002c5aee3: cmp    0xc(%rax),%r9d
  0x0000000002c5aee7: jae    0x0000000002c5b02d
  0x0000000002c5aeed: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c5aef2: cmp    %r8d,%edx
  0x0000000002c5aef5: movabs $0x1bd7add8,%rdx   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5aeff: movabs $0x1a0,%rdi
  0x0000000002c5af09: jne    0x0000000002c5af19
  0x0000000002c5af0f: movabs $0x1b0,%rdi
  0x0000000002c5af19: mov    (%rdx,%rdi,1),%rbx
  0x0000000002c5af1d: lea    0x1(%rbx),%rbx
  0x0000000002c5af21: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002c5af25: je     0x0000000002c5afb4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c5af2b: inc    %r9d
  0x0000000002c5af2e: movabs $0x1bd7add8,%rdx   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5af38: mov    0xe0(%rdx),%edi
  0x0000000002c5af3e: add    $0x8,%edi
  0x0000000002c5af41: mov    %edi,0xe0(%rdx)
  0x0000000002c5af47: movabs $0x1bb75138,%rdx   ;   {metadata({method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5af51: and    $0xfff8,%edi
  0x0000000002c5af57: cmp    $0x0,%edi
  0x0000000002c5af5a: je     0x0000000002c5b036  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002c5af60: test   %eax,-0x1e3ae66(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c5af66: movabs $0x1bd7add8,%rdx   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5af70: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002c5af76: cmp    %esi,%r9d
  0x0000000002c5af79: movabs $0x1bd7add8,%rdx   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5af83: movabs $0x180,%rdi
  0x0000000002c5af8d: jge    0x0000000002c5af9d
  0x0000000002c5af93: movabs $0x190,%rdi
  0x0000000002c5af9d: mov    (%rdx,%rdi,1),%rbx
  0x0000000002c5afa1: lea    0x1(%rbx),%rbx
  0x0000000002c5afa5: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002c5afa9: jge    0x0000000002c5afc3
  0x0000000002c5afaf: jmpq   0x0000000002c5aee0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c5afb4: mov    %r9,%rax
  0x0000000002c5afb7: add    $0x30,%rsp
  0x0000000002c5afbb: pop    %rbp
  0x0000000002c5afbc: test   %eax,-0x1e3aec2(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5afc2: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000002c5afc3: mov    $0xffffffff,%eax
  0x0000000002c5afc8: add    $0x30,%rsp
  0x0000000002c5afcc: pop    %rbp
  0x0000000002c5afcd: test   %eax,-0x1e3aed3(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5afd3: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000002c5afd4: mov    %rdx,%rsi
  0x0000000002c5afd7: movabs $0x1bd7add8,%rdi   ;   {metadata(method data for {method} {0x000000001bb75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5afe1: addq   $0x1,0x1d8(%rdi)
  0x0000000002c5afe9: nop
  0x0000000002c5afea: nop
  0x0000000002c5afeb: nop
  0x0000000002c5afec: nop
  0x0000000002c5afed: nop
  0x0000000002c5afee: nop
  0x0000000002c5afef: callq  0x0000000002b961a0  ; OopMap{off=596}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000002c5aff4: add    $0x30,%rsp
  0x0000000002c5aff8: pop    %rbp
  0x0000000002c5aff9: test   %eax,-0x1e3aeff(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5afff: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000002c5b000: mov    $0xffffffff,%eax
  0x0000000002c5b005: add    $0x30,%rsp
  0x0000000002c5b009: pop    %rbp
  0x0000000002c5b00a: test   %eax,-0x1e3af10(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5b010: retq   
  0x0000000002c5b011: mov    %rax,0x8(%rsp)
  0x0000000002c5b016: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5b01e: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=643}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000002c5b023: jmpq   0x0000000002c5adfe
  0x0000000002c5b028: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rax=Oop off=653}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002c5b02d: mov    %r9,(%rsp)
  0x0000000002c5b031: callq  0x0000000002c53300  ; OopMap{rax=Oop off=662}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002c5b036: mov    %rdx,0x8(%rsp)
  0x0000000002c5b03b: movq   $0x3a,(%rsp)
  0x0000000002c5b043: callq  0x0000000002c58220  ; OopMap{rax=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000002c5b048: jmpq   0x0000000002c5af60
  0x0000000002c5b04d: nop
  0x0000000002c5b04e: nop
  0x0000000002c5b04f: mov    0x2a8(%r15),%rax
  0x0000000002c5b056: movabs $0x0,%r10
  0x0000000002c5b060: mov    %r10,0x2a8(%r15)
  0x0000000002c5b067: movabs $0x0,%r10
  0x0000000002c5b071: mov    %r10,0x2b0(%r15)
  0x0000000002c5b078: add    $0x30,%rsp
  0x0000000002c5b07c: pop    %rbp
  0x0000000002c5b07d: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5b082: hlt    
  0x0000000002c5b083: hlt    
  0x0000000002c5b084: hlt    
  0x0000000002c5b085: hlt    
  0x0000000002c5b086: hlt    
  0x0000000002c5b087: hlt    
  0x0000000002c5b088: hlt    
  0x0000000002c5b089: hlt    
  0x0000000002c5b08a: hlt    
  0x0000000002c5b08b: hlt    
  0x0000000002c5b08c: hlt    
  0x0000000002c5b08d: hlt    
  0x0000000002c5b08e: hlt    
  0x0000000002c5b08f: hlt    
  0x0000000002c5b090: hlt    
  0x0000000002c5b091: hlt    
  0x0000000002c5b092: hlt    
  0x0000000002c5b093: hlt    
  0x0000000002c5b094: hlt    
  0x0000000002c5b095: hlt    
  0x0000000002c5b096: hlt    
  0x0000000002c5b097: hlt    
  0x0000000002c5b098: hlt    
  0x0000000002c5b099: hlt    
  0x0000000002c5b09a: hlt    
  0x0000000002c5b09b: hlt    
  0x0000000002c5b09c: hlt    
  0x0000000002c5b09d: hlt    
  0x0000000002c5b09e: hlt    
  0x0000000002c5b09f: hlt    
[Stub Code]
  0x0000000002c5b0a0: nop                       ;   {no_reloc}
  0x0000000002c5b0a1: nop
  0x0000000002c5b0a2: nop
  0x0000000002c5b0a3: nop
  0x0000000002c5b0a4: nop
  0x0000000002c5b0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5b0af: jmpq   0x0000000002c5b0af  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5b0b4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5b0b9: mov    %rsp,-0x28(%rsp)
  0x0000000002c5b0be: sub    $0x80,%rsp
  0x0000000002c5b0c5: mov    %rax,0x78(%rsp)
  0x0000000002c5b0ca: mov    %rcx,0x70(%rsp)
  0x0000000002c5b0cf: mov    %rdx,0x68(%rsp)
  0x0000000002c5b0d4: mov    %rbx,0x60(%rsp)
  0x0000000002c5b0d9: mov    %rbp,0x50(%rsp)
  0x0000000002c5b0de: mov    %rsi,0x48(%rsp)
  0x0000000002c5b0e3: mov    %rdi,0x40(%rsp)
  0x0000000002c5b0e8: mov    %r8,0x38(%rsp)
  0x0000000002c5b0ed: mov    %r9,0x30(%rsp)
  0x0000000002c5b0f2: mov    %r10,0x28(%rsp)
  0x0000000002c5b0f7: mov    %r11,0x20(%rsp)
  0x0000000002c5b0fc: mov    %r12,0x18(%rsp)
  0x0000000002c5b101: mov    %r13,0x10(%rsp)
  0x0000000002c5b106: mov    %r14,0x8(%rsp)
  0x0000000002c5b10b: mov    %r15,(%rsp)
  0x0000000002c5b10f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5b119: movabs $0x2c5b0b9,%rdx    ;   {internal_word}
  0x0000000002c5b123: mov    %rsp,%r8
  0x0000000002c5b126: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5b12a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5b12f: hlt    
[Deopt Handler Code]
  0x0000000002c5b130: movabs $0x2c5b130,%r10    ;   {section_word}
  0x0000000002c5b13a: push   %r10
  0x0000000002c5b13c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5b141: hlt    
  0x0000000002c5b142: hlt    
  0x0000000002c5b143: hlt    
  0x0000000002c5b144: hlt    
  0x0000000002c5b145: hlt    
  0x0000000002c5b146: hlt    
  0x0000000002c5b147: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000002c5ada0' size='1880' address='0x0000000002c5ac10' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1344' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String indexOf (II)I' bytes='70' count='360' backedge_count='10284' iicount='360' stamp='0.823'/>
<writer thread='21536'/>
<task_queued compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='384' iicount='384' level='3' stamp='0.823' comment='tiered' hot_count='384'/>
<task_queued compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='384' iicount='384' level='3' stamp='0.823' comment='tiered' hot_count='384'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5cb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5cca0: mov    0x8(%rdx),%r10d
  0x0000000002c5cca4: shl    $0x3,%r10
  0x0000000002c5cca8: cmp    %rax,%r10
  0x0000000002c5ccab: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5ccb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5ccbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5ccc0: mov    %eax,-0x6000(%rsp)
  0x0000000002c5ccc7: push   %rbp
  0x0000000002c5ccc8: sub    $0x30,%rsp
  0x0000000002c5cccc: movabs $0x1bd7b228,%rax   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ccd6: mov    0xdc(%rax),%esi
  0x0000000002c5ccdc: add    $0x8,%esi
  0x0000000002c5ccdf: mov    %esi,0xdc(%rax)
  0x0000000002c5cce5: movabs $0x1bb745d0,%rax   ;   {metadata({method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ccef: and    $0x1ff8,%esi
  0x0000000002c5ccf5: cmp    $0x0,%esi
  0x0000000002c5ccf8: je     0x0000000002c5d0ce  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000002c5ccfe: cmp    %r8,%rdx
  0x0000000002c5cd01: movabs $0x1bd7b228,%rax   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cd0b: movabs $0x108,%rsi
  0x0000000002c5cd15: jne    0x0000000002c5cd25
  0x0000000002c5cd1b: movabs $0x118,%rsi
  0x0000000002c5cd25: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5cd29: lea    0x1(%rdi),%rdi
  0x0000000002c5cd2d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5cd31: je     0x0000000002c5d0bd  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002c5cd37: cmp    $0x0,%r8
  0x0000000002c5cd3b: jne    0x0000000002c5cd56
  0x0000000002c5cd3d: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cd47: orl    $0x100,0x120(%rdi)
  0x0000000002c5cd51: jmpq   0x0000000002c5ce18
  0x0000000002c5cd56: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c5cd60: mov    0x8(%r8),%esi
  0x0000000002c5cd64: shl    $0x3,%rsi
  0x0000000002c5cd68: cmp    %rsi,%rbx
  0x0000000002c5cd6b: jne    0x0000000002c5cdfc
  0x0000000002c5cd71: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cd7b: mov    0x8(%r8),%ebx
  0x0000000002c5cd7f: shl    $0x3,%rbx
  0x0000000002c5cd83: cmp    0x130(%rdi),%rbx
  0x0000000002c5cd8a: jne    0x0000000002c5cd99
  0x0000000002c5cd8c: addq   $0x1,0x138(%rdi)
  0x0000000002c5cd94: jmpq   0x0000000002c5ce1d
  0x0000000002c5cd99: cmp    0x140(%rdi),%rbx
  0x0000000002c5cda0: jne    0x0000000002c5cdaf
  0x0000000002c5cda2: addq   $0x1,0x148(%rdi)
  0x0000000002c5cdaa: jmpq   0x0000000002c5ce1d
  0x0000000002c5cdaf: cmpq   $0x0,0x130(%rdi)
  0x0000000002c5cdba: jne    0x0000000002c5cdd3
  0x0000000002c5cdbc: mov    %rbx,0x130(%rdi)
  0x0000000002c5cdc3: movq   $0x1,0x138(%rdi)
  0x0000000002c5cdce: jmpq   0x0000000002c5ce1d
  0x0000000002c5cdd3: cmpq   $0x0,0x140(%rdi)
  0x0000000002c5cdde: jne    0x0000000002c5cdf7
  0x0000000002c5cde0: mov    %rbx,0x140(%rdi)
  0x0000000002c5cde7: movq   $0x1,0x148(%rdi)
  0x0000000002c5cdf2: jmpq   0x0000000002c5ce1d
  0x0000000002c5cdf7: jmpq   0x0000000002c5ce1d
  0x0000000002c5cdfc: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ce06: subq   $0x1,0x128(%rdi)
  0x0000000002c5ce0e: jmpq   0x0000000002c5ce18
  0x0000000002c5ce13: jmpq   0x0000000002c5ce1d
  0x0000000002c5ce18: xor    %rax,%rax
  0x0000000002c5ce1b: jmp    0x0000000002c5ce27
  0x0000000002c5ce1d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002c5ce27: cmp    $0x0,%eax
  0x0000000002c5ce2a: movabs $0x1bd7b228,%rax   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ce34: movabs $0x158,%rsi
  0x0000000002c5ce3e: je     0x0000000002c5ce4e
  0x0000000002c5ce44: movabs $0x168,%rsi
  0x0000000002c5ce4e: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5ce52: lea    0x1(%rdi),%rdi
  0x0000000002c5ce56: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5ce5a: je     0x0000000002c5d0ac  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000002c5ce60: cmp    $0x0,%r8
  0x0000000002c5ce64: jne    0x0000000002c5ce7f
  0x0000000002c5ce66: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5ce70: orl    $0x100,0x170(%rdi)
  0x0000000002c5ce7a: jmpq   0x0000000002c5cf41
  0x0000000002c5ce7f: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c5ce89: mov    0x8(%r8),%esi
  0x0000000002c5ce8d: shl    $0x3,%rsi
  0x0000000002c5ce91: cmp    %rsi,%rbx
  0x0000000002c5ce94: jne    0x0000000002c5cf25
  0x0000000002c5ce9a: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cea4: mov    0x8(%r8),%ebx
  0x0000000002c5cea8: shl    $0x3,%rbx
  0x0000000002c5ceac: cmp    0x180(%rdi),%rbx
  0x0000000002c5ceb3: jne    0x0000000002c5cec2
  0x0000000002c5ceb5: addq   $0x1,0x188(%rdi)
  0x0000000002c5cebd: jmpq   0x0000000002c5cf41
  0x0000000002c5cec2: cmp    0x190(%rdi),%rbx
  0x0000000002c5cec9: jne    0x0000000002c5ced8
  0x0000000002c5cecb: addq   $0x1,0x198(%rdi)
  0x0000000002c5ced3: jmpq   0x0000000002c5cf41
  0x0000000002c5ced8: cmpq   $0x0,0x180(%rdi)
  0x0000000002c5cee3: jne    0x0000000002c5cefc
  0x0000000002c5cee5: mov    %rbx,0x180(%rdi)
  0x0000000002c5ceec: movq   $0x1,0x188(%rdi)
  0x0000000002c5cef7: jmpq   0x0000000002c5cf41
  0x0000000002c5cefc: cmpq   $0x0,0x190(%rdi)
  0x0000000002c5cf07: jne    0x0000000002c5cf20
  0x0000000002c5cf09: mov    %rbx,0x190(%rdi)
  0x0000000002c5cf10: movq   $0x1,0x198(%rdi)
  0x0000000002c5cf1b: jmpq   0x0000000002c5cf41
  0x0000000002c5cf20: jmpq   0x0000000002c5cf41
  0x0000000002c5cf25: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cf2f: subq   $0x1,0x178(%rdi)
  0x0000000002c5cf37: jmpq   0x0000000002c5d0e5
  0x0000000002c5cf3c: jmpq   0x0000000002c5cf41
  0x0000000002c5cf41: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000002c5cf44: mov    0xc(%rdx),%esi
  0x0000000002c5cf47: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002c5cf4b: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000002c5d0ee
  0x0000000002c5cf4e: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002c5d0f3
  0x0000000002c5cf51: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002c5cf55: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002c5d0f8
  0x0000000002c5cf58: cmp    %ebx,%edi
  0x0000000002c5cf5a: movabs $0x1bd7b228,%rbx   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cf64: movabs $0x1a8,%rdx
  0x0000000002c5cf6e: jne    0x0000000002c5cf7e
  0x0000000002c5cf74: movabs $0x1b8,%rdx
  0x0000000002c5cf7e: mov    (%rbx,%rdx,1),%rcx
  0x0000000002c5cf82: lea    0x1(%rcx),%rcx
  0x0000000002c5cf86: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002c5cf8a: jne    0x0000000002c5d0ac  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000002c5cf90: mov    $0x0,%ebx
  0x0000000002c5cf95: jmpq   0x0000000002c5d047  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000002c5cf9a: nopw   0x0(%rax,%rax,1)
  0x0000000002c5cfa0: movslq %ebx,%rdi
  0x0000000002c5cfa3: cmp    0xc(%rsi),%ebx
  0x0000000002c5cfa6: jae    0x0000000002c5d0fd
  0x0000000002c5cfac: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c5cfb1: movslq %ebx,%rcx
  0x0000000002c5cfb4: cmp    0xc(%rax),%ebx
  0x0000000002c5cfb7: jae    0x0000000002c5d106
  0x0000000002c5cfbd: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c5cfc2: cmp    %ecx,%edi
  0x0000000002c5cfc4: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5cfce: movabs $0x1e8,%rcx
  0x0000000002c5cfd8: je     0x0000000002c5cfe8
  0x0000000002c5cfde: movabs $0x1f8,%rcx
  0x0000000002c5cfe8: mov    (%rdi,%rcx,1),%r8
  0x0000000002c5cfec: lea    0x1(%r8),%r8
  0x0000000002c5cff0: mov    %r8,(%rdi,%rcx,1)
  0x0000000002c5cff4: jne    0x0000000002c5d08a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c5cffa: inc    %ebx
  0x0000000002c5cffc: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5d006: mov    0xe0(%rdi),%ecx
  0x0000000002c5d00c: add    $0x8,%ecx
  0x0000000002c5d00f: mov    %ecx,0xe0(%rdi)
  0x0000000002c5d015: movabs $0x1bb745d0,%rdi   ;   {metadata({method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5d01f: and    $0xfff8,%ecx
  0x0000000002c5d025: cmp    $0x0,%ecx
  0x0000000002c5d028: je     0x0000000002c5d10f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002c5d02e: test   %eax,-0x1e3cf34(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c5d034: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5d03e: incl   0x208(%rdi)
  0x0000000002c5d044: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002c5d047: mov    %rdi,%rdx
  0x0000000002c5d04a: dec    %edx
  0x0000000002c5d04c: cmp    $0x0,%edi
  0x0000000002c5d04f: movabs $0x1bd7b228,%rdi   ;   {metadata(method data for {method} {0x000000001bb745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5d059: movabs $0x1c8,%rcx
  0x0000000002c5d063: je     0x0000000002c5d073
  0x0000000002c5d069: movabs $0x1d8,%rcx
  0x0000000002c5d073: mov    (%rdi,%rcx,1),%r8
  0x0000000002c5d077: lea    0x1(%r8),%r8
  0x0000000002c5d07b: mov    %r8,(%rdi,%rcx,1)
  0x0000000002c5d07f: je     0x0000000002c5d09b
  0x0000000002c5d085: jmpq   0x0000000002c5cfa0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002c5d08a: mov    $0x0,%eax
  0x0000000002c5d08f: add    $0x30,%rsp
  0x0000000002c5d093: pop    %rbp
  0x0000000002c5d094: test   %eax,-0x1e3cf9a(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5d09a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000002c5d09b: mov    $0x1,%eax
  0x0000000002c5d0a0: add    $0x30,%rsp
  0x0000000002c5d0a4: pop    %rbp
  0x0000000002c5d0a5: test   %eax,-0x1e3cfab(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5d0ab: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000002c5d0ac: mov    $0x0,%eax
  0x0000000002c5d0b1: add    $0x30,%rsp
  0x0000000002c5d0b5: pop    %rbp
  0x0000000002c5d0b6: test   %eax,-0x1e3cfbc(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5d0bc: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000002c5d0bd: mov    $0x1,%eax
  0x0000000002c5d0c2: add    $0x30,%rsp
  0x0000000002c5d0c6: pop    %rbp
  0x0000000002c5d0c7: test   %eax,-0x1e3cfcd(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5d0cd: retq   
  0x0000000002c5d0ce: mov    %rax,0x8(%rsp)
  0x0000000002c5d0d3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5d0db: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000002c5d0e0: jmpq   0x0000000002c5ccfe
  0x0000000002c5d0e5: mov    %r8,(%rsp)
  0x0000000002c5d0e9: callq  0x0000000002c55d40  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000002c5d0ee: callq  0x0000000002c539c0  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002c5d0f3: callq  0x0000000002c539c0  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000002c5d0f8: callq  0x0000000002c539c0  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002c5d0fd: mov    %rbx,(%rsp)
  0x0000000002c5d101: callq  0x0000000002c53300  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002c5d106: mov    %rbx,(%rsp)
  0x0000000002c5d10a: callq  0x0000000002c53300  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002c5d10f: mov    %rdi,0x8(%rsp)
  0x0000000002c5d114: movq   $0x4a,(%rsp)
  0x0000000002c5d11c: callq  0x0000000002c58220  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000002c5d121: jmpq   0x0000000002c5d02e
  0x0000000002c5d126: nop
  0x0000000002c5d127: nop
  0x0000000002c5d128: mov    0x2a8(%r15),%rax
  0x0000000002c5d12f: movabs $0x0,%r10
  0x0000000002c5d139: mov    %r10,0x2a8(%r15)
  0x0000000002c5d140: movabs $0x0,%r10
  0x0000000002c5d14a: mov    %r10,0x2b0(%r15)
  0x0000000002c5d151: add    $0x30,%rsp
  0x0000000002c5d155: pop    %rbp
  0x0000000002c5d156: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5d15b: hlt    
  0x0000000002c5d15c: hlt    
  0x0000000002c5d15d: hlt    
  0x0000000002c5d15e: hlt    
  0x0000000002c5d15f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5d160: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5d165: mov    %rsp,-0x28(%rsp)
  0x0000000002c5d16a: sub    $0x80,%rsp
  0x0000000002c5d171: mov    %rax,0x78(%rsp)
  0x0000000002c5d176: mov    %rcx,0x70(%rsp)
  0x0000000002c5d17b: mov    %rdx,0x68(%rsp)
  0x0000000002c5d180: mov    %rbx,0x60(%rsp)
  0x0000000002c5d185: mov    %rbp,0x50(%rsp)
  0x0000000002c5d18a: mov    %rsi,0x48(%rsp)
  0x0000000002c5d18f: mov    %rdi,0x40(%rsp)
  0x0000000002c5d194: mov    %r8,0x38(%rsp)
  0x0000000002c5d199: mov    %r9,0x30(%rsp)
  0x0000000002c5d19e: mov    %r10,0x28(%rsp)
  0x0000000002c5d1a3: mov    %r11,0x20(%rsp)
  0x0000000002c5d1a8: mov    %r12,0x18(%rsp)
  0x0000000002c5d1ad: mov    %r13,0x10(%rsp)
  0x0000000002c5d1b2: mov    %r14,0x8(%rsp)
  0x0000000002c5d1b7: mov    %r15,(%rsp)
  0x0000000002c5d1bb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5d1c5: movabs $0x2c5d165,%rdx    ;   {internal_word}
  0x0000000002c5d1cf: mov    %rsp,%r8
  0x0000000002c5d1d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5d1d6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5d1db: hlt    
[Deopt Handler Code]
  0x0000000002c5d1dc: movabs $0x2c5d1dc,%r10    ;   {section_word}
  0x0000000002c5d1e6: push   %r10
  0x0000000002c5d1e8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5d1ed: hlt    
  0x0000000002c5d1ee: hlt    
  0x0000000002c5d1ef: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002c5cca0' size='2504' address='0x0000000002c5cb10' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='280' backedge_count='1302' iicount='280' stamp='1.216'/>
Decoding compiled method 0x0000000002c5a8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002c5aa20: mov    0x8(%rdx),%r10d
  0x0000000002c5aa24: shl    $0x3,%r10
  0x0000000002c5aa28: cmp    %rax,%r10
  0x0000000002c5aa2b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5aa31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5aa3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5aa40: mov    %eax,-0x6000(%rsp)
  0x0000000002c5aa47: push   %rbp
  0x0000000002c5aa48: sub    $0x50,%rsp
  0x0000000002c5aa4c: movabs $0x1bca3718,%rcx   ;   {metadata(method data for {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c5aa56: mov    0xdc(%rcx),%esi
  0x0000000002c5aa5c: add    $0x8,%esi
  0x0000000002c5aa5f: mov    %esi,0xdc(%rcx)
  0x0000000002c5aa65: movabs $0x1bb70480,%rcx   ;   {metadata({method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c5aa6f: and    $0x1ff8,%esi
  0x0000000002c5aa75: cmp    $0x0,%esi
  0x0000000002c5aa78: je     0x0000000002c5aa97
  0x0000000002c5aa7e: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002c5aa81: mov    %rdx,0x40(%rsp)
  0x0000000002c5aa86: callq  0x0000000002c53be0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002c5aa8b: add    $0x50,%rsp
  0x0000000002c5aa8f: pop    %rbp
  0x0000000002c5aa90: test   %eax,-0x1e3a996(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5aa96: retq   
  0x0000000002c5aa97: mov    %rcx,0x8(%rsp)
  0x0000000002c5aa9c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5aaa4: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000002c5aaa9: jmp    0x0000000002c5aa7e
  0x0000000002c5aaab: nop
  0x0000000002c5aaac: nop
  0x0000000002c5aaad: mov    0x2a8(%r15),%rax
  0x0000000002c5aab4: movabs $0x0,%r10
  0x0000000002c5aabe: mov    %r10,0x2a8(%r15)
  0x0000000002c5aac5: movabs $0x0,%r10
  0x0000000002c5aacf: mov    %r10,0x2b0(%r15)
  0x0000000002c5aad6: add    $0x50,%rsp
  0x0000000002c5aada: pop    %rbp
  0x0000000002c5aadb: jmpq   0x0000000002c52f60  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002c5aae0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5aae5: mov    %rsp,-0x28(%rsp)
  0x0000000002c5aaea: sub    $0x80,%rsp
  0x0000000002c5aaf1: mov    %rax,0x78(%rsp)
  0x0000000002c5aaf6: mov    %rcx,0x70(%rsp)
  0x0000000002c5aafb: mov    %rdx,0x68(%rsp)
  0x0000000002c5ab00: mov    %rbx,0x60(%rsp)
  0x0000000002c5ab05: mov    %rbp,0x50(%rsp)
  0x0000000002c5ab0a: mov    %rsi,0x48(%rsp)
  0x0000000002c5ab0f: mov    %rdi,0x40(%rsp)
  0x0000000002c5ab14: mov    %r8,0x38(%rsp)
  0x0000000002c5ab19: mov    %r9,0x30(%rsp)
  0x0000000002c5ab1e: mov    %r10,0x28(%rsp)
  0x0000000002c5ab23: mov    %r11,0x20(%rsp)
  0x0000000002c5ab28: mov    %r12,0x18(%rsp)
  0x0000000002c5ab2d: mov    %r13,0x10(%rsp)
  0x0000000002c5ab32: mov    %r14,0x8(%rsp)
  0x0000000002c5ab37: mov    %r15,(%rsp)
  0x0000000002c5ab3b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5ab45: movabs $0x2c5aae5,%rdx    ;   {internal_word}
  0x0000000002c5ab4f: mov    %rsp,%r8
  0x0000000002c5ab52: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5ab56: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5ab5b: hlt    
[Deopt Handler Code]
  0x0000000002c5ab5c: movabs $0x2c5ab5c,%r10    ;   {section_word}
  0x0000000002c5ab66: push   %r10
  0x0000000002c5ab68: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5ab6d: hlt    
  0x0000000002c5ab6e: hlt    
  0x0000000002c5ab6f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002c5aa20' size='800' address='0x0000000002c5a8d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2610' iicount='2610' stamp='1.308'/>
<writer thread='21536'/>
<task_queued compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='88704' iicount='88704' stamp='1.308' comment='tiered' hot_count='88704'/>
<task_queued compile_id='14' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='1.308' comment='tiered' hot_count='9984'/>
<task_queued compile_id='15' method='java/lang/String length ()I' bytes='6' count='26368' iicount='26368' stamp='1.309' comment='tiered' hot_count='26368'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5a510:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5a660: mov    %eax,-0x6000(%rsp)
  0x0000000002c5a667: push   %rbp
  0x0000000002c5a668: sub    $0x30,%rsp
  0x0000000002c5a66c: movabs $0x1bd7ac78,%rax   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5a676: mov    0xdc(%rax),%esi
  0x0000000002c5a67c: add    $0x8,%esi
  0x0000000002c5a67f: mov    %esi,0xdc(%rax)
  0x0000000002c5a685: movabs $0x1bc64608,%rax   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5a68f: and    $0x1ff8,%esi
  0x0000000002c5a695: cmp    $0x0,%esi
  0x0000000002c5a698: je     0x0000000002c5a6fe  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000002c5a69e: cmp    %r8d,%edx
  0x0000000002c5a6a1: movabs $0x1bd7ac78,%rax   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5a6ab: movabs $0x108,%rsi
  0x0000000002c5a6b5: jg     0x0000000002c5a6c5
  0x0000000002c5a6bb: movabs $0x118,%rsi
  0x0000000002c5a6c5: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5a6c9: lea    0x1(%rdi),%rdi
  0x0000000002c5a6cd: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5a6d1: jg     0x0000000002c5a6ec  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000002c5a6d7: movabs $0x1bd7ac78,%rax   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5a6e1: incl   0x128(%rax)
  0x0000000002c5a6e7: jmpq   0x0000000002c5a6ef  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000002c5a6ec: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002c5a6ef: mov    %rdx,%rax
  0x0000000002c5a6f2: add    $0x30,%rsp
  0x0000000002c5a6f6: pop    %rbp
  0x0000000002c5a6f7: test   %eax,-0x1e3a5fd(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5a6fd: retq   
  0x0000000002c5a6fe: mov    %rax,0x8(%rsp)
  0x0000000002c5a703: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5a70b: callq  0x0000000002c58220  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000002c5a710: jmp    0x0000000002c5a69e
  0x0000000002c5a712: nop
  0x0000000002c5a713: nop
  0x0000000002c5a714: mov    0x2a8(%r15),%rax
  0x0000000002c5a71b: movabs $0x0,%r10
  0x0000000002c5a725: mov    %r10,0x2a8(%r15)
  0x0000000002c5a72c: movabs $0x0,%r10
  0x0000000002c5a736: mov    %r10,0x2b0(%r15)
  0x0000000002c5a73d: add    $0x30,%rsp
  0x0000000002c5a741: pop    %rbp
  0x0000000002c5a742: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5a747: hlt    
  0x0000000002c5a748: hlt    
  0x0000000002c5a749: hlt    
  0x0000000002c5a74a: hlt    
  0x0000000002c5a74b: hlt    
  0x0000000002c5a74c: hlt    
  0x0000000002c5a74d: hlt    
  0x0000000002c5a74e: hlt    
  0x0000000002c5a74f: hlt    
  0x0000000002c5a750: hlt    
  0x0000000002c5a751: hlt    
  0x0000000002c5a752: hlt    
  0x0000000002c5a753: hlt    
  0x0000000002c5a754: hlt    
  0x0000000002c5a755: hlt    
  0x0000000002c5a756: hlt    
  0x0000000002c5a757: hlt    
  0x0000000002c5a758: hlt    
  0x0000000002c5a759: hlt    
  0x0000000002c5a75a: hlt    
  0x0000000002c5a75b: hlt    
  0x0000000002c5a75c: hlt    
  0x0000000002c5a75d: hlt    
  0x0000000002c5a75e: hlt    
  0x0000000002c5a75f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5a760: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5a765: mov    %rsp,-0x28(%rsp)
  0x0000000002c5a76a: sub    $0x80,%rsp
  0x0000000002c5a771: mov    %rax,0x78(%rsp)
  0x0000000002c5a776: mov    %rcx,0x70(%rsp)
  0x0000000002c5a77b: mov    %rdx,0x68(%rsp)
  0x0000000002c5a780: mov    %rbx,0x60(%rsp)
  0x0000000002c5a785: mov    %rbp,0x50(%rsp)
  0x0000000002c5a78a: mov    %rsi,0x48(%rsp)
  0x0000000002c5a78f: mov    %rdi,0x40(%rsp)
  0x0000000002c5a794: mov    %r8,0x38(%rsp)
  0x0000000002c5a799: mov    %r9,0x30(%rsp)
  0x0000000002c5a79e: mov    %r10,0x28(%rsp)
  0x0000000002c5a7a3: mov    %r11,0x20(%rsp)
  0x0000000002c5a7a8: mov    %r12,0x18(%rsp)
  0x0000000002c5a7ad: mov    %r13,0x10(%rsp)
  0x0000000002c5a7b2: mov    %r14,0x8(%rsp)
  0x0000000002c5a7b7: mov    %r15,(%rsp)
  0x0000000002c5a7bb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5a7c5: movabs $0x2c5a765,%rdx    ;   {internal_word}
  0x0000000002c5a7cf: mov    %rsp,%r8
  0x0000000002c5a7d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5a7d6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5a7db: hlt    
[Deopt Handler Code]
  0x0000000002c5a7dc: movabs $0x2c5a7dc,%r10    ;   {section_word}
  0x0000000002c5a7e6: push   %r10
  0x0000000002c5a7e8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5a7ed: hlt    
  0x0000000002c5a7ee: hlt    
  0x0000000002c5a7ef: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002c5a660' size='904' address='0x0000000002c5a510' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='641' iicount='641' stamp='1.460'/>
<writer thread='21536'/>
<task_queued compile_id='16' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='768' iicount='768' level='3' stamp='1.460' comment='tiered' hot_count='768'/>
<task_queued compile_id='17' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='768' iicount='768' level='3' stamp='1.460' comment='tiered' hot_count='768'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c59a50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd3e990} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c59c00: mov    %eax,-0x6000(%rsp)
  0x0000000002c59c07: push   %rbp
  0x0000000002c59c08: sub    $0x30,%rsp
  0x0000000002c59c0c: movabs $0x1bd423b0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e990} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002c59c16: mov    0xdc(%rax),%esi
  0x0000000002c59c1c: add    $0x8,%esi
  0x0000000002c59c1f: mov    %esi,0xdc(%rax)
  0x0000000002c59c25: movabs $0x1bd3e988,%rax   ;   {metadata({method} {0x000000001bd3e990} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002c59c2f: and    $0x1ff8,%esi
  0x0000000002c59c35: cmp    $0x0,%esi
  0x0000000002c59c38: je     0x0000000002c59dbc  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000002c59c3e: mov    %rdx,%rax
  0x0000000002c59c41: shr    $0x8,%eax
  0x0000000002c59c44: cmp    $0x0,%eax
  0x0000000002c59c47: movabs $0x1bd423b0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e990} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002c59c51: movabs $0x108,%rsi
  0x0000000002c59c5b: jne    0x0000000002c59c6b
  0x0000000002c59c61: movabs $0x118,%rsi
  0x0000000002c59c6b: mov    (%rax,%rsi,1),%rdi
  0x0000000002c59c6f: lea    0x1(%rdi),%rdi
  0x0000000002c59c73: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c59c77: je     0x0000000002c59da6  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002c59c7d: shr    $0x10,%edx
  0x0000000002c59c80: cmp    $0x0,%edx
  0x0000000002c59c83: je     0x0000000002c59d7e
  0x0000000002c59c89: cmp    $0x1,%edx
  0x0000000002c59c8c: je     0x0000000002c59d56
  0x0000000002c59c92: cmp    $0x2,%edx
  0x0000000002c59c95: je     0x0000000002c59d2e
  0x0000000002c59c9b: cmp    $0xe,%edx
  0x0000000002c59c9e: je     0x0000000002c59d06
  0x0000000002c59ca4: cmp    $0xf,%edx
  0x0000000002c59ca7: je     0x0000000002c59cb6
  0x0000000002c59cad: cmp    $0x10,%edx
  0x0000000002c59cb0: jne    0x0000000002c59cde  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000002c59cb6: xchg   %ax,%ax
  0x0000000002c59cb8: jmpq   0x0000000002c59e30  ;   {no_reloc}
  0x0000000002c59cbd: add    %al,(%rax)
  0x0000000002c59cbf: add    %al,(%rax)
  0x0000000002c59cc1: add    %ah,0xf(%rsi)
  0x0000000002c59cc4: (bad)  
  0x0000000002c59cc5: add    %r8b,(%rax)
  0x0000000002c59cc8: jmpq   0x0000000002c59e4a  ; implicit exception: dispatches to 0x0000000002c59e3a
  0x0000000002c59ccd: nop
  0x0000000002c59cce: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000002c59cd2: add    $0x30,%rsp
  0x0000000002c59cd6: pop    %rbp
  0x0000000002c59cd7: test   %eax,-0x1e39bdd(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59cdd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000002c59cde: xchg   %ax,%ax
  0x0000000002c59ce0: jmpq   0x0000000002c59eb1  ;   {no_reloc}
  0x0000000002c59ce5: add    %al,(%rax)
  0x0000000002c59ce7: add    %al,(%rax)
  0x0000000002c59ce9: add    %ah,0xf(%rsi)
  0x0000000002c59cec: (bad)  
  0x0000000002c59ced: add    %r8b,(%rax)
  0x0000000002c59cf0: jmpq   0x0000000002c59ecb  ; implicit exception: dispatches to 0x0000000002c59ebb
  0x0000000002c59cf5: nop
  0x0000000002c59cf6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000002c59cfa: add    $0x30,%rsp
  0x0000000002c59cfe: pop    %rbp
  0x0000000002c59cff: test   %eax,-0x1e39c05(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59d05: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000002c59d06: xchg   %ax,%ax
  0x0000000002c59d08: jmpq   0x0000000002c59f32  ;   {no_reloc}
  0x0000000002c59d0d: add    %al,(%rax)
  0x0000000002c59d0f: add    %al,(%rax)
  0x0000000002c59d11: add    %ah,0xf(%rsi)
  0x0000000002c59d14: (bad)  
  0x0000000002c59d15: add    %r8b,(%rax)
  0x0000000002c59d18: jmpq   0x0000000002c59f4c  ; implicit exception: dispatches to 0x0000000002c59f3c
  0x0000000002c59d1d: nop
  0x0000000002c59d1e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000002c59d22: add    $0x30,%rsp
  0x0000000002c59d26: pop    %rbp
  0x0000000002c59d27: test   %eax,-0x1e39c2d(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59d2d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000002c59d2e: xchg   %ax,%ax
  0x0000000002c59d30: jmpq   0x0000000002c59fb3  ;   {no_reloc}
  0x0000000002c59d35: add    %al,(%rax)
  0x0000000002c59d37: add    %al,(%rax)
  0x0000000002c59d39: add    %ah,0xf(%rsi)
  0x0000000002c59d3c: (bad)  
  0x0000000002c59d3d: add    %r8b,(%rax)
  0x0000000002c59d40: jmpq   0x0000000002c59fcd  ; implicit exception: dispatches to 0x0000000002c59fbd
  0x0000000002c59d45: nop
  0x0000000002c59d46: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000002c59d4a: add    $0x30,%rsp
  0x0000000002c59d4e: pop    %rbp
  0x0000000002c59d4f: test   %eax,-0x1e39c55(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59d55: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000002c59d56: xchg   %ax,%ax
  0x0000000002c59d58: jmpq   0x0000000002c5a034  ;   {no_reloc}
  0x0000000002c59d5d: add    %al,(%rax)
  0x0000000002c59d5f: add    %al,(%rax)
  0x0000000002c59d61: add    %ah,0xf(%rsi)
  0x0000000002c59d64: (bad)  
  0x0000000002c59d65: add    %r8b,(%rax)
  0x0000000002c59d68: jmpq   0x0000000002c5a04e  ; implicit exception: dispatches to 0x0000000002c5a03e
  0x0000000002c59d6d: nop
  0x0000000002c59d6e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000002c59d72: add    $0x30,%rsp
  0x0000000002c59d76: pop    %rbp
  0x0000000002c59d77: test   %eax,-0x1e39c7d(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59d7d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000002c59d7e: xchg   %ax,%ax
  0x0000000002c59d80: jmpq   0x0000000002c5a0b5  ;   {no_reloc}
  0x0000000002c59d85: add    %al,(%rax)
  0x0000000002c59d87: add    %al,(%rax)
  0x0000000002c59d89: add    %ah,0xf(%rsi)
  0x0000000002c59d8c: (bad)  
  0x0000000002c59d8d: add    %r8b,(%rax)
  0x0000000002c59d90: jmpq   0x0000000002c5a0cf  ; implicit exception: dispatches to 0x0000000002c5a0bf
  0x0000000002c59d95: nop
  0x0000000002c59d96: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000002c59d9a: add    $0x30,%rsp
  0x0000000002c59d9e: pop    %rbp
  0x0000000002c59d9f: test   %eax,-0x1e39ca5(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59da5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000002c59da6: movabs $0x76b7b2b98,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c59db0: add    $0x30,%rsp
  0x0000000002c59db4: pop    %rbp
  0x0000000002c59db5: test   %eax,-0x1e39cbb(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c59dbb: retq   
  0x0000000002c59dbc: mov    %rax,0x8(%rsp)
  0x0000000002c59dc1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c59dc9: callq  0x0000000002c58220  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000002c59dce: jmpq   0x0000000002c59c3e
  0x0000000002c59dd3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c59ddd: push   %rax
  0x0000000002c59dde: push   %rbx
  0x0000000002c59ddf: mov    0x48(%rax),%rbx
  0x0000000002c59de3: push   %rdi
  0x0000000002c59de4: push   %rsi
  0x0000000002c59de5: push   %rdx
  0x0000000002c59de6: push   %rcx
  0x0000000002c59de7: push   %r8
  0x0000000002c59de9: push   %r9
  0x0000000002c59deb: push   %r10
  0x0000000002c59ded: mov    %rsp,%r10
  0x0000000002c59df0: and    $0xfffffffffffffff0,%rsp
  0x0000000002c59df4: push   %r10
  0x0000000002c59df6: push   %r11
  0x0000000002c59df8: mov    $0x7,%ecx
  0x0000000002c59dfd: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c59e07: callq  *%r10
  0x0000000002c59e0a: pop    %r11
  0x0000000002c59e0c: pop    %rsp
  0x0000000002c59e0d: pop    %r10
  0x0000000002c59e0f: pop    %r9
  0x0000000002c59e11: pop    %r8
  0x0000000002c59e13: pop    %rcx
  0x0000000002c59e14: pop    %rdx
  0x0000000002c59e15: pop    %rsi
  0x0000000002c59e16: pop    %rdi
  0x0000000002c59e17: cmp    0x118(%rbx),%rax
  0x0000000002c59e1e: pop    %rbx
  0x0000000002c59e1f: pop    %rax
  0x0000000002c59e20: jne    0x0000000002c59e30
  0x0000000002c59e26: jmpq   0x0000000002c59cc2
  0x0000000002c59e2b: mov    $0xa535d00,%eax
  0x0000000002c59e30: callq  0x0000000002c575a0  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002c59e35: jmpq   0x0000000002c59cb8
  0x0000000002c59e3a: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002c59e3f: mov    0x0(%rax),%eax
  0x0000000002c59e45: mov    $0x6050b00,%eax
  0x0000000002c59e4a: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002c59e4f: jmpq   0x0000000002c59cc8
  0x0000000002c59e54: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c59e5e: push   %rax
  0x0000000002c59e5f: push   %rbx
  0x0000000002c59e60: mov    0x48(%rax),%rbx
  0x0000000002c59e64: push   %rdi
  0x0000000002c59e65: push   %rsi
  0x0000000002c59e66: push   %rdx
  0x0000000002c59e67: push   %rcx
  0x0000000002c59e68: push   %r8
  0x0000000002c59e6a: push   %r9
  0x0000000002c59e6c: push   %r10
  0x0000000002c59e6e: mov    %rsp,%r10
  0x0000000002c59e71: and    $0xfffffffffffffff0,%rsp
  0x0000000002c59e75: push   %r10
  0x0000000002c59e77: push   %r11
  0x0000000002c59e79: mov    $0x7,%ecx
  0x0000000002c59e7e: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c59e88: callq  *%r10
  0x0000000002c59e8b: pop    %r11
  0x0000000002c59e8d: pop    %rsp
  0x0000000002c59e8e: pop    %r10
  0x0000000002c59e90: pop    %r9
  0x0000000002c59e92: pop    %r8
  0x0000000002c59e94: pop    %rcx
  0x0000000002c59e95: pop    %rdx
  0x0000000002c59e96: pop    %rsi
  0x0000000002c59e97: pop    %rdi
  0x0000000002c59e98: cmp    0x118(%rbx),%rax
  0x0000000002c59e9f: pop    %rbx
  0x0000000002c59ea0: pop    %rax
  0x0000000002c59ea1: jne    0x0000000002c59eb1
  0x0000000002c59ea7: jmpq   0x0000000002c59cea
  0x0000000002c59eac: mov    $0xa535d00,%eax
  0x0000000002c59eb1: callq  0x0000000002c575a0  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002c59eb6: jmpq   0x0000000002c59ce0
  0x0000000002c59ebb: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002c59ec0: mov    0x0(%rax),%eax
  0x0000000002c59ec6: mov    $0x6050b00,%eax
  0x0000000002c59ecb: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002c59ed0: jmpq   0x0000000002c59cf0
  0x0000000002c59ed5: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c59edf: push   %rax
  0x0000000002c59ee0: push   %rbx
  0x0000000002c59ee1: mov    0x48(%rax),%rbx
  0x0000000002c59ee5: push   %rdi
  0x0000000002c59ee6: push   %rsi
  0x0000000002c59ee7: push   %rdx
  0x0000000002c59ee8: push   %rcx
  0x0000000002c59ee9: push   %r8
  0x0000000002c59eeb: push   %r9
  0x0000000002c59eed: push   %r10
  0x0000000002c59eef: mov    %rsp,%r10
  0x0000000002c59ef2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c59ef6: push   %r10
  0x0000000002c59ef8: push   %r11
  0x0000000002c59efa: mov    $0x7,%ecx
  0x0000000002c59eff: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c59f09: callq  *%r10
  0x0000000002c59f0c: pop    %r11
  0x0000000002c59f0e: pop    %rsp
  0x0000000002c59f0f: pop    %r10
  0x0000000002c59f11: pop    %r9
  0x0000000002c59f13: pop    %r8
  0x0000000002c59f15: pop    %rcx
  0x0000000002c59f16: pop    %rdx
  0x0000000002c59f17: pop    %rsi
  0x0000000002c59f18: pop    %rdi
  0x0000000002c59f19: cmp    0x118(%rbx),%rax
  0x0000000002c59f20: pop    %rbx
  0x0000000002c59f21: pop    %rax
  0x0000000002c59f22: jne    0x0000000002c59f32
  0x0000000002c59f28: jmpq   0x0000000002c59d12
  0x0000000002c59f2d: mov    $0xa535d00,%eax
  0x0000000002c59f32: callq  0x0000000002c575a0  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002c59f37: jmpq   0x0000000002c59d08
  0x0000000002c59f3c: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002c59f41: mov    0x0(%rax),%eax
  0x0000000002c59f47: mov    $0x6050b00,%eax
  0x0000000002c59f4c: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002c59f51: jmpq   0x0000000002c59d18
  0x0000000002c59f56: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c59f60: push   %rax
  0x0000000002c59f61: push   %rbx
  0x0000000002c59f62: mov    0x48(%rax),%rbx
  0x0000000002c59f66: push   %rdi
  0x0000000002c59f67: push   %rsi
  0x0000000002c59f68: push   %rdx
  0x0000000002c59f69: push   %rcx
  0x0000000002c59f6a: push   %r8
  0x0000000002c59f6c: push   %r9
  0x0000000002c59f6e: push   %r10
  0x0000000002c59f70: mov    %rsp,%r10
  0x0000000002c59f73: and    $0xfffffffffffffff0,%rsp
  0x0000000002c59f77: push   %r10
  0x0000000002c59f79: push   %r11
  0x0000000002c59f7b: mov    $0x7,%ecx
  0x0000000002c59f80: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c59f8a: callq  *%r10
  0x0000000002c59f8d: pop    %r11
  0x0000000002c59f8f: pop    %rsp
  0x0000000002c59f90: pop    %r10
  0x0000000002c59f92: pop    %r9
  0x0000000002c59f94: pop    %r8
  0x0000000002c59f96: pop    %rcx
  0x0000000002c59f97: pop    %rdx
  0x0000000002c59f98: pop    %rsi
  0x0000000002c59f99: pop    %rdi
  0x0000000002c59f9a: cmp    0x118(%rbx),%rax
  0x0000000002c59fa1: pop    %rbx
  0x0000000002c59fa2: pop    %rax
  0x0000000002c59fa3: jne    0x0000000002c59fb3
  0x0000000002c59fa9: jmpq   0x0000000002c59d3a
  0x0000000002c59fae: mov    $0xa535d00,%eax
  0x0000000002c59fb3: callq  0x0000000002c575a0  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002c59fb8: jmpq   0x0000000002c59d30
  0x0000000002c59fbd: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002c59fc2: mov    0x0(%rax),%eax
  0x0000000002c59fc8: mov    $0x6050b00,%eax
  0x0000000002c59fcd: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002c59fd2: jmpq   0x0000000002c59d40
  0x0000000002c59fd7: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c59fe1: push   %rax
  0x0000000002c59fe2: push   %rbx
  0x0000000002c59fe3: mov    0x48(%rax),%rbx
  0x0000000002c59fe7: push   %rdi
  0x0000000002c59fe8: push   %rsi
  0x0000000002c59fe9: push   %rdx
  0x0000000002c59fea: push   %rcx
  0x0000000002c59feb: push   %r8
  0x0000000002c59fed: push   %r9
  0x0000000002c59fef: push   %r10
  0x0000000002c59ff1: mov    %rsp,%r10
  0x0000000002c59ff4: and    $0xfffffffffffffff0,%rsp
  0x0000000002c59ff8: push   %r10
  0x0000000002c59ffa: push   %r11
  0x0000000002c59ffc: mov    $0x7,%ecx
  0x0000000002c5a001: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c5a00b: callq  *%r10
  0x0000000002c5a00e: pop    %r11
  0x0000000002c5a010: pop    %rsp
  0x0000000002c5a011: pop    %r10
  0x0000000002c5a013: pop    %r9
  0x0000000002c5a015: pop    %r8
  0x0000000002c5a017: pop    %rcx
  0x0000000002c5a018: pop    %rdx
  0x0000000002c5a019: pop    %rsi
  0x0000000002c5a01a: pop    %rdi
  0x0000000002c5a01b: cmp    0x118(%rbx),%rax
  0x0000000002c5a022: pop    %rbx
  0x0000000002c5a023: pop    %rax
  0x0000000002c5a024: jne    0x0000000002c5a034
  0x0000000002c5a02a: jmpq   0x0000000002c59d62
  0x0000000002c5a02f: mov    $0xa535d00,%eax
  0x0000000002c5a034: callq  0x0000000002c575a0  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002c5a039: jmpq   0x0000000002c59d58
  0x0000000002c5a03e: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002c5a043: mov    0x0(%rax),%eax
  0x0000000002c5a049: mov    $0x6050b00,%eax
  0x0000000002c5a04e: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002c5a053: jmpq   0x0000000002c59d68
  0x0000000002c5a058: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c5a062: push   %rax
  0x0000000002c5a063: push   %rbx
  0x0000000002c5a064: mov    0x48(%rax),%rbx
  0x0000000002c5a068: push   %rdi
  0x0000000002c5a069: push   %rsi
  0x0000000002c5a06a: push   %rdx
  0x0000000002c5a06b: push   %rcx
  0x0000000002c5a06c: push   %r8
  0x0000000002c5a06e: push   %r9
  0x0000000002c5a070: push   %r10
  0x0000000002c5a072: mov    %rsp,%r10
  0x0000000002c5a075: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5a079: push   %r10
  0x0000000002c5a07b: push   %r11
  0x0000000002c5a07d: mov    $0x7,%ecx
  0x0000000002c5a082: movabs $0x7ff90bed4a20,%r10  ;   {runtime_call}
  0x0000000002c5a08c: callq  *%r10
  0x0000000002c5a08f: pop    %r11
  0x0000000002c5a091: pop    %rsp
  0x0000000002c5a092: pop    %r10
  0x0000000002c5a094: pop    %r9
  0x0000000002c5a096: pop    %r8
  0x0000000002c5a098: pop    %rcx
  0x0000000002c5a099: pop    %rdx
  0x0000000002c5a09a: pop    %rsi
  0x0000000002c5a09b: pop    %rdi
  0x0000000002c5a09c: cmp    0x118(%rbx),%rax
  0x0000000002c5a0a3: pop    %rbx
  0x0000000002c5a0a4: pop    %rax
  0x0000000002c5a0a5: jne    0x0000000002c5a0b5
  0x0000000002c5a0ab: jmpq   0x0000000002c59d8a
  0x0000000002c5a0b0: mov    $0xa535d00,%eax
  0x0000000002c5a0b5: callq  0x0000000002c575a0  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002c5a0ba: jmpq   0x0000000002c59d80
  0x0000000002c5a0bf: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002c5a0c4: mov    0x0(%rax),%eax
  0x0000000002c5a0ca: mov    $0x6050b00,%eax
  0x0000000002c5a0cf: callq  0x0000000002c56d20  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002c5a0d4: jmpq   0x0000000002c59d90
  0x0000000002c5a0d9: nop
  0x0000000002c5a0da: nop
  0x0000000002c5a0db: mov    0x2a8(%r15),%rax
  0x0000000002c5a0e2: movabs $0x0,%r10
  0x0000000002c5a0ec: mov    %r10,0x2a8(%r15)
  0x0000000002c5a0f3: movabs $0x0,%r10
  0x0000000002c5a0fd: mov    %r10,0x2b0(%r15)
  0x0000000002c5a104: add    $0x30,%rsp
  0x0000000002c5a108: pop    %rbp
  0x0000000002c5a109: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5a10e: hlt    
  0x0000000002c5a10f: hlt    
  0x0000000002c5a110: hlt    
  0x0000000002c5a111: hlt    
  0x0000000002c5a112: hlt    
  0x0000000002c5a113: hlt    
  0x0000000002c5a114: hlt    
  0x0000000002c5a115: hlt    
  0x0000000002c5a116: hlt    
  0x0000000002c5a117: hlt    
  0x0000000002c5a118: hlt    
  0x0000000002c5a119: hlt    
  0x0000000002c5a11a: hlt    
  0x0000000002c5a11b: hlt    
  0x0000000002c5a11c: hlt    
  0x0000000002c5a11d: hlt    
  0x0000000002c5a11e: hlt    
  0x0000000002c5a11f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5a120: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5a125: mov    %rsp,-0x28(%rsp)
  0x0000000002c5a12a: sub    $0x80,%rsp
  0x0000000002c5a131: mov    %rax,0x78(%rsp)
  0x0000000002c5a136: mov    %rcx,0x70(%rsp)
  0x0000000002c5a13b: mov    %rdx,0x68(%rsp)
  0x0000000002c5a140: mov    %rbx,0x60(%rsp)
  0x0000000002c5a145: mov    %rbp,0x50(%rsp)
  0x0000000002c5a14a: mov    %rsi,0x48(%rsp)
  0x0000000002c5a14f: mov    %rdi,0x40(%rsp)
  0x0000000002c5a154: mov    %r8,0x38(%rsp)
  0x0000000002c5a159: mov    %r9,0x30(%rsp)
  0x0000000002c5a15e: mov    %r10,0x28(%rsp)
  0x0000000002c5a163: mov    %r11,0x20(%rsp)
  0x0000000002c5a168: mov    %r12,0x18(%rsp)
  0x0000000002c5a16d: mov    %r13,0x10(%rsp)
  0x0000000002c5a172: mov    %r14,0x8(%rsp)
  0x0000000002c5a177: mov    %r15,(%rsp)
  0x0000000002c5a17b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5a185: movabs $0x2c5a125,%rdx    ;   {internal_word}
  0x0000000002c5a18f: mov    %rsp,%r8
  0x0000000002c5a192: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5a196: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5a19b: hlt    
[Deopt Handler Code]
  0x0000000002c5a19c: movabs $0x2c5a19c,%r10    ;   {section_word}
  0x0000000002c5a1a6: push   %r10
  0x0000000002c5a1a8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5a1ad: hlt    
  0x0000000002c5a1ae: hlt    
  0x0000000002c5a1af: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000002c59c00' size='2680' address='0x0000000002c59a50' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='913' iicount='913' stamp='2.016'/>
<writer thread='21536'/>
<task_queued compile_id='18' method='java/lang/Character toUpperCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='2.016' comment='tiered' hot_count='256'/>
<task_queued compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='2.016' comment='tiered' hot_count='384'/>
<task_queued compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='2.016' comment='tiered' hot_count='384'/>
<task_queued compile_id='21' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='384' iicount='384' level='3' stamp='2.016' comment='tiered' hot_count='384'/>
<task_queued compile_id='22' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='2.016' comment='tiered' hot_count='640'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5c710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5c860: mov    0x8(%rdx),%r10d
  0x0000000002c5c864: shl    $0x3,%r10
  0x0000000002c5c868: cmp    %rax,%r10
  0x0000000002c5c86b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5c871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5c87c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5c880: mov    %eax,-0x6000(%rsp)
  0x0000000002c5c887: push   %rbp
  0x0000000002c5c888: sub    $0x30,%rsp
  0x0000000002c5c88c: movabs $0x1bd427e0,%rax   ;   {metadata(method data for {method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5c896: mov    0xdc(%rax),%esi
  0x0000000002c5c89c: add    $0x8,%esi
  0x0000000002c5c89f: mov    %esi,0xdc(%rax)
  0x0000000002c5c8a5: movabs $0x1bd3f048,%rax   ;   {metadata({method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5c8af: and    $0x1ff8,%esi
  0x0000000002c5c8b5: cmp    $0x0,%esi
  0x0000000002c5c8b8: je     0x0000000002c5c8ec  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000002c5c8be: and    $0xffff,%r8d
  0x0000000002c5c8c5: movabs $0x76b7b2ba8,%rax  ;   {oop([I)}
  0x0000000002c5c8cf: movslq %r8d,%rsi
  0x0000000002c5c8d2: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002c5c900
  0x0000000002c5c8d6: jae    0x0000000002c5c90a
  0x0000000002c5c8dc: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002c5c8e0: add    $0x30,%rsp
  0x0000000002c5c8e4: pop    %rbp
  0x0000000002c5c8e5: test   %eax,-0x1e3c7eb(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5c8eb: retq   
  0x0000000002c5c8ec: mov    %rax,0x8(%rsp)
  0x0000000002c5c8f1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5c8f9: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000002c5c8fe: jmp    0x0000000002c5c8be
  0x0000000002c5c900: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002c5c905: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002c5c90a: mov    %r8,(%rsp)
  0x0000000002c5c90e: callq  0x0000000002c53300  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002c5c913: nop
  0x0000000002c5c914: nop
  0x0000000002c5c915: mov    0x2a8(%r15),%rax
  0x0000000002c5c91c: movabs $0x0,%r10
  0x0000000002c5c926: mov    %r10,0x2a8(%r15)
  0x0000000002c5c92d: movabs $0x0,%r10
  0x0000000002c5c937: mov    %r10,0x2b0(%r15)
  0x0000000002c5c93e: add    $0x30,%rsp
  0x0000000002c5c942: pop    %rbp
  0x0000000002c5c943: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5c948: hlt    
  0x0000000002c5c949: hlt    
  0x0000000002c5c94a: hlt    
  0x0000000002c5c94b: hlt    
  0x0000000002c5c94c: hlt    
  0x0000000002c5c94d: hlt    
  0x0000000002c5c94e: hlt    
  0x0000000002c5c94f: hlt    
  0x0000000002c5c950: hlt    
  0x0000000002c5c951: hlt    
  0x0000000002c5c952: hlt    
  0x0000000002c5c953: hlt    
  0x0000000002c5c954: hlt    
  0x0000000002c5c955: hlt    
  0x0000000002c5c956: hlt    
  0x0000000002c5c957: hlt    
  0x0000000002c5c958: hlt    
  0x0000000002c5c959: hlt    
  0x0000000002c5c95a: hlt    
  0x0000000002c5c95b: hlt    
  0x0000000002c5c95c: hlt    
  0x0000000002c5c95d: hlt    
  0x0000000002c5c95e: hlt    
  0x0000000002c5c95f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5c960: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5c965: mov    %rsp,-0x28(%rsp)
  0x0000000002c5c96a: sub    $0x80,%rsp
  0x0000000002c5c971: mov    %rax,0x78(%rsp)
  0x0000000002c5c976: mov    %rcx,0x70(%rsp)
  0x0000000002c5c97b: mov    %rdx,0x68(%rsp)
  0x0000000002c5c980: mov    %rbx,0x60(%rsp)
  0x0000000002c5c985: mov    %rbp,0x50(%rsp)
  0x0000000002c5c98a: mov    %rsi,0x48(%rsp)
  0x0000000002c5c98f: mov    %rdi,0x40(%rsp)
  0x0000000002c5c994: mov    %r8,0x38(%rsp)
  0x0000000002c5c999: mov    %r9,0x30(%rsp)
  0x0000000002c5c99e: mov    %r10,0x28(%rsp)
  0x0000000002c5c9a3: mov    %r11,0x20(%rsp)
  0x0000000002c5c9a8: mov    %r12,0x18(%rsp)
  0x0000000002c5c9ad: mov    %r13,0x10(%rsp)
  0x0000000002c5c9b2: mov    %r14,0x8(%rsp)
  0x0000000002c5c9b7: mov    %r15,(%rsp)
  0x0000000002c5c9bb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5c9c5: movabs $0x2c5c965,%rdx    ;   {internal_word}
  0x0000000002c5c9cf: mov    %rsp,%r8
  0x0000000002c5c9d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5c9d6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5c9db: hlt    
[Deopt Handler Code]
  0x0000000002c5c9dc: movabs $0x2c5c9dc,%r10    ;   {section_word}
  0x0000000002c5c9e6: push   %r10
  0x0000000002c5c9e8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5c9ed: hlt    
  0x0000000002c5c9ee: hlt    
  0x0000000002c5c9ef: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002c5c860' size='952' address='0x0000000002c5c710' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1182' iicount='1182' stamp='2.143'/>
Decoding compiled method 0x0000000002c5c1d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc0a508} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002c5c340: mov    %eax,-0x6000(%rsp)
  0x0000000002c5c347: push   %rbp
  0x0000000002c5c348: sub    $0x40,%rsp
  0x0000000002c5c34c: movabs $0x1bd7f250,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a508} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c356: mov    0xdc(%rsi),%edi
  0x0000000002c5c35c: add    $0x8,%edi
  0x0000000002c5c35f: mov    %edi,0xdc(%rsi)
  0x0000000002c5c365: movabs $0x1bc0a500,%rsi   ;   {metadata({method} {0x000000001bc0a508} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c36f: and    $0x1ff8,%edi
  0x0000000002c5c375: cmp    $0x0,%edi
  0x0000000002c5c378: je     0x0000000002c5c4ac  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x0000000002c5c37e: movabs $0x1bd7f250,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a508} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c388: addq   $0x1,0x108(%rsi)
  0x0000000002c5c390: movabs $0x1bd7f3a8,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c39a: mov    0xdc(%rsi),%edi
  0x0000000002c5c3a0: add    $0x8,%edi
  0x0000000002c5c3a3: mov    %edi,0xdc(%rsi)
  0x0000000002c5c3a9: movabs $0x1bc0a598,%rsi   ;   {metadata({method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c3b3: and    $0x7ffff8,%edi
  0x0000000002c5c3b9: cmp    $0x0,%edi
  0x0000000002c5c3bc: je     0x0000000002c5c4c3
  0x0000000002c5c3c2: movabs $0x1bd7f3a8,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c3cc: addq   $0x1,0x108(%rsi)
  0x0000000002c5c3d4: mov    %rdx,%rsi
  0x0000000002c5c3d7: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002c5c3da: mov    %esi,0x28(%rsp)
  0x0000000002c5c3de: nop
  0x0000000002c5c3df: callq  0x0000000002b96620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x0000000002c5c3e4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c5c4da
  0x0000000002c5c3e7: mov    %rax,%r8
  0x0000000002c5c3ea: movabs $0x1bd7f3a8,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5c3f4: mov    0x8(%r8),%r8d
  0x0000000002c5c3f8: shl    $0x3,%r8
  0x0000000002c5c3fc: cmp    0x120(%rdx),%r8
  0x0000000002c5c403: jne    0x0000000002c5c412
  0x0000000002c5c405: addq   $0x1,0x128(%rdx)
  0x0000000002c5c40d: jmpq   0x0000000002c5c478
  0x0000000002c5c412: cmp    0x130(%rdx),%r8
  0x0000000002c5c419: jne    0x0000000002c5c428
  0x0000000002c5c41b: addq   $0x1,0x138(%rdx)
  0x0000000002c5c423: jmpq   0x0000000002c5c478
  0x0000000002c5c428: cmpq   $0x0,0x120(%rdx)
  0x0000000002c5c433: jne    0x0000000002c5c44c
  0x0000000002c5c435: mov    %r8,0x120(%rdx)
  0x0000000002c5c43c: movq   $0x1,0x128(%rdx)
  0x0000000002c5c447: jmpq   0x0000000002c5c478
  0x0000000002c5c44c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c5c457: jne    0x0000000002c5c470
  0x0000000002c5c459: mov    %r8,0x130(%rdx)
  0x0000000002c5c460: movq   $0x1,0x138(%rdx)
  0x0000000002c5c46b: jmpq   0x0000000002c5c478
  0x0000000002c5c470: addq   $0x1,0x118(%rdx)
  0x0000000002c5c478: mov    0x28(%rsp),%r8d
  0x0000000002c5c47d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002c5c480: nop
  0x0000000002c5c481: nop
  0x0000000002c5c482: nop
  0x0000000002c5c483: nop
  0x0000000002c5c484: nop
  0x0000000002c5c485: movabs $0xffffffffffffffff,%rax
  0x0000000002c5c48f: callq  0x0000000002b963e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x0000000002c5c494: and    $0xffff,%eax
  0x0000000002c5c49a: and    $0xffff,%eax
  0x0000000002c5c4a0: add    $0x40,%rsp
  0x0000000002c5c4a4: pop    %rbp
  0x0000000002c5c4a5: test   %eax,-0x1e3c3ab(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5c4ab: retq   
  0x0000000002c5c4ac: mov    %rsi,0x8(%rsp)
  0x0000000002c5c4b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5c4b9: callq  0x0000000002c58220  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c5c4be: jmpq   0x0000000002c5c37e
  0x0000000002c5c4c3: mov    %rsi,0x8(%rsp)
  0x0000000002c5c4c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5c4d0: callq  0x0000000002c58220  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c5c4d5: jmpq   0x0000000002c5c3c2
  0x0000000002c5c4da: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c5c4df: nop
  0x0000000002c5c4e0: nop
  0x0000000002c5c4e1: mov    0x2a8(%r15),%rax
  0x0000000002c5c4e8: movabs $0x0,%r10
  0x0000000002c5c4f2: mov    %r10,0x2a8(%r15)
  0x0000000002c5c4f9: movabs $0x0,%r10
  0x0000000002c5c503: mov    %r10,0x2b0(%r15)
  0x0000000002c5c50a: add    $0x40,%rsp
  0x0000000002c5c50e: pop    %rbp
  0x0000000002c5c50f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5c514: hlt    
  0x0000000002c5c515: hlt    
  0x0000000002c5c516: hlt    
  0x0000000002c5c517: hlt    
  0x0000000002c5c518: hlt    
  0x0000000002c5c519: hlt    
  0x0000000002c5c51a: hlt    
  0x0000000002c5c51b: hlt    
  0x0000000002c5c51c: hlt    
  0x0000000002c5c51d: hlt    
  0x0000000002c5c51e: hlt    
  0x0000000002c5c51f: hlt    
[Stub Code]
  0x0000000002c5c520: nop                       ;   {no_reloc}
  0x0000000002c5c521: nop
  0x0000000002c5c522: nop
  0x0000000002c5c523: nop
  0x0000000002c5c524: nop
  0x0000000002c5c525: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5c52f: jmpq   0x0000000002c5c52f  ;   {runtime_call}
  0x0000000002c5c534: nop
  0x0000000002c5c535: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5c53f: jmpq   0x0000000002c5c53f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5c544: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5c549: mov    %rsp,-0x28(%rsp)
  0x0000000002c5c54e: sub    $0x80,%rsp
  0x0000000002c5c555: mov    %rax,0x78(%rsp)
  0x0000000002c5c55a: mov    %rcx,0x70(%rsp)
  0x0000000002c5c55f: mov    %rdx,0x68(%rsp)
  0x0000000002c5c564: mov    %rbx,0x60(%rsp)
  0x0000000002c5c569: mov    %rbp,0x50(%rsp)
  0x0000000002c5c56e: mov    %rsi,0x48(%rsp)
  0x0000000002c5c573: mov    %rdi,0x40(%rsp)
  0x0000000002c5c578: mov    %r8,0x38(%rsp)
  0x0000000002c5c57d: mov    %r9,0x30(%rsp)
  0x0000000002c5c582: mov    %r10,0x28(%rsp)
  0x0000000002c5c587: mov    %r11,0x20(%rsp)
  0x0000000002c5c58c: mov    %r12,0x18(%rsp)
  0x0000000002c5c591: mov    %r13,0x10(%rsp)
  0x0000000002c5c596: mov    %r14,0x8(%rsp)
  0x0000000002c5c59b: mov    %r15,(%rsp)
  0x0000000002c5c59f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5c5a9: movabs $0x2c5c549,%rdx    ;   {internal_word}
  0x0000000002c5c5b3: mov    %rsp,%r8
  0x0000000002c5c5b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5c5ba: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5c5bf: hlt    
[Deopt Handler Code]
  0x0000000002c5c5c0: movabs $0x2c5c5c0,%r10    ;   {section_word}
  0x0000000002c5c5ca: push   %r10
  0x0000000002c5c5cc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5c5d1: hlt    
  0x0000000002c5c5d2: hlt    
  0x0000000002c5c5d3: hlt    
  0x0000000002c5c5d4: hlt    
  0x0000000002c5c5d5: hlt    
  0x0000000002c5c5d6: hlt    
  0x0000000002c5c5d7: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002c5c340' size='1304' address='0x0000000002c5c1d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toUpperCase (C)C' bytes='6' count='534' iicount='534' stamp='2.334'/>
Decoding compiled method 0x0000000002c5bd10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5be80: mov    %eax,-0x6000(%rsp)
  0x0000000002c5be87: push   %rbp
  0x0000000002c5be88: sub    $0x30,%rsp
  0x0000000002c5be8c: movabs $0x1bd7f3a8,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5be96: mov    0xdc(%rsi),%edi
  0x0000000002c5be9c: add    $0x8,%edi
  0x0000000002c5be9f: mov    %edi,0xdc(%rsi)
  0x0000000002c5bea5: movabs $0x1bc0a598,%rsi   ;   {metadata({method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5beaf: and    $0x1ff8,%edi
  0x0000000002c5beb5: cmp    $0x0,%edi
  0x0000000002c5beb8: je     0x0000000002c5bfa0  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x0000000002c5bebe: movabs $0x1bd7f3a8,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5bec8: addq   $0x1,0x108(%rsi)
  0x0000000002c5bed0: mov    %rdx,%rsi
  0x0000000002c5bed3: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x0000000002c5bed6: mov    %esi,0x20(%rsp)
  0x0000000002c5beda: nop
  0x0000000002c5bedb: nop
  0x0000000002c5bedc: nop
  0x0000000002c5bedd: nop
  0x0000000002c5bede: nop
  0x0000000002c5bedf: callq  0x0000000002b96620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x0000000002c5bee4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c5bfb7
  0x0000000002c5bee7: mov    %rax,%r8
  0x0000000002c5beea: movabs $0x1bd7f3a8,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a5a0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5bef4: mov    0x8(%r8),%r8d
  0x0000000002c5bef8: shl    $0x3,%r8
  0x0000000002c5befc: cmp    0x120(%rdx),%r8
  0x0000000002c5bf03: jne    0x0000000002c5bf12
  0x0000000002c5bf05: addq   $0x1,0x128(%rdx)
  0x0000000002c5bf0d: jmpq   0x0000000002c5bf78
  0x0000000002c5bf12: cmp    0x130(%rdx),%r8
  0x0000000002c5bf19: jne    0x0000000002c5bf28
  0x0000000002c5bf1b: addq   $0x1,0x138(%rdx)
  0x0000000002c5bf23: jmpq   0x0000000002c5bf78
  0x0000000002c5bf28: cmpq   $0x0,0x120(%rdx)
  0x0000000002c5bf33: jne    0x0000000002c5bf4c
  0x0000000002c5bf35: mov    %r8,0x120(%rdx)
  0x0000000002c5bf3c: movq   $0x1,0x128(%rdx)
  0x0000000002c5bf47: jmpq   0x0000000002c5bf78
  0x0000000002c5bf4c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c5bf57: jne    0x0000000002c5bf70
  0x0000000002c5bf59: mov    %r8,0x130(%rdx)
  0x0000000002c5bf60: movq   $0x1,0x138(%rdx)
  0x0000000002c5bf6b: jmpq   0x0000000002c5bf78
  0x0000000002c5bf70: addq   $0x1,0x118(%rdx)
  0x0000000002c5bf78: mov    0x20(%rsp),%r8d
  0x0000000002c5bf7d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x0000000002c5bf80: nop
  0x0000000002c5bf81: nop
  0x0000000002c5bf82: nop
  0x0000000002c5bf83: nop
  0x0000000002c5bf84: nop
  0x0000000002c5bf85: movabs $0xffffffffffffffff,%rax
  0x0000000002c5bf8f: callq  0x0000000002b963e0  ; OopMap{off=276}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x0000000002c5bf94: add    $0x30,%rsp
  0x0000000002c5bf98: pop    %rbp
  0x0000000002c5bf99: test   %eax,-0x1e3be9f(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5bf9f: retq   
  0x0000000002c5bfa0: mov    %rsi,0x8(%rsp)
  0x0000000002c5bfa5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5bfad: callq  0x0000000002c58220  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x0000000002c5bfb2: jmpq   0x0000000002c5bebe
  0x0000000002c5bfb7: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x0000000002c5bfbc: nop
  0x0000000002c5bfbd: nop
  0x0000000002c5bfbe: mov    0x2a8(%r15),%rax
  0x0000000002c5bfc5: movabs $0x0,%r10
  0x0000000002c5bfcf: mov    %r10,0x2a8(%r15)
  0x0000000002c5bfd6: movabs $0x0,%r10
  0x0000000002c5bfe0: mov    %r10,0x2b0(%r15)
  0x0000000002c5bfe7: add    $0x30,%rsp
  0x0000000002c5bfeb: pop    %rbp
  0x0000000002c5bfec: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5bff1: hlt    
  0x0000000002c5bff2: hlt    
  0x0000000002c5bff3: hlt    
  0x0000000002c5bff4: hlt    
  0x0000000002c5bff5: hlt    
  0x0000000002c5bff6: hlt    
  0x0000000002c5bff7: hlt    
  0x0000000002c5bff8: hlt    
  0x0000000002c5bff9: hlt    
  0x0000000002c5bffa: hlt    
  0x0000000002c5bffb: hlt    
  0x0000000002c5bffc: hlt    
  0x0000000002c5bffd: hlt    
  0x0000000002c5bffe: hlt    
  0x0000000002c5bfff: hlt    
[Stub Code]
  0x0000000002c5c000: nop                       ;   {no_reloc}
  0x0000000002c5c001: nop
  0x0000000002c5c002: nop
  0x0000000002c5c003: nop
  0x0000000002c5c004: nop
  0x0000000002c5c005: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5c00f: jmpq   0x0000000002c5c00f  ;   {runtime_call}
  0x0000000002c5c014: nop
  0x0000000002c5c015: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5c01f: jmpq   0x0000000002c5c01f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5c024: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5c029: mov    %rsp,-0x28(%rsp)
  0x0000000002c5c02e: sub    $0x80,%rsp
  0x0000000002c5c035: mov    %rax,0x78(%rsp)
  0x0000000002c5c03a: mov    %rcx,0x70(%rsp)
  0x0000000002c5c03f: mov    %rdx,0x68(%rsp)
  0x0000000002c5c044: mov    %rbx,0x60(%rsp)
  0x0000000002c5c049: mov    %rbp,0x50(%rsp)
  0x0000000002c5c04e: mov    %rsi,0x48(%rsp)
  0x0000000002c5c053: mov    %rdi,0x40(%rsp)
  0x0000000002c5c058: mov    %r8,0x38(%rsp)
  0x0000000002c5c05d: mov    %r9,0x30(%rsp)
  0x0000000002c5c062: mov    %r10,0x28(%rsp)
  0x0000000002c5c067: mov    %r11,0x20(%rsp)
  0x0000000002c5c06c: mov    %r12,0x18(%rsp)
  0x0000000002c5c071: mov    %r13,0x10(%rsp)
  0x0000000002c5c076: mov    %r14,0x8(%rsp)
  0x0000000002c5c07b: mov    %r15,(%rsp)
  0x0000000002c5c07f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5c089: movabs $0x2c5c029,%rdx    ;   {internal_word}
  0x0000000002c5c093: mov    %rsp,%r8
  0x0000000002c5c096: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5c09a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5c09f: hlt    
[Deopt Handler Code]
  0x0000000002c5c0a0: movabs $0x2c5c0a0,%r10    ;   {section_word}
  0x0000000002c5c0aa: push   %r10
  0x0000000002c5c0ac: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5c0b1: hlt    
  0x0000000002c5c0b2: hlt    
  0x0000000002c5c0b3: hlt    
  0x0000000002c5c0b4: hlt    
  0x0000000002c5c0b5: hlt    
  0x0000000002c5c0b6: hlt    
  0x0000000002c5c0b7: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000002c5be80' size='1160' address='0x0000000002c5bd10' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toUpperCase (I)I' bytes='9' count='534' iicount='534' stamp='2.532'/>
Decoding compiled method 0x0000000002c5b710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002c5b880: mov    0x8(%rdx),%r10d
  0x0000000002c5b884: shl    $0x3,%r10
  0x0000000002c5b888: cmp    %rax,%r10
  0x0000000002c5b88b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5b891: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5b89c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5b8a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c5b8a7: push   %rbp
  0x0000000002c5b8a8: sub    $0x40,%rsp
  0x0000000002c5b8ac: movabs $0x1bd7f530,%rax   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b8b6: mov    0xdc(%rax),%esi
  0x0000000002c5b8bc: add    $0x8,%esi
  0x0000000002c5b8bf: mov    %esi,0xdc(%rax)
  0x0000000002c5b8c5: movabs $0x1bd3f8e8,%rax   ;   {metadata({method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b8cf: and    $0x1ff8,%esi
  0x0000000002c5b8d5: cmp    $0x0,%esi
  0x0000000002c5b8d8: je     0x0000000002c5ba3c  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x0000000002c5b8de: movabs $0x1bd7f530,%rax   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b8e8: addq   $0x1,0x118(%rax)
  0x0000000002c5b8f0: movabs $0x1bd427e0,%rax   ;   {metadata(method data for {method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b8fa: mov    0xdc(%rax),%esi
  0x0000000002c5b900: add    $0x8,%esi
  0x0000000002c5b903: mov    %esi,0xdc(%rax)
  0x0000000002c5b909: movabs $0x1bd3f048,%rax   ;   {metadata({method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b913: and    $0x7ffff8,%esi
  0x0000000002c5b919: cmp    $0x0,%esi
  0x0000000002c5b91c: je     0x0000000002c5ba53
  0x0000000002c5b922: mov    %r8,%rax
  0x0000000002c5b925: and    $0xffff,%eax
  0x0000000002c5b92b: movabs $0x76b7b2ba8,%rsi  ;   {oop([I)}
  0x0000000002c5b935: movslq %eax,%rdi
  0x0000000002c5b938: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002c5ba6a
  0x0000000002c5b93b: jae    0x0000000002c5ba74
  0x0000000002c5b941: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x0000000002c5b945: mov    %rax,%rsi
  0x0000000002c5b948: and    $0x10000,%esi
  0x0000000002c5b94e: cmp    $0x0,%esi
  0x0000000002c5b951: movabs $0x1bd7f530,%rsi   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b95b: movabs $0x138,%rdi
  0x0000000002c5b965: je     0x0000000002c5b975
  0x0000000002c5b96b: movabs $0x148,%rdi
  0x0000000002c5b975: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c5b979: lea    0x1(%rbx),%rbx
  0x0000000002c5b97d: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c5b981: je     0x0000000002c5ba2d  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x0000000002c5b987: mov    %rax,%rsi
  0x0000000002c5b98a: and    $0x7fc0000,%esi
  0x0000000002c5b990: cmp    $0x7fc0000,%esi
  0x0000000002c5b996: movabs $0x1bd7f530,%rsi   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b9a0: movabs $0x158,%rdi
  0x0000000002c5b9aa: je     0x0000000002c5b9ba
  0x0000000002c5b9b0: movabs $0x168,%rdi
  0x0000000002c5b9ba: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c5b9be: lea    0x1(%rbx),%rbx
  0x0000000002c5b9c2: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c5b9c6: jne    0x0000000002c5ba14  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x0000000002c5b9cc: cmp    $0xb5,%r8d
  0x0000000002c5b9d3: movabs $0x1bd7f530,%rax   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5b9dd: movabs $0x190,%rsi
  0x0000000002c5b9e7: jne    0x0000000002c5b9f7
  0x0000000002c5b9ed: movabs $0x1a0,%rsi
  0x0000000002c5b9f7: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5b9fb: lea    0x1(%rdi),%rdi
  0x0000000002c5b9ff: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5ba03: jne    0x0000000002c5ba2d  ;*if_icmpne
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x0000000002c5ba09: mov    $0x39c,%r8d
  0x0000000002c5ba0f: jmpq   0x0000000002c5ba2d  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x0000000002c5ba14: shl    $0x5,%eax
  0x0000000002c5ba17: sar    $0x17,%eax
  0x0000000002c5ba1a: sub    %eax,%r8d
  0x0000000002c5ba1d: movabs $0x1bd7f530,%rax   ;   {metadata(method data for {method} {0x000000001bd3f8f0} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5ba27: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x0000000002c5ba2d: mov    %r8,%rax
  0x0000000002c5ba30: add    $0x40,%rsp
  0x0000000002c5ba34: pop    %rbp
  0x0000000002c5ba35: test   %eax,-0x1e3b93b(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5ba3b: retq   
  0x0000000002c5ba3c: mov    %rax,0x8(%rsp)
  0x0000000002c5ba41: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5ba49: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x0000000002c5ba4e: jmpq   0x0000000002c5b8de
  0x0000000002c5ba53: mov    %rax,0x8(%rsp)
  0x0000000002c5ba58: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5ba60: callq  0x0000000002c58220  ; OopMap{off=485}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c5ba65: jmpq   0x0000000002c5b922
  0x0000000002c5ba6a: callq  0x0000000002c539c0  ; OopMap{rsi=Oop off=495}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c5ba6f: callq  0x0000000002c539c0  ; OopMap{rsi=Oop off=500}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c5ba74: mov    %rax,(%rsp)
  0x0000000002c5ba78: callq  0x0000000002c53300  ; OopMap{rsi=Oop off=509}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c5ba7d: nop
  0x0000000002c5ba7e: nop
  0x0000000002c5ba7f: mov    0x2a8(%r15),%rax
  0x0000000002c5ba86: movabs $0x0,%r10
  0x0000000002c5ba90: mov    %r10,0x2a8(%r15)
  0x0000000002c5ba97: movabs $0x0,%r10
  0x0000000002c5baa1: mov    %r10,0x2b0(%r15)
  0x0000000002c5baa8: add    $0x40,%rsp
  0x0000000002c5baac: pop    %rbp
  0x0000000002c5baad: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5bab2: hlt    
  0x0000000002c5bab3: hlt    
  0x0000000002c5bab4: hlt    
  0x0000000002c5bab5: hlt    
  0x0000000002c5bab6: hlt    
  0x0000000002c5bab7: hlt    
  0x0000000002c5bab8: hlt    
  0x0000000002c5bab9: hlt    
  0x0000000002c5baba: hlt    
  0x0000000002c5babb: hlt    
  0x0000000002c5babc: hlt    
  0x0000000002c5babd: hlt    
  0x0000000002c5babe: hlt    
  0x0000000002c5babf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5bac0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5bac5: mov    %rsp,-0x28(%rsp)
  0x0000000002c5baca: sub    $0x80,%rsp
  0x0000000002c5bad1: mov    %rax,0x78(%rsp)
  0x0000000002c5bad6: mov    %rcx,0x70(%rsp)
  0x0000000002c5badb: mov    %rdx,0x68(%rsp)
  0x0000000002c5bae0: mov    %rbx,0x60(%rsp)
  0x0000000002c5bae5: mov    %rbp,0x50(%rsp)
  0x0000000002c5baea: mov    %rsi,0x48(%rsp)
  0x0000000002c5baef: mov    %rdi,0x40(%rsp)
  0x0000000002c5baf4: mov    %r8,0x38(%rsp)
  0x0000000002c5baf9: mov    %r9,0x30(%rsp)
  0x0000000002c5bafe: mov    %r10,0x28(%rsp)
  0x0000000002c5bb03: mov    %r11,0x20(%rsp)
  0x0000000002c5bb08: mov    %r12,0x18(%rsp)
  0x0000000002c5bb0d: mov    %r13,0x10(%rsp)
  0x0000000002c5bb12: mov    %r14,0x8(%rsp)
  0x0000000002c5bb17: mov    %r15,(%rsp)
  0x0000000002c5bb1b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5bb25: movabs $0x2c5bac5,%rdx    ;   {internal_word}
  0x0000000002c5bb2f: mov    %rsp,%r8
  0x0000000002c5bb32: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5bb36: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5bb3b: hlt    
[Deopt Handler Code]
  0x0000000002c5bb3c: movabs $0x2c5bb3c,%r10    ;   {section_word}
  0x0000000002c5bb46: push   %r10
  0x0000000002c5bb48: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5bb4d: hlt    
  0x0000000002c5bb4e: hlt    
  0x0000000002c5bb4f: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000002c5b880' size='1488' address='0x0000000002c5b710' relocation_offset='288' insts_offset='368' stub_offset='944' scopes_data_offset='1112' scopes_pcs_offset='1232' dependencies_offset='1456' nul_chk_table_offset='1464' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='534' iicount='534' stamp='2.754'/>
<writer thread='20376'/>
Decoding compiled method 0x0000000002c61510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002c61640: mov    0x8(%rdx),%r10d
  0x0000000002c61644: shl    $0x3,%r10
  0x0000000002c61648: cmp    %r10,%rax
  0x0000000002c6164b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c61651: data16 xchg %ax,%ax
  0x0000000002c61654: nopl   0x0(%rax,%rax,1)
  0x0000000002c6165c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c61660: mov    %eax,-0x6000(%rsp)
  0x0000000002c61667: push   %rbp
  0x0000000002c61668: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002c6166c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002c61670: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002c61681
  0x0000000002c61675: add    $0x10,%rsp
  0x0000000002c61679: pop    %rbp
  0x0000000002c6167a: test   %eax,-0x1e41680(%rip)        # 0x0000000000e20000
                                                ;   {poll_return}
  0x0000000002c61680: retq   
  0x0000000002c61681: mov    $0xfffffff6,%edx
  0x0000000002c61686: nop
  0x0000000002c61687: callq  0x0000000002b957a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002c6168c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002c6168d: hlt    
  0x0000000002c6168e: hlt    
  0x0000000002c6168f: hlt    
  0x0000000002c61690: hlt    
  0x0000000002c61691: hlt    
  0x0000000002c61692: hlt    
  0x0000000002c61693: hlt    
  0x0000000002c61694: hlt    
  0x0000000002c61695: hlt    
  0x0000000002c61696: hlt    
  0x0000000002c61697: hlt    
  0x0000000002c61698: hlt    
  0x0000000002c61699: hlt    
  0x0000000002c6169a: hlt    
  0x0000000002c6169b: hlt    
  0x0000000002c6169c: hlt    
  0x0000000002c6169d: hlt    
  0x0000000002c6169e: hlt    
  0x0000000002c6169f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c616a0: jmpq   0x0000000002c59660  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c616a5: callq  0x0000000002c616aa
  0x0000000002c616aa: subq   $0x5,(%rsp)
  0x0000000002c616af: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c616b4: hlt    
  0x0000000002c616b5: hlt    
  0x0000000002c616b6: hlt    
  0x0000000002c616b7: hlt    
<nmethod compile_id='15' compiler='C2' level='4' entry='0x0000000002c61640' size='584' address='0x0000000002c61510' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='26854' iicount='26854' stamp='2.817'/>
<writer thread='21536'/>
<task_queued compile_id='23' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='2.817' comment='tiered' hot_count='256'/>
<writer thread='20928'/>
Decoding compiled method 0x0000000002c612d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc9ea98} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002c61400: mov    %eax,-0x6000(%rsp)
  0x0000000002c61407: push   %rbp
  0x0000000002c61408: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)

  0x0000000002c6140c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x0000000002c61423
  0x0000000002c61410: mov    %r10,%rax
  0x0000000002c61413: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x0000000002c61417: add    $0x20,%rsp
  0x0000000002c6141b: pop    %rbp
  0x0000000002c6141c: test   %eax,-0x1e41422(%rip)        # 0x0000000000e20000
                                                ;   {poll_return}
  0x0000000002c61422: retq   
  0x0000000002c61423: mov    %rdx,(%rsp)
  0x0000000002c61427: mov    $0xffffff65,%edx
  0x0000000002c6142c: data16 xchg %ax,%ax
  0x0000000002c6142f: callq  0x0000000002b957a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002c61434: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x0000000002c61435: hlt    
  0x0000000002c61436: hlt    
  0x0000000002c61437: hlt    
  0x0000000002c61438: hlt    
  0x0000000002c61439: hlt    
  0x0000000002c6143a: hlt    
  0x0000000002c6143b: hlt    
  0x0000000002c6143c: hlt    
  0x0000000002c6143d: hlt    
  0x0000000002c6143e: hlt    
  0x0000000002c6143f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c61440: jmpq   0x0000000002c59660  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c61445: callq  0x0000000002c6144a
  0x0000000002c6144a: subq   $0x5,(%rsp)
  0x0000000002c6144f: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c61454: hlt    
  0x0000000002c61455: hlt    
  0x0000000002c61456: hlt    
  0x0000000002c61457: hlt    
<nmethod compile_id='14' compiler='C2' level='4' entry='0x0000000002c61400' size='552' address='0x0000000002c612d0' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10393' iicount='10393' stamp='2.880'/>
<writer thread='21536'/>
<task_queued compile_id='24' method='java/lang/Character toLowerCase (I)I' bytes='9' count='768' iicount='768' level='3' stamp='2.880' comment='tiered' hot_count='768'/>
<writer thread='14456'/>
Decoding compiled method 0x0000000002c60f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002c61060: mov    0x8(%rdx),%r10d
  0x0000000002c61064: shl    $0x3,%r10
  0x0000000002c61068: cmp    %r10,%rax
  0x0000000002c6106b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c61071: data16 xchg %ax,%ax
  0x0000000002c61074: nopl   0x0(%rax,%rax,1)
  0x0000000002c6107c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c61080: mov    %eax,-0x6000(%rsp)
  0x0000000002c61087: push   %rbp
  0x0000000002c61088: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002c6108c: test   %r8d,%r8d
  0x0000000002c6108f: jl     0x0000000002c610cd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002c61091: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002c61095: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002c610f5
  0x0000000002c6109a: cmp    %ebp,%r8d
  0x0000000002c6109d: jge    0x0000000002c610e1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002c6109f: cmp    %ebp,%r8d
  0x0000000002c610a2: jae    0x0000000002c610ba
  0x0000000002c610a4: shl    $0x3,%r10
  0x0000000002c610a8: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002c610ae: add    $0x20,%rsp
  0x0000000002c610b2: pop    %rbp
  0x0000000002c610b3: test   %eax,-0x1e410b9(%rip)        # 0x0000000000e20000
                                                ;   {poll_return}
  0x0000000002c610b9: retq   
  0x0000000002c610ba: mov    $0xffffffe4,%edx
  0x0000000002c610bf: mov    %r8d,%ebp
  0x0000000002c610c2: mov    %r10d,(%rsp)
  0x0000000002c610c6: nop
  0x0000000002c610c7: callq  0x0000000002b957a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002c610cc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002c610cd: mov    %rdx,%rbp
  0x0000000002c610d0: mov    %r8d,0x4(%rsp)
  0x0000000002c610d5: mov    $0xffffff65,%edx
  0x0000000002c610da: nop
  0x0000000002c610db: callq  0x0000000002b957a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002c610e0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002c610e1: mov    %rdx,(%rsp)
  0x0000000002c610e5: mov    %r8d,0xc(%rsp)
  0x0000000002c610ea: mov    $0xffffff65,%edx
  0x0000000002c610ef: callq  0x0000000002b957a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002c610f4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002c610f5: mov    $0xfffffff6,%edx
  0x0000000002c610fa: nop
  0x0000000002c610fb: callq  0x0000000002b957a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002c61100: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002c61101: hlt    
  0x0000000002c61102: hlt    
  0x0000000002c61103: hlt    
  0x0000000002c61104: hlt    
  0x0000000002c61105: hlt    
  0x0000000002c61106: hlt    
  0x0000000002c61107: hlt    
  0x0000000002c61108: hlt    
  0x0000000002c61109: hlt    
  0x0000000002c6110a: hlt    
  0x0000000002c6110b: hlt    
  0x0000000002c6110c: hlt    
  0x0000000002c6110d: hlt    
  0x0000000002c6110e: hlt    
  0x0000000002c6110f: hlt    
  0x0000000002c61110: hlt    
  0x0000000002c61111: hlt    
  0x0000000002c61112: hlt    
  0x0000000002c61113: hlt    
  0x0000000002c61114: hlt    
  0x0000000002c61115: hlt    
  0x0000000002c61116: hlt    
  0x0000000002c61117: hlt    
  0x0000000002c61118: hlt    
  0x0000000002c61119: hlt    
  0x0000000002c6111a: hlt    
  0x0000000002c6111b: hlt    
  0x0000000002c6111c: hlt    
  0x0000000002c6111d: hlt    
  0x0000000002c6111e: hlt    
  0x0000000002c6111f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c61120: jmpq   0x0000000002c59660  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c61125: callq  0x0000000002c6112a
  0x0000000002c6112a: subq   $0x5,(%rsp)
  0x0000000002c6112f: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c61134: hlt    
  0x0000000002c61135: hlt    
  0x0000000002c61136: hlt    
  0x0000000002c61137: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x0000000002c61060' size='928' address='0x0000000002c60f10' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='90429' iicount='90429' stamp='3.016'/>
<writer thread='21536'/>
<task_queued compile_id='25' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='768' iicount='768' level='3' stamp='3.016' comment='tiered' hot_count='768'/>
<task_queued compile_id='26' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='3.016' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c60690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002c60820: mov    0x8(%rdx),%r10d
  0x0000000002c60824: shl    $0x3,%r10
  0x0000000002c60828: cmp    %rax,%r10
  0x0000000002c6082b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c60831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6083c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c60840: mov    %eax,-0x6000(%rsp)
  0x0000000002c60847: push   %rbp
  0x0000000002c60848: sub    $0xa0,%rsp
  0x0000000002c6084f: movabs $0x1bd92eb8,%rsi   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c60859: mov    0xdc(%rsi),%edi
  0x0000000002c6085f: add    $0x8,%edi
  0x0000000002c60862: mov    %edi,0xdc(%rsi)
  0x0000000002c60868: movabs $0x1bbe3c80,%rsi   ;   {metadata({method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c60872: and    $0x1ff8,%edi
  0x0000000002c60878: cmp    $0x0,%edi
  0x0000000002c6087b: je     0x0000000002c60b39  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x0000000002c60881: mov    0x10(%rdx),%esi
  0x0000000002c60884: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002c60888: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000002c60b50
  0x0000000002c6088b: mov    %r8,%rbx
  0x0000000002c6088e: sub    %edi,%ebx
  0x0000000002c60890: cmp    $0x0,%ebx
  0x0000000002c60893: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6089d: movabs $0x108,%rax
  0x0000000002c608a7: jle    0x0000000002c608b7
  0x0000000002c608ad: movabs $0x118,%rax
  0x0000000002c608b7: mov    (%rbx,%rax,1),%rcx
  0x0000000002c608bb: lea    0x1(%rcx),%rcx
  0x0000000002c608bf: mov    %rcx,(%rbx,%rax,1)
  0x0000000002c608c3: jle    0x0000000002c60b2a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x0000000002c608c9: mov    %edi,0x78(%rsp)
  0x0000000002c608cd: mov    %rsi,0x80(%rsp)
  0x0000000002c608d5: mov    %rdx,%rbx
  0x0000000002c608d8: movabs $0x1bd92eb8,%rax   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c608e2: addq   $0x1,0x128(%rax)
  0x0000000002c608ea: mov    %rdx,%rbx
  0x0000000002c608ed: mov    %rbx,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c608f0: mov    %rbx,0x88(%rsp)
  0x0000000002c608f8: nop
  0x0000000002c608f9: nop
  0x0000000002c608fa: nop
  0x0000000002c608fb: nop
  0x0000000002c608fc: nop
  0x0000000002c608fd: nop
  0x0000000002c608fe: nop
  0x0000000002c608ff: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000002c60904: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c60907: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c60911: addq   $0x1,0x138(%rbx)
  0x0000000002c60919: movabs $0x1bd931f8,%rbx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c60923: mov    0xdc(%rbx),%edx
  0x0000000002c60929: add    $0x8,%edx
  0x0000000002c6092c: mov    %edx,0xdc(%rbx)
  0x0000000002c60932: movabs $0x1bc88b60,%rbx   ;   {metadata({method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6093c: and    $0x7ffff8,%edx
  0x0000000002c60942: cmp    $0x0,%edx
  0x0000000002c60945: je     0x0000000002c60b55
  0x0000000002c6094b: mov    %r8,%rbx
  0x0000000002c6094e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c60958: movslq %ebx,%rbx
  0x0000000002c6095b: mov    %rbx,%rdi
  0x0000000002c6095e: cmp    $0xffffff,%rbx
  0x0000000002c60965: ja     0x0000000002c60b6c
  0x0000000002c6096b: movabs $0x17,%rsi
  0x0000000002c60975: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c60979: and    $0xfffffffffffffff8,%rsi
  0x0000000002c6097d: mov    0x60(%r15),%rax
  0x0000000002c60981: lea    (%rax,%rsi,1),%rsi
  0x0000000002c60985: cmp    0x70(%r15),%rsi
  0x0000000002c60989: ja     0x0000000002c60b6c
  0x0000000002c6098f: mov    %rsi,0x60(%r15)
  0x0000000002c60993: sub    %rax,%rsi
  0x0000000002c60996: movq   $0x1,(%rax)
  0x0000000002c6099d: mov    %rdx,%rcx
  0x0000000002c609a0: shr    $0x3,%rcx
  0x0000000002c609a4: mov    %ecx,0x8(%rax)
  0x0000000002c609a7: mov    %ebx,0xc(%rax)
  0x0000000002c609aa: sub    $0x10,%rsi
  0x0000000002c609ae: je     0x0000000002c609c5
  0x0000000002c609b4: xor    %rbx,%rbx
  0x0000000002c609b7: shr    $0x3,%rsi
  0x0000000002c609bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c609c0: dec    %rsi
  0x0000000002c609c3: jne    0x0000000002c609bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c609c5: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c609cf: addq   $0x1,0x108(%rdx)
  0x0000000002c609d7: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c609e1: mov    0xdc(%rdx),%r9d
  0x0000000002c609e8: add    $0x8,%r9d
  0x0000000002c609ec: mov    %r9d,0xdc(%rdx)
  0x0000000002c609f3: movabs $0x1bc64608,%rdx   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c609fd: and    $0x7ffff8,%r9d
  0x0000000002c60a04: cmp    $0x0,%r9d
  0x0000000002c60a08: je     0x0000000002c60b76
  0x0000000002c60a0e: mov    0x78(%rsp),%edi
  0x0000000002c60a12: cmp    %r8d,%edi
  0x0000000002c60a15: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c60a1f: movabs $0x108,%r9
  0x0000000002c60a29: jg     0x0000000002c60a39
  0x0000000002c60a2f: movabs $0x118,%r9
  0x0000000002c60a39: mov    (%rdx,%r9,1),%rsi
  0x0000000002c60a3d: lea    0x1(%rsi),%rsi
  0x0000000002c60a41: mov    %rsi,(%rdx,%r9,1)
  0x0000000002c60a45: jg     0x0000000002c60a63  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c60a4b: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c60a55: incl   0x128(%rdx)
  0x0000000002c60a5b: mov    %rdi,%rsi
  0x0000000002c60a5e: jmpq   0x0000000002c60a66  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c60a63: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c60a66: mov    0x80(%rsp),%rdx
  0x0000000002c60a6e: movabs $0x1bd931f8,%r8    ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c60a78: addq   $0x1,0x118(%r8)
  0x0000000002c60a80: mov    $0x0,%r8d
  0x0000000002c60a86: mov    %rax,%r9
  0x0000000002c60a89: mov    $0x0,%edi
  0x0000000002c60a8e: mov    %rax,0x90(%rsp)
  0x0000000002c60a96: lea    (%r8,%rsi,1),%rcx
  0x0000000002c60a9a: cmp    0xc(%rdx),%ecx
  0x0000000002c60a9d: ja     0x0000000002c60b8d
  0x0000000002c60aa3: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c60aa7: cmp    0xc(%r9),%ecx
  0x0000000002c60aab: ja     0x0000000002c60b8d
  0x0000000002c60ab1: test   %esi,%esi
  0x0000000002c60ab3: jl     0x0000000002c60b8d
  0x0000000002c60ab9: je     0x0000000002c60afd
  0x0000000002c60abf: movslq %r8d,%r8
  0x0000000002c60ac2: movslq %edi,%rdi
  0x0000000002c60ac5: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c60aca: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c60acf: mov    %rsi,%r8
  0x0000000002c60ad2: sub    $0x20,%rsp
  0x0000000002c60ad6: test   $0xf,%esp
  0x0000000002c60adc: je     0x0000000002c60af4
  0x0000000002c60ae2: sub    $0x8,%rsp
  0x0000000002c60ae6: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c60aeb: add    $0x8,%rsp
  0x0000000002c60aef: jmpq   0x0000000002c60af9
  0x0000000002c60af4: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c60af9: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c60afd: mov    0x90(%rsp),%rax
  0x0000000002c60b05: mov    0x88(%rsp),%rdx
  0x0000000002c60b0d: mov    %rax,%r10
  0x0000000002c60b10: shr    $0x3,%r10
  0x0000000002c60b14: mov    %r10d,0x10(%rdx)
  0x0000000002c60b18: shr    $0x9,%rdx
  0x0000000002c60b1c: movabs $0xe8fe000,%rsi
  0x0000000002c60b26: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000002c60b2a: add    $0xa0,%rsp
  0x0000000002c60b31: pop    %rbp
  0x0000000002c60b32: test   %eax,-0x1e40a38(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c60b38: retq   
  0x0000000002c60b39: mov    %rsi,0x8(%rsp)
  0x0000000002c60b3e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c60b46: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=811}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x0000000002c60b4b: jmpq   0x0000000002c60881
  0x0000000002c60b50: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rsi=Oop off=821}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002c60b55: mov    %rbx,0x8(%rsp)
  0x0000000002c60b5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c60b62: callq  0x0000000002c58220  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002c60b67: jmpq   0x0000000002c6094b
  0x0000000002c60b6c: callq  0x0000000002c54a40  ; OopMap{[136]=Oop [128]=Oop off=849}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002c60b71: jmpq   0x0000000002c609c5
  0x0000000002c60b76: mov    %rdx,0x8(%rsp)
  0x0000000002c60b7b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c60b83: callq  0x0000000002c58220  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=872}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002c60b88: jmpq   0x0000000002c60a0e
  0x0000000002c60b8d: nop
  0x0000000002c60b8e: nop
  0x0000000002c60b8f: callq  0x0000000002b96620  ; OopMap{[136]=Oop [144]=Oop off=884}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x0000000002c60b94: jmpq   0x0000000002c60afd
  0x0000000002c60b99: nop
  0x0000000002c60b9a: nop
  0x0000000002c60b9b: mov    0x2a8(%r15),%rax
  0x0000000002c60ba2: movabs $0x0,%r10
  0x0000000002c60bac: mov    %r10,0x2a8(%r15)
  0x0000000002c60bb3: movabs $0x0,%r10
  0x0000000002c60bbd: mov    %r10,0x2b0(%r15)
  0x0000000002c60bc4: add    $0xa0,%rsp
  0x0000000002c60bcb: pop    %rbp
  0x0000000002c60bcc: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c60bd1: hlt    
  0x0000000002c60bd2: hlt    
  0x0000000002c60bd3: hlt    
  0x0000000002c60bd4: hlt    
  0x0000000002c60bd5: hlt    
  0x0000000002c60bd6: hlt    
  0x0000000002c60bd7: hlt    
  0x0000000002c60bd8: hlt    
  0x0000000002c60bd9: hlt    
  0x0000000002c60bda: hlt    
  0x0000000002c60bdb: hlt    
  0x0000000002c60bdc: hlt    
  0x0000000002c60bdd: hlt    
  0x0000000002c60bde: hlt    
  0x0000000002c60bdf: hlt    
[Stub Code]
  0x0000000002c60be0: nop                       ;   {no_reloc}
  0x0000000002c60be1: nop
  0x0000000002c60be2: nop
  0x0000000002c60be3: nop
  0x0000000002c60be4: nop
  0x0000000002c60be5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c60bef: jmpq   0x0000000002c60bef  ;   {runtime_call}
  0x0000000002c60bf4: nop
  0x0000000002c60bf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c60bff: jmpq   0x0000000002c60bff  ;   {runtime_call}
[Exception Handler]
  0x0000000002c60c04: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c60c09: mov    %rsp,-0x28(%rsp)
  0x0000000002c60c0e: sub    $0x80,%rsp
  0x0000000002c60c15: mov    %rax,0x78(%rsp)
  0x0000000002c60c1a: mov    %rcx,0x70(%rsp)
  0x0000000002c60c1f: mov    %rdx,0x68(%rsp)
  0x0000000002c60c24: mov    %rbx,0x60(%rsp)
  0x0000000002c60c29: mov    %rbp,0x50(%rsp)
  0x0000000002c60c2e: mov    %rsi,0x48(%rsp)
  0x0000000002c60c33: mov    %rdi,0x40(%rsp)
  0x0000000002c60c38: mov    %r8,0x38(%rsp)
  0x0000000002c60c3d: mov    %r9,0x30(%rsp)
  0x0000000002c60c42: mov    %r10,0x28(%rsp)
  0x0000000002c60c47: mov    %r11,0x20(%rsp)
  0x0000000002c60c4c: mov    %r12,0x18(%rsp)
  0x0000000002c60c51: mov    %r13,0x10(%rsp)
  0x0000000002c60c56: mov    %r14,0x8(%rsp)
  0x0000000002c60c5b: mov    %r15,(%rsp)
  0x0000000002c60c5f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c60c69: movabs $0x2c60c09,%rdx    ;   {internal_word}
  0x0000000002c60c73: mov    %rsp,%r8
  0x0000000002c60c76: and    $0xfffffffffffffff0,%rsp
  0x0000000002c60c7a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c60c7f: hlt    
[Deopt Handler Code]
  0x0000000002c60c80: movabs $0x2c60c80,%r10    ;   {section_word}
  0x0000000002c60c8a: push   %r10
  0x0000000002c60c8c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c60c91: hlt    
  0x0000000002c60c92: hlt    
  0x0000000002c60c93: hlt    
  0x0000000002c60c94: hlt    
  0x0000000002c60c95: hlt    
  0x0000000002c60c96: hlt    
  0x0000000002c60c97: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000002c60820' size='2128' address='0x0000000002c60690' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='509' iicount='509' stamp='3.404'/>
<writer thread='21536'/>
<task_queued compile_id='27' method='java/lang/Character toLowerCase (I)I' bytes='9' count='896' iicount='896' level='3' stamp='3.404' comment='tiered' hot_count='896'/>
<task_queued compile_id='28' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='256' iicount='256' level='3' stamp='3.404' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5fc90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002c5fe00: mov    0x8(%rdx),%r10d
  0x0000000002c5fe04: shl    $0x3,%r10
  0x0000000002c5fe08: cmp    %rax,%r10
  0x0000000002c5fe0b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5fe11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5fe1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5fe20: mov    %eax,-0x6000(%rsp)
  0x0000000002c5fe27: push   %rbp
  0x0000000002c5fe28: sub    $0x40,%rsp
  0x0000000002c5fe2c: movabs $0x1bd42620,%rax   ;   {metadata(method data for {method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fe36: mov    0xdc(%rax),%esi
  0x0000000002c5fe3c: add    $0x8,%esi
  0x0000000002c5fe3f: mov    %esi,0xdc(%rax)
  0x0000000002c5fe45: movabs $0x1bd3f818,%rax   ;   {metadata({method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fe4f: and    $0x1ff8,%esi
  0x0000000002c5fe55: cmp    $0x0,%esi
  0x0000000002c5fe58: je     0x0000000002c5ff67  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x0000000002c5fe5e: movabs $0x1bd42620,%rax   ;   {metadata(method data for {method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fe68: addq   $0x1,0x118(%rax)
  0x0000000002c5fe70: movabs $0x1bd427e0,%rax   ;   {metadata(method data for {method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fe7a: mov    0xdc(%rax),%esi
  0x0000000002c5fe80: add    $0x8,%esi
  0x0000000002c5fe83: mov    %esi,0xdc(%rax)
  0x0000000002c5fe89: movabs $0x1bd3f048,%rax   ;   {metadata({method} {0x000000001bd3f050} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fe93: and    $0x7ffff8,%esi
  0x0000000002c5fe99: cmp    $0x0,%esi
  0x0000000002c5fe9c: je     0x0000000002c5ff7e
  0x0000000002c5fea2: mov    %r8,%rax
  0x0000000002c5fea5: and    $0xffff,%eax
  0x0000000002c5feab: movabs $0x76b7b2ba8,%rsi  ;   {oop([I)}
  0x0000000002c5feb5: movslq %eax,%rdi
  0x0000000002c5feb8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002c5ff95
  0x0000000002c5febb: jae    0x0000000002c5ff9f
  0x0000000002c5fec1: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002c5fec5: mov    %rax,%rsi
  0x0000000002c5fec8: and    $0x20000,%esi
  0x0000000002c5fece: cmp    $0x0,%esi
  0x0000000002c5fed1: movabs $0x1bd42620,%rsi   ;   {metadata(method data for {method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5fedb: movabs $0x138,%rdi
  0x0000000002c5fee5: je     0x0000000002c5fef5
  0x0000000002c5feeb: movabs $0x148,%rdi
  0x0000000002c5fef5: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c5fef9: lea    0x1(%rbx),%rbx
  0x0000000002c5fefd: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c5ff01: je     0x0000000002c5ff58  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002c5ff07: mov    %rax,%rsi
  0x0000000002c5ff0a: and    $0x7fc0000,%esi
  0x0000000002c5ff10: cmp    $0x7fc0000,%esi
  0x0000000002c5ff16: movabs $0x1bd42620,%rsi   ;   {metadata(method data for {method} {0x000000001bd3f820} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c5ff20: movabs $0x158,%rdi
  0x0000000002c5ff2a: je     0x0000000002c5ff3a
  0x0000000002c5ff30: movabs $0x168,%rdi
  0x0000000002c5ff3a: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c5ff3e: lea    0x1(%rbx),%rbx
  0x0000000002c5ff42: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c5ff46: je     0x0000000002c5ff58  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002c5ff4c: shl    $0x5,%eax
  0x0000000002c5ff4f: sar    $0x17,%eax
  0x0000000002c5ff52: add    %r8d,%eax
  0x0000000002c5ff55: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002c5ff58: mov    %r8,%rax
  0x0000000002c5ff5b: add    $0x40,%rsp
  0x0000000002c5ff5f: pop    %rbp
  0x0000000002c5ff60: test   %eax,-0x1e3fe66(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5ff66: retq   
  0x0000000002c5ff67: mov    %rax,0x8(%rsp)
  0x0000000002c5ff6c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5ff74: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000002c5ff79: jmpq   0x0000000002c5fe5e
  0x0000000002c5ff7e: mov    %rax,0x8(%rsp)
  0x0000000002c5ff83: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5ff8b: callq  0x0000000002c58220  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002c5ff90: jmpq   0x0000000002c5fea2
  0x0000000002c5ff95: callq  0x0000000002c539c0  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002c5ff9a: callq  0x0000000002c539c0  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002c5ff9f: mov    %rax,(%rsp)
  0x0000000002c5ffa3: callq  0x0000000002c53300  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002c5ffa8: nop
  0x0000000002c5ffa9: nop
  0x0000000002c5ffaa: mov    0x2a8(%r15),%rax
  0x0000000002c5ffb1: movabs $0x0,%r10
  0x0000000002c5ffbb: mov    %r10,0x2a8(%r15)
  0x0000000002c5ffc2: movabs $0x0,%r10
  0x0000000002c5ffcc: mov    %r10,0x2b0(%r15)
  0x0000000002c5ffd3: add    $0x40,%rsp
  0x0000000002c5ffd7: pop    %rbp
  0x0000000002c5ffd8: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5ffdd: hlt    
  0x0000000002c5ffde: hlt    
  0x0000000002c5ffdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5ffe0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5ffe5: mov    %rsp,-0x28(%rsp)
  0x0000000002c5ffea: sub    $0x80,%rsp
  0x0000000002c5fff1: mov    %rax,0x78(%rsp)
  0x0000000002c5fff6: mov    %rcx,0x70(%rsp)
  0x0000000002c5fffb: mov    %rdx,0x68(%rsp)
  0x0000000002c60000: mov    %rbx,0x60(%rsp)
  0x0000000002c60005: mov    %rbp,0x50(%rsp)
  0x0000000002c6000a: mov    %rsi,0x48(%rsp)
  0x0000000002c6000f: mov    %rdi,0x40(%rsp)
  0x0000000002c60014: mov    %r8,0x38(%rsp)
  0x0000000002c60019: mov    %r9,0x30(%rsp)
  0x0000000002c6001e: mov    %r10,0x28(%rsp)
  0x0000000002c60023: mov    %r11,0x20(%rsp)
  0x0000000002c60028: mov    %r12,0x18(%rsp)
  0x0000000002c6002d: mov    %r13,0x10(%rsp)
  0x0000000002c60032: mov    %r14,0x8(%rsp)
  0x0000000002c60037: mov    %r15,(%rsp)
  0x0000000002c6003b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c60045: movabs $0x2c5ffe5,%rdx    ;   {internal_word}
  0x0000000002c6004f: mov    %rsp,%r8
  0x0000000002c60052: and    $0xfffffffffffffff0,%rsp
  0x0000000002c60056: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6005b: hlt    
[Deopt Handler Code]
  0x0000000002c6005c: movabs $0x2c6005c,%r10    ;   {section_word}
  0x0000000002c60066: push   %r10
  0x0000000002c60068: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6006d: hlt    
  0x0000000002c6006e: hlt    
  0x0000000002c6006f: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000002c5fe00' size='1352' address='0x0000000002c5fc90' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='1002' iicount='1002' stamp='3.597'/>
<writer thread='21536'/>
<task_queued compile_id='29' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1536' iicount='1536' level='1' stamp='3.598' comment='tiered' hot_count='1536'/>
<task_queued compile_id='30' method='java/lang/Character toLowerCase (I)I' bytes='9' count='1024' iicount='1024' level='3' stamp='3.598' comment='tiered' hot_count='1024'/>
<task_queued compile_id='31' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='384' iicount='384' level='3' stamp='3.598' comment='tiered' hot_count='384'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5ef90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbdffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x110]  (sp of caller)
  0x0000000002c5f140: mov    0x8(%rdx),%r10d
  0x0000000002c5f144: shl    $0x3,%r10
  0x0000000002c5f148: cmp    %rax,%r10
  0x0000000002c5f14b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5f151: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5f15c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5f160: mov    %eax,-0x6000(%rsp)
  0x0000000002c5f167: push   %rbp
  0x0000000002c5f168: sub    $0x100,%rsp
  0x0000000002c5f16f: lea    0xe0(%rsp),%rsi
  0x0000000002c5f177: mov    %rdx,0x8(%rsi)
  0x0000000002c5f17b: mov    (%rdx),%rax
  0x0000000002c5f17e: mov    %rax,%rdi
  0x0000000002c5f181: and    $0x7,%rdi
  0x0000000002c5f185: cmp    $0x5,%rdi
  0x0000000002c5f189: jne    0x0000000002c5f210
  0x0000000002c5f18f: mov    0x8(%rdx),%edi
  0x0000000002c5f192: shl    $0x3,%rdi
  0x0000000002c5f196: mov    0xa8(%rdi),%rdi
  0x0000000002c5f19d: or     %r15,%rdi
  0x0000000002c5f1a0: xor    %rax,%rdi
  0x0000000002c5f1a3: and    $0xffffffffffffff87,%rdi
  0x0000000002c5f1a7: je     0x0000000002c5f238
  0x0000000002c5f1ad: test   $0x7,%rdi
  0x0000000002c5f1b4: jne    0x0000000002c5f1fd
  0x0000000002c5f1b6: test   $0x300,%rdi
  0x0000000002c5f1bd: jne    0x0000000002c5f1dc
  0x0000000002c5f1bf: and    $0x37f,%rax
  0x0000000002c5f1c6: mov    %rax,%rdi
  0x0000000002c5f1c9: or     %r15,%rdi
  0x0000000002c5f1cc: lock cmpxchg %rdi,(%rdx)
  0x0000000002c5f1d1: jne    0x0000000002c5f655
  0x0000000002c5f1d7: jmpq   0x0000000002c5f238
  0x0000000002c5f1dc: mov    0x8(%rdx),%edi
  0x0000000002c5f1df: shl    $0x3,%rdi
  0x0000000002c5f1e3: mov    0xa8(%rdi),%rdi
  0x0000000002c5f1ea: or     %r15,%rdi
  0x0000000002c5f1ed: lock cmpxchg %rdi,(%rdx)
  0x0000000002c5f1f2: jne    0x0000000002c5f655
  0x0000000002c5f1f8: jmpq   0x0000000002c5f238
  0x0000000002c5f1fd: mov    0x8(%rdx),%edi
  0x0000000002c5f200: shl    $0x3,%rdi
  0x0000000002c5f204: mov    0xa8(%rdi),%rdi
  0x0000000002c5f20b: lock cmpxchg %rdi,(%rdx)
  0x0000000002c5f210: mov    (%rdx),%rax
  0x0000000002c5f213: or     $0x1,%rax
  0x0000000002c5f217: mov    %rax,(%rsi)
  0x0000000002c5f21a: lock cmpxchg %rsi,(%rdx)
  0x0000000002c5f21f: je     0x0000000002c5f238
  0x0000000002c5f225: sub    %rsp,%rax
  0x0000000002c5f228: and    $0xfffffffffffff007,%rax
  0x0000000002c5f22f: mov    %rax,(%rsi)
  0x0000000002c5f232: jne    0x0000000002c5f655
  0x0000000002c5f238: movabs $0x1bd93368,%rsi   ;   {metadata(method data for {method} {0x000000001bbdffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c5f242: mov    0xdc(%rsi),%edi
  0x0000000002c5f248: add    $0x8,%edi
  0x0000000002c5f24b: mov    %edi,0xdc(%rsi)
  0x0000000002c5f251: movabs $0x1bbdffd8,%rsi   ;   {metadata({method} {0x000000001bbdffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c5f25b: and    $0x1ff8,%edi
  0x0000000002c5f261: cmp    $0x0,%edi
  0x0000000002c5f264: je     0x0000000002c5f668  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x0000000002c5f26a: movl   $0x0,0x14(%rdx)
  0x0000000002c5f271: mov    %rdx,%rsi
  0x0000000002c5f274: shr    $0x9,%rsi
  0x0000000002c5f278: movabs $0xe8fe000,%rdi
  0x0000000002c5f282: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002c5f286: mov    %rdx,%rsi
  0x0000000002c5f289: movabs $0x1bd93368,%rdi   ;   {metadata(method data for {method} {0x000000001bbdffe0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c5f293: addq   $0x1,0x108(%rdi)
  0x0000000002c5f29b: movabs $0x1bd934a0,%rsi   ;   {metadata(method data for {method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f2a5: mov    0xdc(%rsi),%edi
  0x0000000002c5f2ab: add    $0x8,%edi
  0x0000000002c5f2ae: mov    %edi,0xdc(%rsi)
  0x0000000002c5f2b4: movabs $0x1bbe4db8,%rsi   ;   {metadata({method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f2be: and    $0x7ffff8,%edi
  0x0000000002c5f2c4: cmp    $0x0,%edi
  0x0000000002c5f2c7: je     0x0000000002c5f67f
  0x0000000002c5f2cd: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f2d0: inc    %esi
  0x0000000002c5f2d2: mov    %rdx,%rdi
  0x0000000002c5f2d5: movabs $0x1bd934a0,%rbx   ;   {metadata(method data for {method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f2df: addq   $0x1,0x108(%rbx)
  0x0000000002c5f2e7: movabs $0x1bd92eb8,%rdi   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f2f1: mov    0xdc(%rdi),%ebx
  0x0000000002c5f2f7: add    $0x8,%ebx
  0x0000000002c5f2fa: mov    %ebx,0xdc(%rdi)
  0x0000000002c5f300: movabs $0x1bbe3c80,%rdi   ;   {metadata({method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f30a: and    $0x7ffff8,%ebx
  0x0000000002c5f310: cmp    $0x0,%ebx
  0x0000000002c5f313: je     0x0000000002c5f696
  0x0000000002c5f319: mov    0x10(%rdx),%edi
  0x0000000002c5f31c: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f320: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002c5f6ad
  0x0000000002c5f323: mov    %rsi,%rax
  0x0000000002c5f326: sub    %ebx,%eax
  0x0000000002c5f328: cmp    $0x0,%eax
  0x0000000002c5f32b: movabs $0x1bd92eb8,%rax   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f335: movabs $0x108,%rcx
  0x0000000002c5f33f: jle    0x0000000002c5f34f
  0x0000000002c5f345: movabs $0x118,%rcx
  0x0000000002c5f34f: mov    (%rax,%rcx,1),%r9
  0x0000000002c5f353: lea    0x1(%r9),%r9
  0x0000000002c5f357: mov    %r9,(%rax,%rcx,1)
  0x0000000002c5f35b: jg     0x0000000002c5f36e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f361: mov    %r8d,0xc4(%rsp)
  0x0000000002c5f369: jmpq   0x0000000002c5f5e3  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f36e: mov    %ebx,0xc0(%rsp)
  0x0000000002c5f375: mov    %rdi,0xc8(%rsp)
  0x0000000002c5f37d: mov    %r8d,0xc4(%rsp)
  0x0000000002c5f385: mov    %rdx,%rax
  0x0000000002c5f388: movabs $0x1bd92eb8,%rcx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f392: addq   $0x1,0x128(%rcx)
  0x0000000002c5f39a: mov    %rsi,%r8
  0x0000000002c5f39d: mov    %rdx,%rsi
  0x0000000002c5f3a0: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f3a3: mov    %rsi,0xd0(%rsp)
  0x0000000002c5f3ab: nop
  0x0000000002c5f3ac: nop
  0x0000000002c5f3ad: nop
  0x0000000002c5f3ae: nop
  0x0000000002c5f3af: callq  0x0000000002b961a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=628}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002c5f3b4: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f3b7: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c5f3c1: addq   $0x1,0x138(%rbx)
  0x0000000002c5f3c9: movabs $0x1bd931f8,%rbx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c5f3d3: mov    0xdc(%rbx),%edx
  0x0000000002c5f3d9: add    $0x8,%edx
  0x0000000002c5f3dc: mov    %edx,0xdc(%rbx)
  0x0000000002c5f3e2: movabs $0x1bc88b60,%rbx   ;   {metadata({method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c5f3ec: and    $0x7ffff8,%edx
  0x0000000002c5f3f2: cmp    $0x0,%edx
  0x0000000002c5f3f5: je     0x0000000002c5f6b2
  0x0000000002c5f3fb: mov    %r8,%rbx
  0x0000000002c5f3fe: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c5f408: movslq %ebx,%rbx
  0x0000000002c5f40b: mov    %rbx,%rdi
  0x0000000002c5f40e: cmp    $0xffffff,%rbx
  0x0000000002c5f415: ja     0x0000000002c5f6c9
  0x0000000002c5f41b: movabs $0x17,%rsi
  0x0000000002c5f425: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c5f429: and    $0xfffffffffffffff8,%rsi
  0x0000000002c5f42d: mov    0x60(%r15),%rax
  0x0000000002c5f431: lea    (%rax,%rsi,1),%rsi
  0x0000000002c5f435: cmp    0x70(%r15),%rsi
  0x0000000002c5f439: ja     0x0000000002c5f6c9
  0x0000000002c5f43f: mov    %rsi,0x60(%r15)
  0x0000000002c5f443: sub    %rax,%rsi
  0x0000000002c5f446: movq   $0x1,(%rax)
  0x0000000002c5f44d: mov    %rdx,%rcx
  0x0000000002c5f450: shr    $0x3,%rcx
  0x0000000002c5f454: mov    %ecx,0x8(%rax)
  0x0000000002c5f457: mov    %ebx,0xc(%rax)
  0x0000000002c5f45a: sub    $0x10,%rsi
  0x0000000002c5f45e: je     0x0000000002c5f475
  0x0000000002c5f464: xor    %rbx,%rbx
  0x0000000002c5f467: shr    $0x3,%rsi
  0x0000000002c5f46b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c5f470: dec    %rsi
  0x0000000002c5f473: jne    0x0000000002c5f46b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f475: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c5f47f: addq   $0x1,0x108(%rdx)
  0x0000000002c5f487: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5f491: mov    0xdc(%rdx),%r9d
  0x0000000002c5f498: add    $0x8,%r9d
  0x0000000002c5f49c: mov    %r9d,0xdc(%rdx)
  0x0000000002c5f4a3: movabs $0x1bc64608,%rdx   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5f4ad: and    $0x7ffff8,%r9d
  0x0000000002c5f4b4: cmp    $0x0,%r9d
  0x0000000002c5f4b8: je     0x0000000002c5f6d3
  0x0000000002c5f4be: mov    0xc0(%rsp),%ebx
  0x0000000002c5f4c5: cmp    %r8d,%ebx
  0x0000000002c5f4c8: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5f4d2: movabs $0x108,%r9
  0x0000000002c5f4dc: jg     0x0000000002c5f4ec
  0x0000000002c5f4e2: movabs $0x118,%r9
  0x0000000002c5f4ec: mov    (%rdx,%r9,1),%rdi
  0x0000000002c5f4f0: lea    0x1(%rdi),%rdi
  0x0000000002c5f4f4: mov    %rdi,(%rdx,%r9,1)
  0x0000000002c5f4f8: jg     0x0000000002c5f513  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f4fe: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c5f508: incl   0x128(%rdx)
  0x0000000002c5f50e: jmpq   0x0000000002c5f516  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f513: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f516: mov    0xc8(%rsp),%rdi
  0x0000000002c5f51e: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c5f528: addq   $0x1,0x118(%rdx)
  0x0000000002c5f530: mov    %rdi,%rdx
  0x0000000002c5f533: mov    $0x0,%r8d
  0x0000000002c5f539: mov    %rax,%r9
  0x0000000002c5f53c: mov    $0x0,%edi
  0x0000000002c5f541: mov    %rbx,%rsi
  0x0000000002c5f544: mov    %rax,0xd8(%rsp)
  0x0000000002c5f54c: lea    (%r8,%rsi,1),%rcx
  0x0000000002c5f550: cmp    0xc(%rdx),%ecx
  0x0000000002c5f553: ja     0x0000000002c5f6ea
  0x0000000002c5f559: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c5f55d: cmp    0xc(%r9),%ecx
  0x0000000002c5f561: ja     0x0000000002c5f6ea
  0x0000000002c5f567: test   %esi,%esi
  0x0000000002c5f569: jl     0x0000000002c5f6ea
  0x0000000002c5f56f: je     0x0000000002c5f5b3
  0x0000000002c5f575: movslq %r8d,%r8
  0x0000000002c5f578: movslq %edi,%rdi
  0x0000000002c5f57b: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c5f580: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c5f585: mov    %rsi,%r8
  0x0000000002c5f588: sub    $0x20,%rsp
  0x0000000002c5f58c: test   $0xf,%esp
  0x0000000002c5f592: je     0x0000000002c5f5aa
  0x0000000002c5f598: sub    $0x8,%rsp
  0x0000000002c5f59c: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c5f5a1: add    $0x8,%rsp
  0x0000000002c5f5a5: jmpq   0x0000000002c5f5af
  0x0000000002c5f5aa: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c5f5af: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f5b3: mov    0xd8(%rsp),%rax
  0x0000000002c5f5bb: mov    0xd0(%rsp),%rdx
  0x0000000002c5f5c3: mov    %rax,%r10
  0x0000000002c5f5c6: shr    $0x3,%r10
  0x0000000002c5f5ca: mov    %r10d,0x10(%rdx)
  0x0000000002c5f5ce: mov    %rdx,%rax
  0x0000000002c5f5d1: shr    $0x9,%rax
  0x0000000002c5f5d5: movabs $0xe8fe000,%rsi
  0x0000000002c5f5df: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f5e3: mov    0xc4(%rsp),%r8d
  0x0000000002c5f5eb: mov    0x10(%rdx),%eax
  0x0000000002c5f5ee: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f5f2: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f5f5: mov    %rsi,%rdi
  0x0000000002c5f5f8: inc    %edi
  0x0000000002c5f5fa: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f5fd: movslq %esi,%rdi
  0x0000000002c5f600: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002c5f6f9
  0x0000000002c5f603: jae    0x0000000002c5f703
  0x0000000002c5f609: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c5f60f: lea    0xe0(%rsp),%rax
  0x0000000002c5f617: mov    0x8(%rax),%rdi
  0x0000000002c5f61b: mov    (%rdi),%rsi
  0x0000000002c5f61e: and    $0x7,%rsi
  0x0000000002c5f622: cmp    $0x5,%rsi
  0x0000000002c5f626: je     0x0000000002c5f643
  0x0000000002c5f62c: mov    (%rax),%rsi
  0x0000000002c5f62f: test   %rsi,%rsi
  0x0000000002c5f632: je     0x0000000002c5f643
  0x0000000002c5f638: lock cmpxchg %rsi,(%rdi)
  0x0000000002c5f63d: jne    0x0000000002c5f70c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002c5f643: mov    %rdx,%rax
  0x0000000002c5f646: add    $0x100,%rsp
  0x0000000002c5f64d: pop    %rbp
  0x0000000002c5f64e: test   %eax,-0x1e3f554(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5f654: retq   
  0x0000000002c5f655: mov    %rdx,0x8(%rsp)
  0x0000000002c5f65a: mov    %rsi,(%rsp)
  0x0000000002c5f65e: callq  0x0000000002c56520  ; OopMap{rdx=Oop [232]=Oop off=1315}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002c5f663: jmpq   0x0000000002c5f238
  0x0000000002c5f668: mov    %rsi,0x8(%rsp)
  0x0000000002c5f66d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5f675: callq  0x0000000002c58220  ; OopMap{rdx=Oop [232]=Oop off=1338}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002c5f67a: jmpq   0x0000000002c5f26a
  0x0000000002c5f67f: mov    %rsi,0x8(%rsp)
  0x0000000002c5f684: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5f68c: callq  0x0000000002c58220  ; OopMap{rdx=Oop [232]=Oop off=1361}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f691: jmpq   0x0000000002c5f2cd
  0x0000000002c5f696: mov    %rdi,0x8(%rsp)
  0x0000000002c5f69b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5f6a3: callq  0x0000000002c58220  ; OopMap{rdx=Oop [232]=Oop off=1384}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6a8: jmpq   0x0000000002c5f319
  0x0000000002c5f6ad: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=1394}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6b2: mov    %rbx,0x8(%rsp)
  0x0000000002c5f6b7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5f6bf: callq  0x0000000002c58220  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1412}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6c4: jmpq   0x0000000002c5f3fb
  0x0000000002c5f6c9: callq  0x0000000002c54a40  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1422}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6ce: jmpq   0x0000000002c5f475
  0x0000000002c5f6d3: mov    %rdx,0x8(%rsp)
  0x0000000002c5f6d8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5f6e0: callq  0x0000000002c58220  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6e5: jmpq   0x0000000002c5f4be
  0x0000000002c5f6ea: nop
  0x0000000002c5f6eb: nop
  0x0000000002c5f6ec: nop
  0x0000000002c5f6ed: nop
  0x0000000002c5f6ee: nop
  0x0000000002c5f6ef: callq  0x0000000002b96620  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1460}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x0000000002c5f6f4: jmpq   0x0000000002c5f5b3
  0x0000000002c5f6f9: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1470}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f6fe: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1475}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f703: mov    %rsi,(%rsp)
  0x0000000002c5f707: callq  0x0000000002c53300  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1484}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c5f70c: lea    0xe0(%rsp),%rax
  0x0000000002c5f714: mov    %rax,(%rsp)
  0x0000000002c5f718: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c5f71d: jmpq   0x0000000002c5f643
  0x0000000002c5f722: nop
  0x0000000002c5f723: nop
  0x0000000002c5f724: mov    0x2a8(%r15),%rax
  0x0000000002c5f72b: movabs $0x0,%r10
  0x0000000002c5f735: mov    %r10,0x2a8(%r15)
  0x0000000002c5f73c: movabs $0x0,%r10
  0x0000000002c5f746: mov    %r10,0x2b0(%r15)
  0x0000000002c5f74d: mov    %rax,%rbx
  0x0000000002c5f750: lea    0xe0(%rsp),%rax
  0x0000000002c5f758: mov    0x8(%rax),%rsi
  0x0000000002c5f75c: mov    (%rsi),%rdi
  0x0000000002c5f75f: and    $0x7,%rdi
  0x0000000002c5f763: cmp    $0x5,%rdi
  0x0000000002c5f767: je     0x0000000002c5f784
  0x0000000002c5f76d: mov    (%rax),%rdi
  0x0000000002c5f770: test   %rdi,%rdi
  0x0000000002c5f773: je     0x0000000002c5f784
  0x0000000002c5f779: lock cmpxchg %rdi,(%rsi)
  0x0000000002c5f77e: jne    0x0000000002c5f794
  0x0000000002c5f784: mov    %rbx,%rax
  0x0000000002c5f787: add    $0x100,%rsp
  0x0000000002c5f78e: pop    %rbp
  0x0000000002c5f78f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5f794: lea    0xe0(%rsp),%rax
  0x0000000002c5f79c: mov    %rax,(%rsp)
  0x0000000002c5f7a0: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c5f7a5: jmp    0x0000000002c5f784
  0x0000000002c5f7a7: hlt    
  0x0000000002c5f7a8: hlt    
  0x0000000002c5f7a9: hlt    
  0x0000000002c5f7aa: hlt    
  0x0000000002c5f7ab: hlt    
  0x0000000002c5f7ac: hlt    
  0x0000000002c5f7ad: hlt    
  0x0000000002c5f7ae: hlt    
  0x0000000002c5f7af: hlt    
  0x0000000002c5f7b0: hlt    
  0x0000000002c5f7b1: hlt    
  0x0000000002c5f7b2: hlt    
  0x0000000002c5f7b3: hlt    
  0x0000000002c5f7b4: hlt    
  0x0000000002c5f7b5: hlt    
  0x0000000002c5f7b6: hlt    
  0x0000000002c5f7b7: hlt    
  0x0000000002c5f7b8: hlt    
  0x0000000002c5f7b9: hlt    
  0x0000000002c5f7ba: hlt    
  0x0000000002c5f7bb: hlt    
  0x0000000002c5f7bc: hlt    
  0x0000000002c5f7bd: hlt    
  0x0000000002c5f7be: hlt    
  0x0000000002c5f7bf: hlt    
[Stub Code]
  0x0000000002c5f7c0: nop                       ;   {no_reloc}
  0x0000000002c5f7c1: nop
  0x0000000002c5f7c2: nop
  0x0000000002c5f7c3: nop
  0x0000000002c5f7c4: nop
  0x0000000002c5f7c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5f7cf: jmpq   0x0000000002c5f7cf  ;   {runtime_call}
  0x0000000002c5f7d4: nop
  0x0000000002c5f7d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5f7df: jmpq   0x0000000002c5f7df  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5f7e4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5f7e9: mov    %rsp,-0x28(%rsp)
  0x0000000002c5f7ee: sub    $0x80,%rsp
  0x0000000002c5f7f5: mov    %rax,0x78(%rsp)
  0x0000000002c5f7fa: mov    %rcx,0x70(%rsp)
  0x0000000002c5f7ff: mov    %rdx,0x68(%rsp)
  0x0000000002c5f804: mov    %rbx,0x60(%rsp)
  0x0000000002c5f809: mov    %rbp,0x50(%rsp)
  0x0000000002c5f80e: mov    %rsi,0x48(%rsp)
  0x0000000002c5f813: mov    %rdi,0x40(%rsp)
  0x0000000002c5f818: mov    %r8,0x38(%rsp)
  0x0000000002c5f81d: mov    %r9,0x30(%rsp)
  0x0000000002c5f822: mov    %r10,0x28(%rsp)
  0x0000000002c5f827: mov    %r11,0x20(%rsp)
  0x0000000002c5f82c: mov    %r12,0x18(%rsp)
  0x0000000002c5f831: mov    %r13,0x10(%rsp)
  0x0000000002c5f836: mov    %r14,0x8(%rsp)
  0x0000000002c5f83b: mov    %r15,(%rsp)
  0x0000000002c5f83f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5f849: movabs $0x2c5f7e9,%rdx    ;   {internal_word}
  0x0000000002c5f853: mov    %rsp,%r8
  0x0000000002c5f856: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5f85a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5f85f: hlt    
[Deopt Handler Code]
  0x0000000002c5f860: movabs $0x2c5f860,%r10    ;   {section_word}
  0x0000000002c5f86a: push   %r10
  0x0000000002c5f86c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5f871: hlt    
  0x0000000002c5f872: hlt    
  0x0000000002c5f873: hlt    
  0x0000000002c5f874: hlt    
  0x0000000002c5f875: hlt    
  0x0000000002c5f876: hlt    
  0x0000000002c5f877: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000002c5f140' size='3272' address='0x0000000002c5ef90' relocation_offset='288' insts_offset='432' stub_offset='2096' scopes_data_offset='2320' scopes_pcs_offset='2672' dependencies_offset='3232' nul_chk_table_offset='3240' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='413' iicount='413' stamp='4.267'/>
Decoding compiled method 0x0000000002c5ead0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5ec40: mov    %eax,-0x6000(%rsp)
  0x0000000002c5ec47: push   %rbp
  0x0000000002c5ec48: sub    $0x30,%rsp
  0x0000000002c5ec4c: movabs $0x1bd42228,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5ec56: mov    0xdc(%rsi),%edi
  0x0000000002c5ec5c: add    $0x8,%edi
  0x0000000002c5ec5f: mov    %edi,0xdc(%rsi)
  0x0000000002c5ec65: movabs $0x1bc0a468,%rsi   ;   {metadata({method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5ec6f: and    $0x1ff8,%edi
  0x0000000002c5ec75: cmp    $0x0,%edi
  0x0000000002c5ec78: je     0x0000000002c5ed60  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x0000000002c5ec7e: movabs $0x1bd42228,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5ec88: addq   $0x1,0x108(%rsi)
  0x0000000002c5ec90: mov    %rdx,%rsi
  0x0000000002c5ec93: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002c5ec96: mov    %esi,0x20(%rsp)
  0x0000000002c5ec9a: nop
  0x0000000002c5ec9b: nop
  0x0000000002c5ec9c: nop
  0x0000000002c5ec9d: nop
  0x0000000002c5ec9e: nop
  0x0000000002c5ec9f: callq  0x0000000002b96620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x0000000002c5eca4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c5ed77
  0x0000000002c5eca7: mov    %rax,%r8
  0x0000000002c5ecaa: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c5ecb4: mov    0x8(%r8),%r8d
  0x0000000002c5ecb8: shl    $0x3,%r8
  0x0000000002c5ecbc: cmp    0x120(%rdx),%r8
  0x0000000002c5ecc3: jne    0x0000000002c5ecd2
  0x0000000002c5ecc5: addq   $0x1,0x128(%rdx)
  0x0000000002c5eccd: jmpq   0x0000000002c5ed38
  0x0000000002c5ecd2: cmp    0x130(%rdx),%r8
  0x0000000002c5ecd9: jne    0x0000000002c5ece8
  0x0000000002c5ecdb: addq   $0x1,0x138(%rdx)
  0x0000000002c5ece3: jmpq   0x0000000002c5ed38
  0x0000000002c5ece8: cmpq   $0x0,0x120(%rdx)
  0x0000000002c5ecf3: jne    0x0000000002c5ed0c
  0x0000000002c5ecf5: mov    %r8,0x120(%rdx)
  0x0000000002c5ecfc: movq   $0x1,0x128(%rdx)
  0x0000000002c5ed07: jmpq   0x0000000002c5ed38
  0x0000000002c5ed0c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c5ed17: jne    0x0000000002c5ed30
  0x0000000002c5ed19: mov    %r8,0x130(%rdx)
  0x0000000002c5ed20: movq   $0x1,0x138(%rdx)
  0x0000000002c5ed2b: jmpq   0x0000000002c5ed38
  0x0000000002c5ed30: addq   $0x1,0x118(%rdx)
  0x0000000002c5ed38: mov    0x20(%rsp),%r8d
  0x0000000002c5ed3d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c5ed40: nop
  0x0000000002c5ed41: nop
  0x0000000002c5ed42: nop
  0x0000000002c5ed43: nop
  0x0000000002c5ed44: nop
  0x0000000002c5ed45: movabs $0xffffffffffffffff,%rax
  0x0000000002c5ed4f: callq  0x0000000002b963e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x0000000002c5ed54: add    $0x30,%rsp
  0x0000000002c5ed58: pop    %rbp
  0x0000000002c5ed59: test   %eax,-0x1e3ec5f(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5ed5f: retq   
  0x0000000002c5ed60: mov    %rsi,0x8(%rsp)
  0x0000000002c5ed65: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5ed6d: callq  0x0000000002c58220  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x0000000002c5ed72: jmpq   0x0000000002c5ec7e
  0x0000000002c5ed77: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002c5ed7c: nop
  0x0000000002c5ed7d: nop
  0x0000000002c5ed7e: mov    0x2a8(%r15),%rax
  0x0000000002c5ed85: movabs $0x0,%r10
  0x0000000002c5ed8f: mov    %r10,0x2a8(%r15)
  0x0000000002c5ed96: movabs $0x0,%r10
  0x0000000002c5eda0: mov    %r10,0x2b0(%r15)
  0x0000000002c5eda7: add    $0x30,%rsp
  0x0000000002c5edab: pop    %rbp
  0x0000000002c5edac: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5edb1: hlt    
  0x0000000002c5edb2: hlt    
  0x0000000002c5edb3: hlt    
  0x0000000002c5edb4: hlt    
  0x0000000002c5edb5: hlt    
  0x0000000002c5edb6: hlt    
  0x0000000002c5edb7: hlt    
  0x0000000002c5edb8: hlt    
  0x0000000002c5edb9: hlt    
  0x0000000002c5edba: hlt    
  0x0000000002c5edbb: hlt    
  0x0000000002c5edbc: hlt    
  0x0000000002c5edbd: hlt    
  0x0000000002c5edbe: hlt    
  0x0000000002c5edbf: hlt    
[Stub Code]
  0x0000000002c5edc0: nop                       ;   {no_reloc}
  0x0000000002c5edc1: nop
  0x0000000002c5edc2: nop
  0x0000000002c5edc3: nop
  0x0000000002c5edc4: nop
  0x0000000002c5edc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5edcf: jmpq   0x0000000002c5edcf  ;   {runtime_call}
  0x0000000002c5edd4: nop
  0x0000000002c5edd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5eddf: jmpq   0x0000000002c5eddf  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5ede4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5ede9: mov    %rsp,-0x28(%rsp)
  0x0000000002c5edee: sub    $0x80,%rsp
  0x0000000002c5edf5: mov    %rax,0x78(%rsp)
  0x0000000002c5edfa: mov    %rcx,0x70(%rsp)
  0x0000000002c5edff: mov    %rdx,0x68(%rsp)
  0x0000000002c5ee04: mov    %rbx,0x60(%rsp)
  0x0000000002c5ee09: mov    %rbp,0x50(%rsp)
  0x0000000002c5ee0e: mov    %rsi,0x48(%rsp)
  0x0000000002c5ee13: mov    %rdi,0x40(%rsp)
  0x0000000002c5ee18: mov    %r8,0x38(%rsp)
  0x0000000002c5ee1d: mov    %r9,0x30(%rsp)
  0x0000000002c5ee22: mov    %r10,0x28(%rsp)
  0x0000000002c5ee27: mov    %r11,0x20(%rsp)
  0x0000000002c5ee2c: mov    %r12,0x18(%rsp)
  0x0000000002c5ee31: mov    %r13,0x10(%rsp)
  0x0000000002c5ee36: mov    %r14,0x8(%rsp)
  0x0000000002c5ee3b: mov    %r15,(%rsp)
  0x0000000002c5ee3f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5ee49: movabs $0x2c5ede9,%rdx    ;   {internal_word}
  0x0000000002c5ee53: mov    %rsp,%r8
  0x0000000002c5ee56: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5ee5a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5ee5f: hlt    
[Deopt Handler Code]
  0x0000000002c5ee60: movabs $0x2c5ee60,%r10    ;   {section_word}
  0x0000000002c5ee6a: push   %r10
  0x0000000002c5ee6c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5ee71: hlt    
  0x0000000002c5ee72: hlt    
  0x0000000002c5ee73: hlt    
  0x0000000002c5ee74: hlt    
  0x0000000002c5ee75: hlt    
  0x0000000002c5ee76: hlt    
  0x0000000002c5ee77: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x0000000002c5ec40' size='1160' address='0x0000000002c5ead0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='1098' iicount='1098' stamp='4.432'/>
Decoding compiled method 0x0000000002c5e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002c5e7e0: mov    0x8(%rdx),%r10d
  0x0000000002c5e7e4: shl    $0x3,%r10
  0x0000000002c5e7e8: cmp    %rax,%r10
  0x0000000002c5e7eb: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5e7f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5e7fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5e800: mov    %eax,-0x6000(%rsp)
  0x0000000002c5e807: push   %rbp
  0x0000000002c5e808: sub    $0x30,%rsp
  0x0000000002c5e80c: movabs $0x1bd993e0,%rax   ;   {metadata(method data for {method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002c5e816: mov    0xdc(%rax),%esi
  0x0000000002c5e81c: add    $0x8,%esi
  0x0000000002c5e81f: mov    %esi,0xdc(%rax)
  0x0000000002c5e825: movabs $0x1bcf3b60,%rax   ;   {metadata({method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002c5e82f: and    $0x1ff8,%esi
  0x0000000002c5e835: cmp    $0x0,%esi
  0x0000000002c5e838: je     0x0000000002c5e8e0  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x0000000002c5e83e: cmp    $0x5c,%r8d
  0x0000000002c5e842: movabs $0x1bd993e0,%rax   ;   {metadata(method data for {method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002c5e84c: movabs $0x108,%rsi
  0x0000000002c5e856: je     0x0000000002c5e866
  0x0000000002c5e85c: movabs $0x118,%rsi
  0x0000000002c5e866: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5e86a: lea    0x1(%rdi),%rdi
  0x0000000002c5e86e: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5e872: je     0x0000000002c5e8b2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002c5e878: cmp    $0x2f,%r8d
  0x0000000002c5e87c: movabs $0x1bd993e0,%rax   ;   {metadata(method data for {method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002c5e886: movabs $0x128,%rsi
  0x0000000002c5e890: jne    0x0000000002c5e8a0
  0x0000000002c5e896: movabs $0x138,%rsi
  0x0000000002c5e8a0: mov    (%rax,%rsi,1),%rdi
  0x0000000002c5e8a4: lea    0x1(%rdi),%rdi
  0x0000000002c5e8a8: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c5e8ac: jne    0x0000000002c5e8cc  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002c5e8b2: movabs $0x1bd993e0,%rax   ;   {metadata(method data for {method} {0x000000001bcf3b68} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002c5e8bc: incl   0x148(%rax)
  0x0000000002c5e8c2: mov    $0x1,%eax
  0x0000000002c5e8c7: jmpq   0x0000000002c5e8d1  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002c5e8cc: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x0000000002c5e8d1: and    $0x1,%eax
  0x0000000002c5e8d4: add    $0x30,%rsp
  0x0000000002c5e8d8: pop    %rbp
  0x0000000002c5e8d9: test   %eax,-0x1e3e7df(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5e8df: retq   
  0x0000000002c5e8e0: mov    %rax,0x8(%rsp)
  0x0000000002c5e8e5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5e8ed: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x0000000002c5e8f2: jmpq   0x0000000002c5e83e
  0x0000000002c5e8f7: nop
  0x0000000002c5e8f8: nop
  0x0000000002c5e8f9: mov    0x2a8(%r15),%rax
  0x0000000002c5e900: movabs $0x0,%r10
  0x0000000002c5e90a: mov    %r10,0x2a8(%r15)
  0x0000000002c5e911: movabs $0x0,%r10
  0x0000000002c5e91b: mov    %r10,0x2b0(%r15)
  0x0000000002c5e922: add    $0x30,%rsp
  0x0000000002c5e926: pop    %rbp
  0x0000000002c5e927: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c5e92c: hlt    
  0x0000000002c5e92d: hlt    
  0x0000000002c5e92e: hlt    
  0x0000000002c5e92f: hlt    
  0x0000000002c5e930: hlt    
  0x0000000002c5e931: hlt    
  0x0000000002c5e932: hlt    
  0x0000000002c5e933: hlt    
  0x0000000002c5e934: hlt    
  0x0000000002c5e935: hlt    
  0x0000000002c5e936: hlt    
  0x0000000002c5e937: hlt    
  0x0000000002c5e938: hlt    
  0x0000000002c5e939: hlt    
  0x0000000002c5e93a: hlt    
  0x0000000002c5e93b: hlt    
  0x0000000002c5e93c: hlt    
  0x0000000002c5e93d: hlt    
  0x0000000002c5e93e: hlt    
  0x0000000002c5e93f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c5e940: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c5e945: mov    %rsp,-0x28(%rsp)
  0x0000000002c5e94a: sub    $0x80,%rsp
  0x0000000002c5e951: mov    %rax,0x78(%rsp)
  0x0000000002c5e956: mov    %rcx,0x70(%rsp)
  0x0000000002c5e95b: mov    %rdx,0x68(%rsp)
  0x0000000002c5e960: mov    %rbx,0x60(%rsp)
  0x0000000002c5e965: mov    %rbp,0x50(%rsp)
  0x0000000002c5e96a: mov    %rsi,0x48(%rsp)
  0x0000000002c5e96f: mov    %rdi,0x40(%rsp)
  0x0000000002c5e974: mov    %r8,0x38(%rsp)
  0x0000000002c5e979: mov    %r9,0x30(%rsp)
  0x0000000002c5e97e: mov    %r10,0x28(%rsp)
  0x0000000002c5e983: mov    %r11,0x20(%rsp)
  0x0000000002c5e988: mov    %r12,0x18(%rsp)
  0x0000000002c5e98d: mov    %r13,0x10(%rsp)
  0x0000000002c5e992: mov    %r14,0x8(%rsp)
  0x0000000002c5e997: mov    %r15,(%rsp)
  0x0000000002c5e99b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5e9a5: movabs $0x2c5e945,%rdx    ;   {internal_word}
  0x0000000002c5e9af: mov    %rsp,%r8
  0x0000000002c5e9b2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5e9b6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5e9bb: hlt    
[Deopt Handler Code]
  0x0000000002c5e9bc: movabs $0x2c5e9bc,%r10    ;   {section_word}
  0x0000000002c5e9c6: push   %r10
  0x0000000002c5e9c8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5e9cd: hlt    
  0x0000000002c5e9ce: hlt    
  0x0000000002c5e9cf: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x0000000002c5e7e0' size='1024' address='0x0000000002c5e690' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='521' iicount='521' stamp='4.556'/>
<writer thread='21536'/>
<task_queued compile_id='32' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='256' iicount='256' level='3' stamp='4.556' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c5dd90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002c5df40: mov    0x8(%rdx),%r10d
  0x0000000002c5df44: shl    $0x3,%r10
  0x0000000002c5df48: cmp    %rax,%r10
  0x0000000002c5df4b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c5df51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c5df5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c5df60: mov    %eax,-0x6000(%rsp)
  0x0000000002c5df67: push   %rbp
  0x0000000002c5df68: sub    $0x60,%rsp
  0x0000000002c5df6c: movabs $0x1bd9ad40,%rbx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5df76: mov    0xdc(%rbx),%eax
  0x0000000002c5df7c: add    $0x8,%eax
  0x0000000002c5df7f: mov    %eax,0xdc(%rbx)
  0x0000000002c5df85: movabs $0x1bb741c0,%rbx   ;   {metadata({method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5df8f: and    $0x1ff8,%eax
  0x0000000002c5df95: cmp    $0x0,%eax
  0x0000000002c5df98: je     0x0000000002c5e1ce  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000002c5df9e: cmp    $0x0,%r8d
  0x0000000002c5dfa2: movabs $0x1bd9ad40,%rbx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5dfac: movabs $0x108,%rax
  0x0000000002c5dfb6: jge    0x0000000002c5dfc6
  0x0000000002c5dfbc: movabs $0x118,%rax
  0x0000000002c5dfc6: mov    (%rbx,%rax,1),%rcx
  0x0000000002c5dfca: lea    0x1(%rcx),%rcx
  0x0000000002c5dfce: mov    %rcx,(%rbx,%rax,1)
  0x0000000002c5dfd2: jl     0x0000000002c5e18e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000002c5dfd8: mov    0xc(%rdx),%edx
  0x0000000002c5dfdb: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000002c5dfdf: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000002c5e1e5
  0x0000000002c5dfe2: cmp    %ebx,%r9d
  0x0000000002c5dfe5: movabs $0x1bd9ad40,%rbx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5dfef: movabs $0x138,%rax
  0x0000000002c5dff9: jle    0x0000000002c5e009
  0x0000000002c5dfff: movabs $0x148,%rax
  0x0000000002c5e009: mov    (%rbx,%rax,1),%rcx
  0x0000000002c5e00d: lea    0x1(%rcx),%rcx
  0x0000000002c5e011: mov    %rcx,(%rbx,%rax,1)
  0x0000000002c5e015: jg     0x0000000002c5e14e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000002c5e01b: cmp    %r9d,%r8d
  0x0000000002c5e01e: movabs $0x1bd9ad40,%rbx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5e028: movabs $0x168,%rax
  0x0000000002c5e032: jle    0x0000000002c5e042
  0x0000000002c5e038: movabs $0x178,%rax
  0x0000000002c5e042: mov    (%rbx,%rax,1),%rcx
  0x0000000002c5e046: lea    0x1(%rcx),%rcx
  0x0000000002c5e04a: mov    %rcx,(%rbx,%rax,1)
  0x0000000002c5e04e: jg     0x0000000002c5e102  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000002c5e054: movabs $0x1bd9ad40,%rbx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5e05e: addq   $0x1,0x198(%rbx)
  0x0000000002c5e066: mov    %r9,%rbx
  0x0000000002c5e069: sub    %r8d,%ebx
  0x0000000002c5e06c: mov    %rdi,%r9
  0x0000000002c5e06f: mov    %rsi,%rdi
  0x0000000002c5e072: mov    %rbx,%rsi
  0x0000000002c5e075: test   %r9,%r9
  0x0000000002c5e078: je     0x0000000002c5e1ea
  0x0000000002c5e07e: test   %r8d,%r8d
  0x0000000002c5e081: jl     0x0000000002c5e1ea
  0x0000000002c5e087: test   %edi,%edi
  0x0000000002c5e089: jl     0x0000000002c5e1ea
  0x0000000002c5e08f: lea    (%r8,%rsi,1),%rcx
  0x0000000002c5e093: cmp    0xc(%rdx),%ecx
  0x0000000002c5e096: ja     0x0000000002c5e1ea
  0x0000000002c5e09c: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c5e0a0: cmp    0xc(%r9),%ecx
  0x0000000002c5e0a4: ja     0x0000000002c5e1ea
  0x0000000002c5e0aa: test   %esi,%esi
  0x0000000002c5e0ac: jl     0x0000000002c5e1ea
  0x0000000002c5e0b2: je     0x0000000002c5e0f6
  0x0000000002c5e0b8: movslq %r8d,%r8
  0x0000000002c5e0bb: movslq %edi,%rdi
  0x0000000002c5e0be: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c5e0c3: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c5e0c8: mov    %rsi,%r8
  0x0000000002c5e0cb: sub    $0x20,%rsp
  0x0000000002c5e0cf: test   $0xf,%esp
  0x0000000002c5e0d5: je     0x0000000002c5e0ed
  0x0000000002c5e0db: sub    $0x8,%rsp
  0x0000000002c5e0df: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002c5e0e4: add    $0x8,%rsp
  0x0000000002c5e0e8: jmpq   0x0000000002c5e0f2
  0x0000000002c5e0ed: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002c5e0f2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x0000000002c5e0f6: add    $0x60,%rsp
  0x0000000002c5e0fa: pop    %rbp
  0x0000000002c5e0fb: test   %eax,-0x1e3e001(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c5e101: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000002c5e102: nopw   0x0(%rax,%rax,1)
  0x0000000002c5e108: jmpq   0x0000000002c5e208  ;   {no_reloc}
  0x0000000002c5e10d: add    %al,(%rax)
  0x0000000002c5e10f: add    %al,(%rax)
  0x0000000002c5e111: add    %ch,%cl
  0x0000000002c5e113: sti    
  0x0000000002c5e114: add    %al,(%rax)
  0x0000000002c5e116: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000002c5e119: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5e11c: rex lods %ds:(%rsi),%eax
  0x0000000002c5e11e: fstps  (%rbx)
  0x0000000002c5e120: add    %al,(%rax)
  0x0000000002c5e122: add    %al,(%rax)
  0x0000000002c5e124: addq   $0x1,0x188(%rsi)
  0x0000000002c5e12c: sub    %r8d,%r9d
  0x0000000002c5e12f: mov    %r9,%r8
  0x0000000002c5e132: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000002c5e135: mov    %rax,0x38(%rsp)
  0x0000000002c5e13a: nop
  0x0000000002c5e13b: nop
  0x0000000002c5e13c: nop
  0x0000000002c5e13d: nop
  0x0000000002c5e13e: nop
  0x0000000002c5e13f: callq  0x0000000002b961a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000002c5e144: mov    0x38(%rsp),%rax
  0x0000000002c5e149: jmpq   0x0000000002c5e296  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000002c5e14e: xchg   %ax,%ax
  0x0000000002c5e150: jmpq   0x0000000002c5e22e  ;   {no_reloc}
  0x0000000002c5e155: add    %al,(%rax)
  0x0000000002c5e157: add    %al,(%rax)
  0x0000000002c5e159: add    %ch,%cl
  0x0000000002c5e15b: flds   (%rax)
  0x0000000002c5e15d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000002c5e15f: mov    %rax,%r8
  0x0000000002c5e162: movabs $0x1bd9ad40,%rdx   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5e16c: addq   $0x1,0x158(%rdx)
  0x0000000002c5e174: mov    %r9,%r8
  0x0000000002c5e177: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000002c5e17a: mov    %rax,0x40(%rsp)
  0x0000000002c5e17f: callq  0x0000000002b961a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000002c5e184: mov    0x40(%rsp),%rax
  0x0000000002c5e189: jmpq   0x0000000002c5e296  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000002c5e18e: xchg   %ax,%ax
  0x0000000002c5e190: jmpq   0x0000000002c5e254  ;   {no_reloc}
  0x0000000002c5e195: add    %al,(%rax)
  0x0000000002c5e197: add    %al,(%rax)
  0x0000000002c5e199: add    %ch,%cl
  0x0000000002c5e19b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000002c5e1a0: mov    %eax,%edx
  0x0000000002c5e1a2: movabs $0x1bd9ad40,%rsi   ;   {metadata(method data for {method} {0x000000001bb741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c5e1ac: addq   $0x1,0x128(%rsi)
  0x0000000002c5e1b4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000002c5e1b7: mov    %rax,0x48(%rsp)
  0x0000000002c5e1bc: nop
  0x0000000002c5e1bd: nop
  0x0000000002c5e1be: nop
  0x0000000002c5e1bf: callq  0x0000000002b961a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000002c5e1c4: mov    0x48(%rsp),%rax
  0x0000000002c5e1c9: jmpq   0x0000000002c5e296
  0x0000000002c5e1ce: mov    %rbx,0x8(%rsp)
  0x0000000002c5e1d3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c5e1db: callq  0x0000000002c58220  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000002c5e1e0: jmpq   0x0000000002c5df9e
  0x0000000002c5e1e5: callq  0x0000000002c539c0  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000002c5e1ea: nop
  0x0000000002c5e1eb: nop
  0x0000000002c5e1ec: nop
  0x0000000002c5e1ed: nop
  0x0000000002c5e1ee: nop
  0x0000000002c5e1ef: callq  0x0000000002b96620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000002c5e1f4: jmpq   0x0000000002c5e0f6
  0x0000000002c5e1f9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c5e203: mov    $0xa050f00,%eax
  0x0000000002c5e208: callq  0x0000000002c57160  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002c5e20d: jmpq   0x0000000002c5e108
  0x0000000002c5e212: mov    %rdx,%rdx
  0x0000000002c5e215: callq  0x0000000002c53e60  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002c5e21a: jmpq   0x0000000002c5e117
  0x0000000002c5e21f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c5e229: mov    $0xa050f00,%eax
  0x0000000002c5e22e: callq  0x0000000002c57160  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002c5e233: jmpq   0x0000000002c5e150
  0x0000000002c5e238: mov    %rdx,%rdx
  0x0000000002c5e23b: callq  0x0000000002c53e60  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002c5e240: jmpq   0x0000000002c5e15f
  0x0000000002c5e245: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c5e24f: mov    $0xa050f00,%eax
  0x0000000002c5e254: callq  0x0000000002c57160  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002c5e259: jmpq   0x0000000002c5e190
  0x0000000002c5e25e: mov    %rdx,%rdx
  0x0000000002c5e261: callq  0x0000000002c53e60  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002c5e266: jmpq   0x0000000002c5e19f
  0x0000000002c5e26b: nop
  0x0000000002c5e26c: nop
  0x0000000002c5e26d: mov    0x2a8(%r15),%rax
  0x0000000002c5e274: movabs $0x0,%r10
  0x0000000002c5e27e: mov    %r10,0x2a8(%r15)
  0x0000000002c5e285: movabs $0x0,%r10
  0x0000000002c5e28f: mov    %r10,0x2b0(%r15)
  0x0000000002c5e296: add    $0x60,%rsp
  0x0000000002c5e29a: pop    %rbp
  0x0000000002c5e29b: jmpq   0x0000000002c52f60  ;   {runtime_call}
[Stub Code]
  0x0000000002c5e2a0: nop                       ;   {no_reloc}
  0x0000000002c5e2a1: nop
  0x0000000002c5e2a2: nop
  0x0000000002c5e2a3: nop
  0x0000000002c5e2a4: nop
  0x0000000002c5e2a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5e2af: jmpq   0x0000000002c5e2af  ;   {runtime_call}
  0x0000000002c5e2b4: nop
  0x0000000002c5e2b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5e2bf: jmpq   0x0000000002c5e2bf  ;   {runtime_call}
  0x0000000002c5e2c4: nop
  0x0000000002c5e2c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5e2cf: jmpq   0x0000000002c5e2cf  ;   {runtime_call}
  0x0000000002c5e2d4: nop
  0x0000000002c5e2d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c5e2df: jmpq   0x0000000002c5e2df  ;   {runtime_call}
[Exception Handler]
  0x0000000002c5e2e4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c5e2e9: mov    %rsp,-0x28(%rsp)
  0x0000000002c5e2ee: sub    $0x80,%rsp
  0x0000000002c5e2f5: mov    %rax,0x78(%rsp)
  0x0000000002c5e2fa: mov    %rcx,0x70(%rsp)
  0x0000000002c5e2ff: mov    %rdx,0x68(%rsp)
  0x0000000002c5e304: mov    %rbx,0x60(%rsp)
  0x0000000002c5e309: mov    %rbp,0x50(%rsp)
  0x0000000002c5e30e: mov    %rsi,0x48(%rsp)
  0x0000000002c5e313: mov    %rdi,0x40(%rsp)
  0x0000000002c5e318: mov    %r8,0x38(%rsp)
  0x0000000002c5e31d: mov    %r9,0x30(%rsp)
  0x0000000002c5e322: mov    %r10,0x28(%rsp)
  0x0000000002c5e327: mov    %r11,0x20(%rsp)
  0x0000000002c5e32c: mov    %r12,0x18(%rsp)
  0x0000000002c5e331: mov    %r13,0x10(%rsp)
  0x0000000002c5e336: mov    %r14,0x8(%rsp)
  0x0000000002c5e33b: mov    %r15,(%rsp)
  0x0000000002c5e33f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c5e349: movabs $0x2c5e2e9,%rdx    ;   {internal_word}
  0x0000000002c5e353: mov    %rsp,%r8
  0x0000000002c5e356: and    $0xfffffffffffffff0,%rsp
  0x0000000002c5e35a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c5e35f: hlt    
[Deopt Handler Code]
  0x0000000002c5e360: movabs $0x2c5e360,%r10    ;   {section_word}
  0x0000000002c5e36a: push   %r10
  0x0000000002c5e36c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c5e371: hlt    
  0x0000000002c5e372: hlt    
  0x0000000002c5e373: hlt    
  0x0000000002c5e374: hlt    
  0x0000000002c5e375: hlt    
  0x0000000002c5e376: hlt    
  0x0000000002c5e377: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002c5df40' size='2256' address='0x0000000002c5dd90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='315' iicount='315' stamp='4.905'/>
Decoding compiled method 0x0000000002c66950:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002c66b20: mov    0x8(%rdx),%r10d
  0x0000000002c66b24: shl    $0x3,%r10
  0x0000000002c66b28: cmp    %rax,%r10
  0x0000000002c66b2b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c66b31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c66b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c66b40: mov    %eax,-0x6000(%rsp)
  0x0000000002c66b47: push   %rbp
  0x0000000002c66b48: sub    $0xe0,%rsp
  0x0000000002c66b4f: mov    %rdx,0xb8(%rsp)
  0x0000000002c66b57: movabs $0x1bd9ba08,%rsi   ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66b61: mov    0xdc(%rsi),%edi
  0x0000000002c66b67: add    $0x8,%edi
  0x0000000002c66b6a: mov    %edi,0xdc(%rsi)
  0x0000000002c66b70: movabs $0x1bbe45d8,%rsi   ;   {metadata({method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66b7a: and    $0x1ff8,%edi
  0x0000000002c66b80: cmp    $0x0,%edi
  0x0000000002c66b83: je     0x0000000002c670c3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000002c66b89: cmp    $0x0,%r8
  0x0000000002c66b8d: movabs $0x1bd9ba08,%rsi   ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66b97: movabs $0x108,%rdi
  0x0000000002c66ba1: jne    0x0000000002c66bb1
  0x0000000002c66ba7: movabs $0x118,%rdi
  0x0000000002c66bb1: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c66bb5: lea    0x1(%rbx),%rbx
  0x0000000002c66bb9: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c66bbd: je     0x0000000002c67093  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000002c66bc3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002c670da
  0x0000000002c66bc6: mov    %r8,%rsi
  0x0000000002c66bc9: movabs $0x1bd9ba08,%rdi   ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66bd3: mov    0x8(%rsi),%esi
  0x0000000002c66bd6: shl    $0x3,%rsi
  0x0000000002c66bda: cmp    0x140(%rdi),%rsi
  0x0000000002c66be1: jne    0x0000000002c66bf0
  0x0000000002c66be3: addq   $0x1,0x148(%rdi)
  0x0000000002c66beb: jmpq   0x0000000002c66c56
  0x0000000002c66bf0: cmp    0x150(%rdi),%rsi
  0x0000000002c66bf7: jne    0x0000000002c66c06
  0x0000000002c66bf9: addq   $0x1,0x158(%rdi)
  0x0000000002c66c01: jmpq   0x0000000002c66c56
  0x0000000002c66c06: cmpq   $0x0,0x140(%rdi)
  0x0000000002c66c11: jne    0x0000000002c66c2a
  0x0000000002c66c13: mov    %rsi,0x140(%rdi)
  0x0000000002c66c1a: movq   $0x1,0x148(%rdi)
  0x0000000002c66c25: jmpq   0x0000000002c66c56
  0x0000000002c66c2a: cmpq   $0x0,0x150(%rdi)
  0x0000000002c66c35: jne    0x0000000002c66c4e
  0x0000000002c66c37: mov    %rsi,0x150(%rdi)
  0x0000000002c66c3e: movq   $0x1,0x158(%rdi)
  0x0000000002c66c49: jmpq   0x0000000002c66c56
  0x0000000002c66c4e: addq   $0x1,0x138(%rdi)
  0x0000000002c66c56: movabs $0x1bca29d8,%rsi   ;   {metadata(method data for {method} {0x000000001bb73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c66c60: mov    0xdc(%rsi),%edi
  0x0000000002c66c66: add    $0x8,%edi
  0x0000000002c66c69: mov    %edi,0xdc(%rsi)
  0x0000000002c66c6f: movabs $0x1bb73c18,%rsi   ;   {metadata({method} {0x000000001bb73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c66c79: and    $0x7ffff8,%edi
  0x0000000002c66c7f: cmp    $0x0,%edi
  0x0000000002c66c82: je     0x0000000002c670df
  0x0000000002c66c88: mov    0xc(%r8),%esi
  0x0000000002c66c8c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000002c66c90: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002c670f6
  0x0000000002c66c93: mov    %esi,0xac(%rsp)
  0x0000000002c66c9a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000002c66c9d: add    %esi,%edi
  0x0000000002c66c9f: mov    %rdx,%rbx
  0x0000000002c66ca2: movabs $0x1bd9ba08,%rax   ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66cac: addq   $0x1,0x168(%rax)
  0x0000000002c66cb4: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66cbe: mov    0xdc(%rbx),%eax
  0x0000000002c66cc4: add    $0x8,%eax
  0x0000000002c66cc7: mov    %eax,0xdc(%rbx)
  0x0000000002c66ccd: movabs $0x1bbe3c80,%rbx   ;   {metadata({method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66cd7: and    $0x7ffff8,%eax
  0x0000000002c66cdd: cmp    $0x0,%eax
  0x0000000002c66ce0: je     0x0000000002c670fb
  0x0000000002c66ce6: mov    0x10(%rdx),%ebx
  0x0000000002c66ce9: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66ced: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000002c67112
  0x0000000002c66cf0: mov    %rdi,%rcx
  0x0000000002c66cf3: sub    %eax,%ecx
  0x0000000002c66cf5: cmp    $0x0,%ecx
  0x0000000002c66cf8: movabs $0x1bd92eb8,%rcx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66d02: movabs $0x108,%r9
  0x0000000002c66d0c: jle    0x0000000002c66d1c
  0x0000000002c66d12: movabs $0x118,%r9
  0x0000000002c66d1c: mov    (%rcx,%r9,1),%r11
  0x0000000002c66d20: lea    0x1(%r11),%r11
  0x0000000002c66d24: mov    %r11,(%rcx,%r9,1)
  0x0000000002c66d28: jg     0x0000000002c66d3b  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66d2e: mov    %r8,0xc0(%rsp)
  0x0000000002c66d36: jmpq   0x0000000002c66fad  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66d3b: mov    %eax,0xa8(%rsp)
  0x0000000002c66d42: mov    %rbx,0xb0(%rsp)
  0x0000000002c66d4a: mov    %r8,0xc0(%rsp)
  0x0000000002c66d52: mov    %rdx,%rcx
  0x0000000002c66d55: movabs $0x1bd92eb8,%r9    ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66d5f: addq   $0x1,0x128(%r9)
  0x0000000002c66d67: mov    %rdi,%r8
  0x0000000002c66d6a: mov    %rdx,%rdi
  0x0000000002c66d6d: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66d70: nop
  0x0000000002c66d71: nop
  0x0000000002c66d72: nop
  0x0000000002c66d73: nop
  0x0000000002c66d74: nop
  0x0000000002c66d75: nop
  0x0000000002c66d76: nop
  0x0000000002c66d77: callq  0x0000000002b961a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000002c66d7c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66d7f: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66d89: addq   $0x1,0x138(%rbx)
  0x0000000002c66d91: movabs $0x1bd931f8,%rbx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c66d9b: mov    0xdc(%rbx),%edx
  0x0000000002c66da1: add    $0x8,%edx
  0x0000000002c66da4: mov    %edx,0xdc(%rbx)
  0x0000000002c66daa: movabs $0x1bc88b60,%rbx   ;   {metadata({method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c66db4: and    $0x7ffff8,%edx
  0x0000000002c66dba: cmp    $0x0,%edx
  0x0000000002c66dbd: je     0x0000000002c67117
  0x0000000002c66dc3: mov    %r8,%rbx
  0x0000000002c66dc6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c66dd0: movslq %ebx,%rbx
  0x0000000002c66dd3: mov    %rbx,%rdi
  0x0000000002c66dd6: cmp    $0xffffff,%rbx
  0x0000000002c66ddd: ja     0x0000000002c6712e
  0x0000000002c66de3: movabs $0x17,%rsi
  0x0000000002c66ded: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c66df1: and    $0xfffffffffffffff8,%rsi
  0x0000000002c66df5: mov    0x60(%r15),%rax
  0x0000000002c66df9: lea    (%rax,%rsi,1),%rsi
  0x0000000002c66dfd: cmp    0x70(%r15),%rsi
  0x0000000002c66e01: ja     0x0000000002c6712e
  0x0000000002c66e07: mov    %rsi,0x60(%r15)
  0x0000000002c66e0b: sub    %rax,%rsi
  0x0000000002c66e0e: movq   $0x1,(%rax)
  0x0000000002c66e15: mov    %rdx,%rcx
  0x0000000002c66e18: shr    $0x3,%rcx
  0x0000000002c66e1c: mov    %ecx,0x8(%rax)
  0x0000000002c66e1f: mov    %ebx,0xc(%rax)
  0x0000000002c66e22: sub    $0x10,%rsi
  0x0000000002c66e26: je     0x0000000002c66e3d
  0x0000000002c66e2c: xor    %rbx,%rbx
  0x0000000002c66e2f: shr    $0x3,%rsi
  0x0000000002c66e33: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c66e38: dec    %rsi
  0x0000000002c66e3b: jne    0x0000000002c66e33  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66e3d: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c66e47: addq   $0x1,0x108(%rdx)
  0x0000000002c66e4f: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c66e59: mov    0xdc(%rdx),%r9d
  0x0000000002c66e60: add    $0x8,%r9d
  0x0000000002c66e64: mov    %r9d,0xdc(%rdx)
  0x0000000002c66e6b: movabs $0x1bc64608,%rdx   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c66e75: and    $0x7ffff8,%r9d
  0x0000000002c66e7c: cmp    $0x0,%r9d
  0x0000000002c66e80: je     0x0000000002c67138
  0x0000000002c66e86: mov    0xa8(%rsp),%edx
  0x0000000002c66e8d: cmp    %r8d,%edx
  0x0000000002c66e90: movabs $0x1bd7ac78,%r9    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c66e9a: movabs $0x108,%rdi
  0x0000000002c66ea4: jg     0x0000000002c66eb4
  0x0000000002c66eaa: movabs $0x118,%rdi
  0x0000000002c66eb4: mov    (%r9,%rdi,1),%rsi
  0x0000000002c66eb8: lea    0x1(%rsi),%rsi
  0x0000000002c66ebc: mov    %rsi,(%r9,%rdi,1)
  0x0000000002c66ec0: jg     0x0000000002c66edf  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66ec6: movabs $0x1bd7ac78,%r8    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c66ed0: incl   0x128(%r8)
  0x0000000002c66ed7: mov    %rdx,%rsi
  0x0000000002c66eda: jmpq   0x0000000002c66ee2  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66edf: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66ee2: mov    0xb0(%rsp),%rbx
  0x0000000002c66eea: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c66ef4: addq   $0x1,0x118(%rdx)
  0x0000000002c66efc: mov    %rbx,%rdx
  0x0000000002c66eff: mov    $0x0,%r8d
  0x0000000002c66f05: mov    %rax,%r9
  0x0000000002c66f08: mov    $0x0,%edi
  0x0000000002c66f0d: mov    %rax,0xc8(%rsp)
  0x0000000002c66f15: lea    (%r8,%rsi,1),%rcx
  0x0000000002c66f19: cmp    0xc(%rdx),%ecx
  0x0000000002c66f1c: ja     0x0000000002c6714f
  0x0000000002c66f22: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c66f26: cmp    0xc(%r9),%ecx
  0x0000000002c66f2a: ja     0x0000000002c6714f
  0x0000000002c66f30: test   %esi,%esi
  0x0000000002c66f32: jl     0x0000000002c6714f
  0x0000000002c66f38: je     0x0000000002c66f7c
  0x0000000002c66f3e: movslq %r8d,%r8
  0x0000000002c66f41: movslq %edi,%rdi
  0x0000000002c66f44: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c66f49: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c66f4e: mov    %rsi,%r8
  0x0000000002c66f51: sub    $0x20,%rsp
  0x0000000002c66f55: test   $0xf,%esp
  0x0000000002c66f5b: je     0x0000000002c66f73
  0x0000000002c66f61: sub    $0x8,%rsp
  0x0000000002c66f65: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c66f6a: add    $0x8,%rsp
  0x0000000002c66f6e: jmpq   0x0000000002c66f78
  0x0000000002c66f73: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c66f78: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66f7c: mov    0xc8(%rsp),%rax
  0x0000000002c66f84: mov    0xb8(%rsp),%rdx
  0x0000000002c66f8c: mov    %rax,%r10
  0x0000000002c66f8f: shr    $0x3,%r10
  0x0000000002c66f93: mov    %r10d,0x10(%rdx)
  0x0000000002c66f97: mov    %rdx,%r8
  0x0000000002c66f9a: shr    $0x9,%r8
  0x0000000002c66f9e: movabs $0xe8fe000,%r9
  0x0000000002c66fa8: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002c66fad: mov    0xac(%rsp),%esi
  0x0000000002c66fb4: mov    0xc0(%rsp),%rbx
  0x0000000002c66fbc: mov    0x10(%rdx),%edi
  0x0000000002c66fbf: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000002c66fc3: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000002c66fc6: mov    %rbx,%r8
  0x0000000002c66fc9: movabs $0x1bd9ba08,%r9    ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c66fd3: mov    0x8(%r8),%r8d
  0x0000000002c66fd7: shl    $0x3,%r8
  0x0000000002c66fdb: cmp    0x180(%r9),%r8
  0x0000000002c66fe2: jne    0x0000000002c66ff1
  0x0000000002c66fe4: addq   $0x1,0x188(%r9)
  0x0000000002c66fec: jmpq   0x0000000002c67057
  0x0000000002c66ff1: cmp    0x190(%r9),%r8
  0x0000000002c66ff8: jne    0x0000000002c67007
  0x0000000002c66ffa: addq   $0x1,0x198(%r9)
  0x0000000002c67002: jmpq   0x0000000002c67057
  0x0000000002c67007: cmpq   $0x0,0x180(%r9)
  0x0000000002c67012: jne    0x0000000002c6702b
  0x0000000002c67014: mov    %r8,0x180(%r9)
  0x0000000002c6701b: movq   $0x1,0x188(%r9)
  0x0000000002c67026: jmpq   0x0000000002c67057
  0x0000000002c6702b: cmpq   $0x0,0x190(%r9)
  0x0000000002c67036: jne    0x0000000002c6704f
  0x0000000002c67038: mov    %r8,0x190(%r9)
  0x0000000002c6703f: movq   $0x1,0x198(%r9)
  0x0000000002c6704a: jmpq   0x0000000002c67057
  0x0000000002c6704f: addq   $0x1,0x178(%r9)
  0x0000000002c67057: mov    $0x0,%r8d
  0x0000000002c6705d: mov    %rsi,%r9
  0x0000000002c67060: mov    %rax,%rsi
  0x0000000002c67063: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000002c67066: nop
  0x0000000002c67067: callq  0x0000000002b961a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x0000000002c6706c: mov    0xb8(%rsp),%rdx
  0x0000000002c67074: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000002c67077: add    0xac(%rsp),%eax
  0x0000000002c6707e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000002c67081: mov    %rdx,%rax
  0x0000000002c67084: add    $0xe0,%rsp
  0x0000000002c6708b: pop    %rbp
  0x0000000002c6708c: test   %eax,-0x1e46f92(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c67092: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000002c67093: mov    %rdx,%rsi
  0x0000000002c67096: movabs $0x1bd9ba08,%rdi   ;   {metadata(method data for {method} {0x000000001bbe45e0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c670a0: addq   $0x1,0x128(%rdi)
  0x0000000002c670a8: nop
  0x0000000002c670a9: nop
  0x0000000002c670aa: nop
  0x0000000002c670ab: nop
  0x0000000002c670ac: nop
  0x0000000002c670ad: nop
  0x0000000002c670ae: nop
  0x0000000002c670af: callq  0x0000000002b961a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000002c670b4: add    $0xe0,%rsp
  0x0000000002c670bb: pop    %rbp
  0x0000000002c670bc: test   %eax,-0x1e46fc2(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c670c2: retq   
  0x0000000002c670c3: mov    %rsi,0x8(%rsp)
  0x0000000002c670c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c670d0: callq  0x0000000002c58220  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000002c670d5: jmpq   0x0000000002c66b89
  0x0000000002c670da: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002c670df: mov    %rsi,0x8(%rsp)
  0x0000000002c670e4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c670ec: callq  0x0000000002c58220  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002c670f1: jmpq   0x0000000002c66c88
  0x0000000002c670f6: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002c670fb: mov    %rbx,0x8(%rsp)
  0x0000000002c67100: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c67108: callq  0x0000000002c58220  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002c6710d: jmpq   0x0000000002c66ce6
  0x0000000002c67112: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002c67117: mov    %rbx,0x8(%rsp)
  0x0000000002c6711c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c67124: callq  0x0000000002c58220  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002c67129: jmpq   0x0000000002c66dc3
  0x0000000002c6712e: callq  0x0000000002c54a40  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002c67133: jmpq   0x0000000002c66e3d
  0x0000000002c67138: mov    %rdx,0x8(%rsp)
  0x0000000002c6713d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c67145: callq  0x0000000002c58220  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002c6714a: jmpq   0x0000000002c66e86
  0x0000000002c6714f: callq  0x0000000002b96620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000002c67154: jmpq   0x0000000002c66f7c
  0x0000000002c67159: nop
  0x0000000002c6715a: nop
  0x0000000002c6715b: mov    0x2a8(%r15),%rax
  0x0000000002c67162: movabs $0x0,%r10
  0x0000000002c6716c: mov    %r10,0x2a8(%r15)
  0x0000000002c67173: movabs $0x0,%r10
  0x0000000002c6717d: mov    %r10,0x2b0(%r15)
  0x0000000002c67184: add    $0xe0,%rsp
  0x0000000002c6718b: pop    %rbp
  0x0000000002c6718c: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c67191: hlt    
  0x0000000002c67192: hlt    
  0x0000000002c67193: hlt    
  0x0000000002c67194: hlt    
  0x0000000002c67195: hlt    
  0x0000000002c67196: hlt    
  0x0000000002c67197: hlt    
  0x0000000002c67198: hlt    
  0x0000000002c67199: hlt    
  0x0000000002c6719a: hlt    
  0x0000000002c6719b: hlt    
  0x0000000002c6719c: hlt    
  0x0000000002c6719d: hlt    
  0x0000000002c6719e: hlt    
  0x0000000002c6719f: hlt    
[Stub Code]
  0x0000000002c671a0: nop                       ;   {no_reloc}
  0x0000000002c671a1: nop
  0x0000000002c671a2: nop
  0x0000000002c671a3: nop
  0x0000000002c671a4: nop
  0x0000000002c671a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c671af: jmpq   0x0000000002c671af  ;   {runtime_call}
  0x0000000002c671b4: nop
  0x0000000002c671b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c671bf: jmpq   0x0000000002c671bf  ;   {runtime_call}
  0x0000000002c671c4: nop
  0x0000000002c671c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c671cf: jmpq   0x0000000002c671cf  ;   {runtime_call}
  0x0000000002c671d4: nop
  0x0000000002c671d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c671df: jmpq   0x0000000002c671df  ;   {runtime_call}
[Exception Handler]
  0x0000000002c671e4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c671e9: mov    %rsp,-0x28(%rsp)
  0x0000000002c671ee: sub    $0x80,%rsp
  0x0000000002c671f5: mov    %rax,0x78(%rsp)
  0x0000000002c671fa: mov    %rcx,0x70(%rsp)
  0x0000000002c671ff: mov    %rdx,0x68(%rsp)
  0x0000000002c67204: mov    %rbx,0x60(%rsp)
  0x0000000002c67209: mov    %rbp,0x50(%rsp)
  0x0000000002c6720e: mov    %rsi,0x48(%rsp)
  0x0000000002c67213: mov    %rdi,0x40(%rsp)
  0x0000000002c67218: mov    %r8,0x38(%rsp)
  0x0000000002c6721d: mov    %r9,0x30(%rsp)
  0x0000000002c67222: mov    %r10,0x28(%rsp)
  0x0000000002c67227: mov    %r11,0x20(%rsp)
  0x0000000002c6722c: mov    %r12,0x18(%rsp)
  0x0000000002c67231: mov    %r13,0x10(%rsp)
  0x0000000002c67236: mov    %r14,0x8(%rsp)
  0x0000000002c6723b: mov    %r15,(%rsp)
  0x0000000002c6723f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c67249: movabs $0x2c671e9,%rdx    ;   {internal_word}
  0x0000000002c67253: mov    %rsp,%r8
  0x0000000002c67256: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6725a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6725f: hlt    
[Deopt Handler Code]
  0x0000000002c67260: movabs $0x2c67260,%r10    ;   {section_word}
  0x0000000002c6726a: push   %r10
  0x0000000002c6726c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c67271: hlt    
  0x0000000002c67272: hlt    
  0x0000000002c67273: hlt    
  0x0000000002c67274: hlt    
  0x0000000002c67275: hlt    
  0x0000000002c67276: hlt    
  0x0000000002c67277: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002c66b20' size='3456' address='0x0000000002c66950' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='257' iicount='257' stamp='5.538'/>
<writer thread='21536'/>
<task_queued compile_id='33' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='256' iicount='256' level='3' stamp='5.542' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c65f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c66100: mov    0x8(%rdx),%r10d
  0x0000000002c66104: shl    $0x3,%r10
  0x0000000002c66108: cmp    %rax,%r10
  0x0000000002c6610b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c66111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6611c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c66120: mov    %eax,-0x6000(%rsp)
  0x0000000002c66127: push   %rbp
  0x0000000002c66128: sub    $0x30,%rsp
  0x0000000002c6612c: movabs $0x1bdc1d30,%rsi   ;   {metadata(method data for {method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c66136: mov    0xdc(%rsi),%edi
  0x0000000002c6613c: add    $0x8,%edi
  0x0000000002c6613f: mov    %edi,0xdc(%rsi)
  0x0000000002c66145: movabs $0x1bbe79e8,%rsi   ;   {metadata({method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c6614f: and    $0x1ff8,%edi
  0x0000000002c66155: cmp    $0x0,%edi
  0x0000000002c66158: je     0x0000000002c66195  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002c6615e: mov    %rdx,%rsi
  0x0000000002c66161: movabs $0x1bdc1d30,%rdi   ;   {metadata(method data for {method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c6616b: addq   $0x1,0x108(%rdi)
  0x0000000002c66173: mov    %rdx,%rsi
  0x0000000002c66176: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002c66179: mov    %rsi,0x20(%rsp)
  0x0000000002c6617e: nop
  0x0000000002c6617f: callq  0x0000000002b961a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002c66184: mov    0x20(%rsp),%rax
  0x0000000002c66189: add    $0x30,%rsp
  0x0000000002c6618d: pop    %rbp
  0x0000000002c6618e: test   %eax,-0x1e46094(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c66194: retq   
  0x0000000002c66195: mov    %rsi,0x8(%rsp)
  0x0000000002c6619a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c661a2: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002c661a7: jmp    0x0000000002c6615e
  0x0000000002c661a9: nop
  0x0000000002c661aa: nop
  0x0000000002c661ab: mov    0x2a8(%r15),%rax
  0x0000000002c661b2: movabs $0x0,%r10
  0x0000000002c661bc: mov    %r10,0x2a8(%r15)
  0x0000000002c661c3: movabs $0x0,%r10
  0x0000000002c661cd: mov    %r10,0x2b0(%r15)
  0x0000000002c661d4: add    $0x30,%rsp
  0x0000000002c661d8: pop    %rbp
  0x0000000002c661d9: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c661de: hlt    
  0x0000000002c661df: hlt    
[Stub Code]
  0x0000000002c661e0: nop                       ;   {no_reloc}
  0x0000000002c661e1: nop
  0x0000000002c661e2: nop
  0x0000000002c661e3: nop
  0x0000000002c661e4: nop
  0x0000000002c661e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c661ef: jmpq   0x0000000002c661ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002c661f4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c661f9: mov    %rsp,-0x28(%rsp)
  0x0000000002c661fe: sub    $0x80,%rsp
  0x0000000002c66205: mov    %rax,0x78(%rsp)
  0x0000000002c6620a: mov    %rcx,0x70(%rsp)
  0x0000000002c6620f: mov    %rdx,0x68(%rsp)
  0x0000000002c66214: mov    %rbx,0x60(%rsp)
  0x0000000002c66219: mov    %rbp,0x50(%rsp)
  0x0000000002c6621e: mov    %rsi,0x48(%rsp)
  0x0000000002c66223: mov    %rdi,0x40(%rsp)
  0x0000000002c66228: mov    %r8,0x38(%rsp)
  0x0000000002c6622d: mov    %r9,0x30(%rsp)
  0x0000000002c66232: mov    %r10,0x28(%rsp)
  0x0000000002c66237: mov    %r11,0x20(%rsp)
  0x0000000002c6623c: mov    %r12,0x18(%rsp)
  0x0000000002c66241: mov    %r13,0x10(%rsp)
  0x0000000002c66246: mov    %r14,0x8(%rsp)
  0x0000000002c6624b: mov    %r15,(%rsp)
  0x0000000002c6624f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c66259: movabs $0x2c661f9,%rdx    ;   {internal_word}
  0x0000000002c66263: mov    %rsp,%r8
  0x0000000002c66266: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6626a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6626f: hlt    
[Deopt Handler Code]
  0x0000000002c66270: movabs $0x2c66270,%r10    ;   {section_word}
  0x0000000002c6627a: push   %r10
  0x0000000002c6627c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c66281: hlt    
  0x0000000002c66282: hlt    
  0x0000000002c66283: hlt    
  0x0000000002c66284: hlt    
  0x0000000002c66285: hlt    
  0x0000000002c66286: hlt    
  0x0000000002c66287: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x0000000002c66100' size='912' address='0x0000000002c65f90' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='283' iicount='283' stamp='5.704'/>
<writer thread='21536'/>
<task_queued compile_id='34' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='5.704' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c65c50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bb89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c65da0: mov    %eax,-0x6000(%rsp)
  0x0000000002c65da7: push   %rbp
  0x0000000002c65da8: sub    $0x30,%rsp
  0x0000000002c65dac: movabs $0x1bdc1e68,%rax   ;   {metadata(method data for {method} {0x000000001bb89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c65db6: mov    0xdc(%rax),%esi
  0x0000000002c65dbc: add    $0x8,%esi
  0x0000000002c65dbf: mov    %esi,0xdc(%rax)
  0x0000000002c65dc5: movabs $0x1bb89500,%rax   ;   {metadata({method} {0x000000001bb89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c65dcf: and    $0x1ff8,%esi
  0x0000000002c65dd5: cmp    $0x0,%esi
  0x0000000002c65dd8: je     0x0000000002c65dfb
  0x0000000002c65dde: movabs $0x76b700c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002c65de8: mov    0x74(%rax),%eax
  0x0000000002c65deb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x0000000002c65def: add    $0x30,%rsp
  0x0000000002c65df3: pop    %rbp
  0x0000000002c65df4: test   %eax,-0x1e45cfa(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c65dfa: retq   
  0x0000000002c65dfb: mov    %rax,0x8(%rsp)
  0x0000000002c65e00: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c65e08: callq  0x0000000002c58220  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x0000000002c65e0d: jmp    0x0000000002c65dde
  0x0000000002c65e0f: nop
  0x0000000002c65e10: nop
  0x0000000002c65e11: mov    0x2a8(%r15),%rax
  0x0000000002c65e18: movabs $0x0,%r10
  0x0000000002c65e22: mov    %r10,0x2a8(%r15)
  0x0000000002c65e29: movabs $0x0,%r10
  0x0000000002c65e33: mov    %r10,0x2b0(%r15)
  0x0000000002c65e3a: add    $0x30,%rsp
  0x0000000002c65e3e: pop    %rbp
  0x0000000002c65e3f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c65e44: hlt    
  0x0000000002c65e45: hlt    
  0x0000000002c65e46: hlt    
  0x0000000002c65e47: hlt    
  0x0000000002c65e48: hlt    
  0x0000000002c65e49: hlt    
  0x0000000002c65e4a: hlt    
  0x0000000002c65e4b: hlt    
  0x0000000002c65e4c: hlt    
  0x0000000002c65e4d: hlt    
  0x0000000002c65e4e: hlt    
  0x0000000002c65e4f: hlt    
  0x0000000002c65e50: hlt    
  0x0000000002c65e51: hlt    
  0x0000000002c65e52: hlt    
  0x0000000002c65e53: hlt    
  0x0000000002c65e54: hlt    
  0x0000000002c65e55: hlt    
  0x0000000002c65e56: hlt    
  0x0000000002c65e57: hlt    
  0x0000000002c65e58: hlt    
  0x0000000002c65e59: hlt    
  0x0000000002c65e5a: hlt    
  0x0000000002c65e5b: hlt    
  0x0000000002c65e5c: hlt    
  0x0000000002c65e5d: hlt    
  0x0000000002c65e5e: hlt    
  0x0000000002c65e5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c65e60: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c65e65: mov    %rsp,-0x28(%rsp)
  0x0000000002c65e6a: sub    $0x80,%rsp
  0x0000000002c65e71: mov    %rax,0x78(%rsp)
  0x0000000002c65e76: mov    %rcx,0x70(%rsp)
  0x0000000002c65e7b: mov    %rdx,0x68(%rsp)
  0x0000000002c65e80: mov    %rbx,0x60(%rsp)
  0x0000000002c65e85: mov    %rbp,0x50(%rsp)
  0x0000000002c65e8a: mov    %rsi,0x48(%rsp)
  0x0000000002c65e8f: mov    %rdi,0x40(%rsp)
  0x0000000002c65e94: mov    %r8,0x38(%rsp)
  0x0000000002c65e99: mov    %r9,0x30(%rsp)
  0x0000000002c65e9e: mov    %r10,0x28(%rsp)
  0x0000000002c65ea3: mov    %r11,0x20(%rsp)
  0x0000000002c65ea8: mov    %r12,0x18(%rsp)
  0x0000000002c65ead: mov    %r13,0x10(%rsp)
  0x0000000002c65eb2: mov    %r14,0x8(%rsp)
  0x0000000002c65eb7: mov    %r15,(%rsp)
  0x0000000002c65ebb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c65ec5: movabs $0x2c65e65,%rdx    ;   {internal_word}
  0x0000000002c65ecf: mov    %rsp,%r8
  0x0000000002c65ed2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c65ed6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c65edb: hlt    
[Deopt Handler Code]
  0x0000000002c65edc: movabs $0x2c65edc,%r10    ;   {section_word}
  0x0000000002c65ee6: push   %r10
  0x0000000002c65ee8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c65eed: hlt    
  0x0000000002c65eee: hlt    
  0x0000000002c65eef: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000000002c65da0' size='768' address='0x0000000002c65c50' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='257' iicount='257' stamp='5.824'/>
<writer thread='21536'/>
<task_queued compile_id='35' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='512' iicount='512' level='3' stamp='5.831' comment='tiered' hot_count='512'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c64910:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002c64b20: mov    %eax,-0x6000(%rsp)
  0x0000000002c64b27: push   %rbp
  0x0000000002c64b28: sub    $0xa0,%rsp
  0x0000000002c64b2f: mov    %rdx,%r11
  0x0000000002c64b32: movabs $0x1bdcdea0,%rbx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64b3c: mov    0xdc(%rbx),%edx
  0x0000000002c64b42: add    $0x8,%edx
  0x0000000002c64b45: mov    %edx,0xdc(%rbx)
  0x0000000002c64b4b: movabs $0x1bc89328,%rbx   ;   {metadata({method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64b55: and    $0x1ff8,%edx
  0x0000000002c64b5b: cmp    $0x0,%edx
  0x0000000002c64b5e: je     0x0000000002c653c9  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002c64b64: mov    %r9,%r13
  0x0000000002c64b67: sub    %r8d,%r13d
  0x0000000002c64b6a: cmp    $0x0,%r13d
  0x0000000002c64b6e: movabs $0x1bdcdea0,%rbx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64b78: movabs $0x108,%rdx
  0x0000000002c64b82: jge    0x0000000002c64b92
  0x0000000002c64b88: movabs $0x118,%rdx
  0x0000000002c64b92: mov    (%rbx,%rdx,1),%rsi
  0x0000000002c64b96: lea    0x1(%rsi),%rsi
  0x0000000002c64b9a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002c64b9e: jl     0x0000000002c64d66  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002c64ba4: mov    %r13,%rbx
  0x0000000002c64ba7: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c64bb1: movslq %ebx,%rbx
  0x0000000002c64bb4: mov    %rbx,%rdi
  0x0000000002c64bb7: cmp    $0xffffff,%rbx
  0x0000000002c64bbe: ja     0x0000000002c653e0
  0x0000000002c64bc4: movabs $0x17,%rsi
  0x0000000002c64bce: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c64bd2: and    $0xfffffffffffffff8,%rsi
  0x0000000002c64bd6: mov    0x60(%r15),%rax
  0x0000000002c64bda: lea    (%rax,%rsi,1),%rsi
  0x0000000002c64bde: cmp    0x70(%r15),%rsi
  0x0000000002c64be2: ja     0x0000000002c653e0
  0x0000000002c64be8: mov    %rsi,0x60(%r15)
  0x0000000002c64bec: sub    %rax,%rsi
  0x0000000002c64bef: movq   $0x1,(%rax)
  0x0000000002c64bf6: mov    %rdx,%rcx
  0x0000000002c64bf9: shr    $0x3,%rcx
  0x0000000002c64bfd: mov    %ecx,0x8(%rax)
  0x0000000002c64c00: mov    %ebx,0xc(%rax)
  0x0000000002c64c03: sub    $0x10,%rsi
  0x0000000002c64c07: je     0x0000000002c64c1e
  0x0000000002c64c0d: xor    %rbx,%rbx
  0x0000000002c64c10: shr    $0x3,%rsi
  0x0000000002c64c14: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c64c19: dec    %rsi
  0x0000000002c64c1c: jne    0x0000000002c64c14  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002c64c1e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002c653ea
  0x0000000002c64c22: sub    %r8d,%edx
  0x0000000002c64c25: movabs $0x1bdcdea0,%r9    ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64c2f: addq   $0x1,0x208(%r9)
  0x0000000002c64c37: movabs $0x1bd7ac78,%r9    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c64c41: mov    0xdc(%r9),%edi
  0x0000000002c64c48: add    $0x8,%edi
  0x0000000002c64c4b: mov    %edi,0xdc(%r9)
  0x0000000002c64c52: movabs $0x1bc64608,%r9    ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c64c5c: and    $0x7ffff8,%edi
  0x0000000002c64c62: cmp    $0x0,%edi
  0x0000000002c64c65: je     0x0000000002c653ef
  0x0000000002c64c6b: cmp    %r13d,%edx
  0x0000000002c64c6e: movabs $0x1bd7ac78,%r9    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c64c78: movabs $0x108,%rdi
  0x0000000002c64c82: jg     0x0000000002c64c92
  0x0000000002c64c88: movabs $0x118,%rdi
  0x0000000002c64c92: mov    (%r9,%rdi,1),%rsi
  0x0000000002c64c96: lea    0x1(%rsi),%rsi
  0x0000000002c64c9a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002c64c9e: jg     0x0000000002c64cbd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c64ca4: movabs $0x1bd7ac78,%r9    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c64cae: incl   0x128(%r9)
  0x0000000002c64cb5: mov    %rdx,%rsi
  0x0000000002c64cb8: jmpq   0x0000000002c64cc0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c64cbd: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c64cc0: movabs $0x1bdcdea0,%rdx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64cca: addq   $0x1,0x218(%rdx)
  0x0000000002c64cd2: mov    %r11,%rdx
  0x0000000002c64cd5: mov    %rax,%r9
  0x0000000002c64cd8: mov    $0x0,%edi
  0x0000000002c64cdd: mov    %rax,0x70(%rsp)
  0x0000000002c64ce2: test   %r8d,%r8d
  0x0000000002c64ce5: jl     0x0000000002c65406
  0x0000000002c64ceb: lea    (%r8,%rsi,1),%rcx
  0x0000000002c64cef: cmp    0xc(%rdx),%ecx
  0x0000000002c64cf2: ja     0x0000000002c65406
  0x0000000002c64cf8: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c64cfc: cmp    0xc(%r9),%ecx
  0x0000000002c64d00: ja     0x0000000002c65406
  0x0000000002c64d06: test   %esi,%esi
  0x0000000002c64d08: jl     0x0000000002c65406
  0x0000000002c64d0e: je     0x0000000002c64d52
  0x0000000002c64d14: movslq %r8d,%r8
  0x0000000002c64d17: movslq %edi,%rdi
  0x0000000002c64d1a: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c64d1f: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c64d24: mov    %rsi,%r8
  0x0000000002c64d27: sub    $0x20,%rsp
  0x0000000002c64d2b: test   $0xf,%esp
  0x0000000002c64d31: je     0x0000000002c64d49
  0x0000000002c64d37: sub    $0x8,%rsp
  0x0000000002c64d3b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c64d40: add    $0x8,%rsp
  0x0000000002c64d44: jmpq   0x0000000002c64d4e
  0x0000000002c64d49: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c64d4e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002c64d52: mov    0x70(%rsp),%rax
  0x0000000002c64d57: add    $0xa0,%rsp
  0x0000000002c64d5e: pop    %rbp
  0x0000000002c64d5f: test   %eax,-0x1e44c65(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c64d65: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002c64d66: mov    %r9d,0x80(%rsp)
  0x0000000002c64d6e: xchg   %ax,%ax
  0x0000000002c64d70: jmpq   0x0000000002c65420  ;   {no_reloc}
  0x0000000002c64d75: add    %al,(%rax)
  0x0000000002c64d77: add    %al,(%rax)
  0x0000000002c64d79: add    %cl,-0x75(%rcx)
  0x0000000002c64d7c: rex.RXB (bad) 
  0x0000000002c64d7e: lea    0x20(%rax),%rdi
  0x0000000002c64d82: cmp    0x70(%r15),%rdi
  0x0000000002c64d86: ja     0x0000000002c6542a
  0x0000000002c64d8c: mov    %rdi,0x60(%r15)
  0x0000000002c64d90: mov    0xa8(%rdx),%rcx
  0x0000000002c64d97: mov    %rcx,(%rax)
  0x0000000002c64d9a: mov    %rdx,%rcx
  0x0000000002c64d9d: shr    $0x3,%rcx
  0x0000000002c64da1: mov    %ecx,0x8(%rax)
  0x0000000002c64da4: xor    %rcx,%rcx
  0x0000000002c64da7: mov    %ecx,0xc(%rax)
  0x0000000002c64daa: xor    %rcx,%rcx
  0x0000000002c64dad: mov    %rcx,0x10(%rax)
  0x0000000002c64db1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002c64db5: data16 xchg %ax,%ax
  0x0000000002c64db8: jmpq   0x0000000002c65446  ;   {no_reloc}
  0x0000000002c64dbd: add    %al,(%rax)
  0x0000000002c64dbf: add    %al,(%rax)
  0x0000000002c64dc1: add    %cl,-0x77(%rax)
  0x0000000002c64dc4: test   %ah,(%rax,%rcx,4)
  0x0000000002c64dc7: add    %al,(%rax)
  0x0000000002c64dc9: add    %cl,-0x75(%rcx)
  0x0000000002c64dcc: rex.RXB (bad) 
  0x0000000002c64dce: lea    0x18(%rax),%rdi
  0x0000000002c64dd2: cmp    0x70(%r15),%rdi
  0x0000000002c64dd6: ja     0x0000000002c65450
  0x0000000002c64ddc: mov    %rdi,0x60(%r15)
  0x0000000002c64de0: mov    0xa8(%rdx),%rcx
  0x0000000002c64de7: mov    %rcx,(%rax)
  0x0000000002c64dea: mov    %rdx,%rcx
  0x0000000002c64ded: shr    $0x3,%rcx
  0x0000000002c64df1: mov    %ecx,0x8(%rax)
  0x0000000002c64df4: xor    %rcx,%rcx
  0x0000000002c64df7: mov    %ecx,0xc(%rax)
  0x0000000002c64dfa: xor    %rcx,%rcx
  0x0000000002c64dfd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002c64e01: mov    %rax,%rbx
  0x0000000002c64e04: movabs $0x1bdcdea0,%rdx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64e0e: addq   $0x1,0x128(%rdx)
  0x0000000002c64e16: movabs $0x1bdce178,%rbx   ;   {metadata(method data for {method} {0x000000001bbe76d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c64e20: mov    0xdc(%rbx),%edx
  0x0000000002c64e26: add    $0x8,%edx
  0x0000000002c64e29: mov    %edx,0xdc(%rbx)
  0x0000000002c64e2f: movabs $0x1bbe76d0,%rbx   ;   {metadata({method} {0x000000001bbe76d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c64e39: and    $0x7ffff8,%edx
  0x0000000002c64e3f: cmp    $0x0,%edx
  0x0000000002c64e42: je     0x0000000002c6545d
  0x0000000002c64e48: mov    %rax,%rbx
  0x0000000002c64e4b: movabs $0x1bdce178,%rdx   ;   {metadata(method data for {method} {0x000000001bbe76d8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c64e55: addq   $0x1,0x108(%rdx)
  0x0000000002c64e5d: movabs $0x1bdce2a8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c64e67: mov    0xdc(%rbx),%edx
  0x0000000002c64e6d: add    $0x8,%edx
  0x0000000002c64e70: mov    %edx,0xdc(%rbx)
  0x0000000002c64e76: movabs $0x1bbe3a00,%rbx   ;   {metadata({method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c64e80: and    $0x7ffff8,%edx
  0x0000000002c64e86: cmp    $0x0,%edx
  0x0000000002c64e89: je     0x0000000002c65474
  0x0000000002c64e8f: mov    %rax,%rbx
  0x0000000002c64e92: movabs $0x1bdce2a8,%rdx   ;   {metadata(method data for {method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c64e9c: addq   $0x1,0x108(%rdx)
  0x0000000002c64ea4: movabs $0x1bca3718,%rbx   ;   {metadata(method data for {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c64eae: mov    0xdc(%rbx),%edx
  0x0000000002c64eb4: add    $0x8,%edx
  0x0000000002c64eb7: mov    %edx,0xdc(%rbx)
  0x0000000002c64ebd: movabs $0x1bb70480,%rbx   ;   {metadata({method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c64ec7: and    $0x7ffff8,%edx
  0x0000000002c64ecd: cmp    $0x0,%edx
  0x0000000002c64ed0: je     0x0000000002c6548b
  0x0000000002c64ed6: mov    $0x10,%ebx
  0x0000000002c64edb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c64ee5: mov    %rax,%r13
  0x0000000002c64ee8: movslq %ebx,%rbx
  0x0000000002c64eeb: mov    %rbx,%rdi
  0x0000000002c64eee: cmp    $0xffffff,%rbx
  0x0000000002c64ef5: ja     0x0000000002c654a2
  0x0000000002c64efb: movabs $0x17,%rsi
  0x0000000002c64f05: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c64f09: and    $0xfffffffffffffff8,%rsi
  0x0000000002c64f0d: mov    0x60(%r15),%rax
  0x0000000002c64f11: lea    (%rax,%rsi,1),%rsi
  0x0000000002c64f15: cmp    0x70(%r15),%rsi
  0x0000000002c64f19: ja     0x0000000002c654a2
  0x0000000002c64f1f: mov    %rsi,0x60(%r15)
  0x0000000002c64f23: sub    %rax,%rsi
  0x0000000002c64f26: movq   $0x1,(%rax)
  0x0000000002c64f2d: mov    %rdx,%rcx
  0x0000000002c64f30: shr    $0x3,%rcx
  0x0000000002c64f34: mov    %ecx,0x8(%rax)
  0x0000000002c64f37: mov    %ebx,0xc(%rax)
  0x0000000002c64f3a: sub    $0x10,%rsi
  0x0000000002c64f3e: je     0x0000000002c64f55
  0x0000000002c64f44: xor    %rbx,%rbx
  0x0000000002c64f47: shr    $0x3,%rsi
  0x0000000002c64f4b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c64f50: dec    %rsi
  0x0000000002c64f53: jne    0x0000000002c64f4b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002c64f55: mov    %rax,%r10
  0x0000000002c64f58: shr    $0x3,%r10
  0x0000000002c64f5c: mov    %r10d,0x10(%r13)
  0x0000000002c64f60: mov    %r13,%rax
  0x0000000002c64f63: shr    $0x9,%rax
  0x0000000002c64f67: movabs $0xe8fe000,%rdx
  0x0000000002c64f71: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002c64f75: mov    %r13,%rax
  0x0000000002c64f78: movabs $0x1bdcdea0,%rdx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c64f82: mov    0x8(%rax),%eax
  0x0000000002c64f85: shl    $0x3,%rax
  0x0000000002c64f89: cmp    0x140(%rdx),%rax
  0x0000000002c64f90: jne    0x0000000002c64f9f
  0x0000000002c64f92: addq   $0x1,0x148(%rdx)
  0x0000000002c64f9a: jmpq   0x0000000002c65005
  0x0000000002c64f9f: cmp    0x150(%rdx),%rax
  0x0000000002c64fa6: jne    0x0000000002c64fb5
  0x0000000002c64fa8: addq   $0x1,0x158(%rdx)
  0x0000000002c64fb0: jmpq   0x0000000002c65005
  0x0000000002c64fb5: cmpq   $0x0,0x140(%rdx)
  0x0000000002c64fc0: jne    0x0000000002c64fd9
  0x0000000002c64fc2: mov    %rax,0x140(%rdx)
  0x0000000002c64fc9: movq   $0x1,0x148(%rdx)
  0x0000000002c64fd4: jmpq   0x0000000002c65005
  0x0000000002c64fd9: cmpq   $0x0,0x150(%rdx)
  0x0000000002c64fe4: jne    0x0000000002c64ffd
  0x0000000002c64fe6: mov    %rax,0x150(%rdx)
  0x0000000002c64fed: movq   $0x1,0x158(%rdx)
  0x0000000002c64ff8: jmpq   0x0000000002c65005
  0x0000000002c64ffd: addq   $0x1,0x138(%rdx)
  0x0000000002c65005: movabs $0x1bdce3e0,%rdx   ;   {metadata(method data for {method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c6500f: mov    0xdc(%rdx),%esi
  0x0000000002c65015: add    $0x8,%esi
  0x0000000002c65018: mov    %esi,0xdc(%rdx)
  0x0000000002c6501e: movabs $0x1bbe7ea8,%rdx   ;   {metadata({method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65028: and    $0x7ffff8,%esi
  0x0000000002c6502e: cmp    $0x0,%esi
  0x0000000002c65031: je     0x0000000002c654ac
  0x0000000002c65037: mov    %r13,%rax
  0x0000000002c6503a: movabs $0x1bdce3e0,%rdx   ;   {metadata(method data for {method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65044: addq   $0x1,0x108(%rdx)
  0x0000000002c6504c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002c6504f: mov    %r13,0x78(%rsp)
  0x0000000002c65054: nop
  0x0000000002c65055: nop
  0x0000000002c65056: nop
  0x0000000002c65057: callq  0x0000000002b961a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c6505c: mov    0x78(%rsp),%rax
  0x0000000002c65061: movabs $0x1bdcdea0,%r8    ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6506b: mov    0x8(%rax),%eax
  0x0000000002c6506e: shl    $0x3,%rax
  0x0000000002c65072: cmp    0x170(%r8),%rax
  0x0000000002c65079: jne    0x0000000002c65088
  0x0000000002c6507b: addq   $0x1,0x178(%r8)
  0x0000000002c65083: jmpq   0x0000000002c650ee
  0x0000000002c65088: cmp    0x180(%r8),%rax
  0x0000000002c6508f: jne    0x0000000002c6509e
  0x0000000002c65091: addq   $0x1,0x188(%r8)
  0x0000000002c65099: jmpq   0x0000000002c650ee
  0x0000000002c6509e: cmpq   $0x0,0x170(%r8)
  0x0000000002c650a9: jne    0x0000000002c650c2
  0x0000000002c650ab: mov    %rax,0x170(%r8)
  0x0000000002c650b2: movq   $0x1,0x178(%r8)
  0x0000000002c650bd: jmpq   0x0000000002c650ee
  0x0000000002c650c2: cmpq   $0x0,0x180(%r8)
  0x0000000002c650cd: jne    0x0000000002c650e6
  0x0000000002c650cf: mov    %rax,0x180(%r8)
  0x0000000002c650d6: movq   $0x1,0x188(%r8)
  0x0000000002c650e1: jmpq   0x0000000002c650ee
  0x0000000002c650e6: addq   $0x1,0x168(%r8)
  0x0000000002c650ee: movabs $0x1bdc1d30,%r8    ;   {metadata(method data for {method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c650f8: mov    0xdc(%r8),%edx
  0x0000000002c650ff: add    $0x8,%edx
  0x0000000002c65102: mov    %edx,0xdc(%r8)
  0x0000000002c65109: movabs $0x1bbe79e8,%r8    ;   {metadata({method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65113: and    $0x7ffff8,%edx
  0x0000000002c65119: cmp    $0x0,%edx
  0x0000000002c6511c: je     0x0000000002c654c3
  0x0000000002c65122: mov    0x78(%rsp),%rax
  0x0000000002c65127: movabs $0x1bdc1d30,%r8    ;   {metadata(method data for {method} {0x000000001bbe79f0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65131: addq   $0x1,0x108(%r8)
  0x0000000002c65139: movabs $0x76b8451f8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002c65143: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002c65148: nop
  0x0000000002c65149: nop
  0x0000000002c6514a: nop
  0x0000000002c6514b: nop
  0x0000000002c6514c: nop
  0x0000000002c6514d: nop
  0x0000000002c6514e: nop
  0x0000000002c6514f: callq  0x0000000002b961a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c65154: mov    0x78(%rsp),%rax
  0x0000000002c65159: movabs $0x1bdcdea0,%r8    ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c65163: mov    0x8(%rax),%eax
  0x0000000002c65166: shl    $0x3,%rax
  0x0000000002c6516a: cmp    0x1a0(%r8),%rax
  0x0000000002c65171: jne    0x0000000002c65180
  0x0000000002c65173: addq   $0x1,0x1a8(%r8)
  0x0000000002c6517b: jmpq   0x0000000002c651e6
  0x0000000002c65180: cmp    0x1b0(%r8),%rax
  0x0000000002c65187: jne    0x0000000002c65196
  0x0000000002c65189: addq   $0x1,0x1b8(%r8)
  0x0000000002c65191: jmpq   0x0000000002c651e6
  0x0000000002c65196: cmpq   $0x0,0x1a0(%r8)
  0x0000000002c651a1: jne    0x0000000002c651ba
  0x0000000002c651a3: mov    %rax,0x1a0(%r8)
  0x0000000002c651aa: movq   $0x1,0x1a8(%r8)
  0x0000000002c651b5: jmpq   0x0000000002c651e6
  0x0000000002c651ba: cmpq   $0x0,0x1b0(%r8)
  0x0000000002c651c5: jne    0x0000000002c651de
  0x0000000002c651c7: mov    %rax,0x1b0(%r8)
  0x0000000002c651ce: movq   $0x1,0x1b8(%r8)
  0x0000000002c651d9: jmpq   0x0000000002c651e6
  0x0000000002c651de: addq   $0x1,0x198(%r8)
  0x0000000002c651e6: movabs $0x1bdce3e0,%r8    ;   {metadata(method data for {method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c651f0: mov    0xdc(%r8),%edx
  0x0000000002c651f7: add    $0x8,%edx
  0x0000000002c651fa: mov    %edx,0xdc(%r8)
  0x0000000002c65201: movabs $0x1bbe7ea8,%r8    ;   {metadata({method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c6520b: and    $0x7ffff8,%edx
  0x0000000002c65211: cmp    $0x0,%edx
  0x0000000002c65214: je     0x0000000002c654da
  0x0000000002c6521a: mov    0x78(%rsp),%rax
  0x0000000002c6521f: movabs $0x1bdce3e0,%r8    ;   {metadata(method data for {method} {0x000000001bbe7eb0} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65229: addq   $0x1,0x108(%r8)
  0x0000000002c65231: mov    0x80(%rsp),%r8d
  0x0000000002c65239: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002c6523e: nop
  0x0000000002c6523f: callq  0x0000000002b961a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c65244: mov    0x78(%rsp),%rax
  0x0000000002c65249: movabs $0x1bdcdea0,%rdx   ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c65253: mov    0x8(%rax),%eax
  0x0000000002c65256: shl    $0x3,%rax
  0x0000000002c6525a: cmp    0x1d0(%rdx),%rax
  0x0000000002c65261: jne    0x0000000002c65270
  0x0000000002c65263: addq   $0x1,0x1d8(%rdx)
  0x0000000002c6526b: jmpq   0x0000000002c652d6
  0x0000000002c65270: cmp    0x1e0(%rdx),%rax
  0x0000000002c65277: jne    0x0000000002c65286
  0x0000000002c65279: addq   $0x1,0x1e8(%rdx)
  0x0000000002c65281: jmpq   0x0000000002c652d6
  0x0000000002c65286: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002c65291: jne    0x0000000002c652aa
  0x0000000002c65293: mov    %rax,0x1d0(%rdx)
  0x0000000002c6529a: movq   $0x1,0x1d8(%rdx)
  0x0000000002c652a5: jmpq   0x0000000002c652d6
  0x0000000002c652aa: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002c652b5: jne    0x0000000002c652ce
  0x0000000002c652b7: mov    %rax,0x1e0(%rdx)
  0x0000000002c652be: movq   $0x1,0x1e8(%rdx)
  0x0000000002c652c9: jmpq   0x0000000002c652d6
  0x0000000002c652ce: addq   $0x1,0x1c8(%rdx)
  0x0000000002c652d6: movabs $0x1bdce730,%rdx   ;   {metadata(method data for {method} {0x000000001bbe8da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c652e0: mov    0xdc(%rdx),%esi
  0x0000000002c652e6: add    $0x8,%esi
  0x0000000002c652e9: mov    %esi,0xdc(%rdx)
  0x0000000002c652ef: movabs $0x1bbe8d98,%rdx   ;   {metadata({method} {0x000000001bbe8da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c652f9: and    $0x7ffff8,%esi
  0x0000000002c652ff: cmp    $0x0,%esi
  0x0000000002c65302: je     0x0000000002c654f1
  0x0000000002c65308: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c65312: mov    0x60(%r15),%rax
  0x0000000002c65316: lea    0x18(%rax),%rdi
  0x0000000002c6531a: cmp    0x70(%r15),%rdi
  0x0000000002c6531e: ja     0x0000000002c65508
  0x0000000002c65324: mov    %rdi,0x60(%r15)
  0x0000000002c65328: mov    0xa8(%rdx),%rcx
  0x0000000002c6532f: mov    %rcx,(%rax)
  0x0000000002c65332: mov    %rdx,%rcx
  0x0000000002c65335: shr    $0x3,%rcx
  0x0000000002c65339: mov    %ecx,0x8(%rax)
  0x0000000002c6533c: xor    %rcx,%rcx
  0x0000000002c6533f: mov    %ecx,0xc(%rax)
  0x0000000002c65342: xor    %rcx,%rcx
  0x0000000002c65345: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c65349: mov    0x78(%rsp),%r8
  0x0000000002c6534e: mov    0x10(%r8),%r9d
  0x0000000002c65352: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c65356: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c6535a: mov    %rax,%r8
  0x0000000002c6535d: movabs $0x1bdce730,%rdx   ;   {metadata(method data for {method} {0x000000001bbe8da0} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c65367: addq   $0x1,0x108(%rdx)
  0x0000000002c6536f: mov    %r9,%r8
  0x0000000002c65372: mov    $0x0,%r9d
  0x0000000002c65378: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c6537b: mov    %rax,0x90(%rsp)
  0x0000000002c65383: nop
  0x0000000002c65384: nop
  0x0000000002c65385: nop
  0x0000000002c65386: nop
  0x0000000002c65387: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c6538c: mov    0x88(%rsp),%rax
  0x0000000002c65394: movabs $0x1bdcdea0,%r8    ;   {metadata(method data for {method} {0x000000001bc89330} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6539e: addq   $0x1,0x1f8(%r8)
  0x0000000002c653a6: mov    0x90(%rsp),%r8
  0x0000000002c653ae: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002c653b6: nop
  0x0000000002c653b7: callq  0x0000000002b961a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c653bc: mov    0x88(%rsp),%rax
  0x0000000002c653c4: jmpq   0x0000000002c65540
  0x0000000002c653c9: mov    %rbx,0x8(%rsp)
  0x0000000002c653ce: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c653d6: callq  0x0000000002c58220  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002c653db: jmpq   0x0000000002c64b64
  0x0000000002c653e0: callq  0x0000000002c54a40  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002c653e5: jmpq   0x0000000002c64c1e
  0x0000000002c653ea: callq  0x0000000002c539c0  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002c653ef: mov    %r9,0x8(%rsp)
  0x0000000002c653f4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c653fc: callq  0x0000000002c58220  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002c65401: jmpq   0x0000000002c64c6b
  0x0000000002c65406: nop
  0x0000000002c65407: callq  0x0000000002b96620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002c6540c: jmpq   0x0000000002c64d52
  0x0000000002c65411: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c6541b: mov    $0xa050f00,%eax
  0x0000000002c65420: callq  0x0000000002c57160  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65425: jmpq   0x0000000002c64d70
  0x0000000002c6542a: mov    %rdx,%rdx
  0x0000000002c6542d: callq  0x0000000002c54140  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65432: jmpq   0x0000000002c64db5
  0x0000000002c65437: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c65441: mov    $0xa050f00,%eax
  0x0000000002c65446: callq  0x0000000002c57160  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c6544b: jmpq   0x0000000002c64db8
  0x0000000002c65450: mov    %rdx,%rdx
  0x0000000002c65453: callq  0x0000000002c54140  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65458: jmpq   0x0000000002c64e01
  0x0000000002c6545d: mov    %rbx,0x8(%rsp)
  0x0000000002c65462: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6546a: callq  0x0000000002c58220  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c6546f: jmpq   0x0000000002c64e48
  0x0000000002c65474: mov    %rbx,0x8(%rsp)
  0x0000000002c65479: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c65481: callq  0x0000000002c58220  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65486: jmpq   0x0000000002c64e8f
  0x0000000002c6548b: mov    %rbx,0x8(%rsp)
  0x0000000002c65490: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c65498: callq  0x0000000002c58220  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c6549d: jmpq   0x0000000002c64ed6
  0x0000000002c654a2: callq  0x0000000002c54a40  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c654a7: jmpq   0x0000000002c64f55
  0x0000000002c654ac: mov    %rdx,0x8(%rsp)
  0x0000000002c654b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c654b9: callq  0x0000000002c58220  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c654be: jmpq   0x0000000002c65037
  0x0000000002c654c3: mov    %r8,0x8(%rsp)
  0x0000000002c654c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c654d0: callq  0x0000000002c58220  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c654d5: jmpq   0x0000000002c65122
  0x0000000002c654da: mov    %r8,0x8(%rsp)
  0x0000000002c654df: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c654e7: callq  0x0000000002c58220  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c654ec: jmpq   0x0000000002c6521a
  0x0000000002c654f1: mov    %rdx,0x8(%rsp)
  0x0000000002c654f6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c654fe: callq  0x0000000002c58220  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65503: jmpq   0x0000000002c65308
  0x0000000002c65508: mov    %rdx,%rdx
  0x0000000002c6550b: callq  0x0000000002c54140  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c65510: jmpq   0x0000000002c65349
  0x0000000002c65515: nop
  0x0000000002c65516: nop
  0x0000000002c65517: mov    0x2a8(%r15),%rax
  0x0000000002c6551e: movabs $0x0,%r10
  0x0000000002c65528: mov    %r10,0x2a8(%r15)
  0x0000000002c6552f: movabs $0x0,%r10
  0x0000000002c65539: mov    %r10,0x2b0(%r15)
  0x0000000002c65540: add    $0xa0,%rsp
  0x0000000002c65547: pop    %rbp
  0x0000000002c65548: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6554d: hlt    
  0x0000000002c6554e: hlt    
  0x0000000002c6554f: hlt    
  0x0000000002c65550: hlt    
  0x0000000002c65551: hlt    
  0x0000000002c65552: hlt    
  0x0000000002c65553: hlt    
  0x0000000002c65554: hlt    
  0x0000000002c65555: hlt    
  0x0000000002c65556: hlt    
  0x0000000002c65557: hlt    
  0x0000000002c65558: hlt    
  0x0000000002c65559: hlt    
  0x0000000002c6555a: hlt    
  0x0000000002c6555b: hlt    
  0x0000000002c6555c: hlt    
  0x0000000002c6555d: hlt    
  0x0000000002c6555e: hlt    
  0x0000000002c6555f: hlt    
[Stub Code]
  0x0000000002c65560: nop                       ;   {no_reloc}
  0x0000000002c65561: nop
  0x0000000002c65562: nop
  0x0000000002c65563: nop
  0x0000000002c65564: nop
  0x0000000002c65565: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6556f: jmpq   0x0000000002c6556f  ;   {runtime_call}
  0x0000000002c65574: nop
  0x0000000002c65575: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6557f: jmpq   0x0000000002c6557f  ;   {runtime_call}
  0x0000000002c65584: nop
  0x0000000002c65585: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6558f: jmpq   0x0000000002c6558f  ;   {runtime_call}
  0x0000000002c65594: nop
  0x0000000002c65595: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6559f: jmpq   0x0000000002c6559f  ;   {runtime_call}
  0x0000000002c655a4: nop
  0x0000000002c655a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c655af: jmpq   0x0000000002c655af  ;   {runtime_call}
  0x0000000002c655b4: nop
  0x0000000002c655b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c655bf: jmpq   0x0000000002c655bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002c655c4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c655c9: mov    %rsp,-0x28(%rsp)
  0x0000000002c655ce: sub    $0x80,%rsp
  0x0000000002c655d5: mov    %rax,0x78(%rsp)
  0x0000000002c655da: mov    %rcx,0x70(%rsp)
  0x0000000002c655df: mov    %rdx,0x68(%rsp)
  0x0000000002c655e4: mov    %rbx,0x60(%rsp)
  0x0000000002c655e9: mov    %rbp,0x50(%rsp)
  0x0000000002c655ee: mov    %rsi,0x48(%rsp)
  0x0000000002c655f3: mov    %rdi,0x40(%rsp)
  0x0000000002c655f8: mov    %r8,0x38(%rsp)
  0x0000000002c655fd: mov    %r9,0x30(%rsp)
  0x0000000002c65602: mov    %r10,0x28(%rsp)
  0x0000000002c65607: mov    %r11,0x20(%rsp)
  0x0000000002c6560c: mov    %r12,0x18(%rsp)
  0x0000000002c65611: mov    %r13,0x10(%rsp)
  0x0000000002c65616: mov    %r14,0x8(%rsp)
  0x0000000002c6561b: mov    %r15,(%rsp)
  0x0000000002c6561f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c65629: movabs $0x2c655c9,%rdx    ;   {internal_word}
  0x0000000002c65633: mov    %rsp,%r8
  0x0000000002c65636: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6563a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6563f: hlt    
[Deopt Handler Code]
  0x0000000002c65640: movabs $0x2c65640,%r10    ;   {section_word}
  0x0000000002c6564a: push   %r10
  0x0000000002c6564c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c65651: hlt    
  0x0000000002c65652: hlt    
  0x0000000002c65653: hlt    
  0x0000000002c65654: hlt    
  0x0000000002c65655: hlt    
  0x0000000002c65656: hlt    
  0x0000000002c65657: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x0000000002c64b20' size='4856' address='0x0000000002c64910' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='563' iicount='563' stamp='6.713'/>
<writer thread='21536'/>
<task_queued compile_id='36' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='101' backedge_count='2048' iicount='101' level='3' stamp='6.713' comment='tiered' hot_count='101'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c61e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedReader&apos;
  # parm0:    r8        = boolean
  #           [sp+0xf0]  (sp of caller)
  0x0000000002c620a0: mov    0x8(%rdx),%r10d
  0x0000000002c620a4: shl    $0x3,%r10
  0x0000000002c620a8: cmp    %rax,%r10
  0x0000000002c620ab: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c620b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c620bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c620c0: mov    %eax,-0x6000(%rsp)
  0x0000000002c620c7: push   %rbp
  0x0000000002c620c8: sub    $0xe0,%rsp
  0x0000000002c620cf: mov    %rdx,0x70(%rsp)
  0x0000000002c620d4: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c620de: mov    0xdc(%rax),%esi
  0x0000000002c620e4: add    $0x8,%esi
  0x0000000002c620e7: mov    %esi,0xdc(%rax)
  0x0000000002c620ed: movabs $0x1bd15758,%rax   ;   {metadata({method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c620f7: and    $0x1ff8,%esi
  0x0000000002c620fd: cmp    $0x0,%esi
  0x0000000002c62100: je     0x0000000002c633f2  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x0000000002c62106: mov    0xc(%rdx),%esi
  0x0000000002c62109: shl    $0x3,%rsi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x0000000002c6210d: mov    %rsi,0x88(%rsp)
  0x0000000002c62115: lea    0xb0(%rsp),%rdi
  0x0000000002c6211d: mov    %rsi,0x8(%rdi)
  0x0000000002c62121: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002c63409
  0x0000000002c62124: mov    %rax,%rbx
  0x0000000002c62127: and    $0x7,%rbx
  0x0000000002c6212b: cmp    $0x5,%rbx
  0x0000000002c6212f: jne    0x0000000002c621b6
  0x0000000002c62135: mov    0x8(%rsi),%ebx
  0x0000000002c62138: shl    $0x3,%rbx
  0x0000000002c6213c: mov    0xa8(%rbx),%rbx
  0x0000000002c62143: or     %r15,%rbx
  0x0000000002c62146: xor    %rax,%rbx
  0x0000000002c62149: and    $0xffffffffffffff87,%rbx
  0x0000000002c6214d: je     0x0000000002c621de
  0x0000000002c62153: test   $0x7,%rbx
  0x0000000002c6215a: jne    0x0000000002c621a3
  0x0000000002c6215c: test   $0x300,%rbx
  0x0000000002c62163: jne    0x0000000002c62182
  0x0000000002c62165: and    $0x37f,%rax
  0x0000000002c6216c: mov    %rax,%rbx
  0x0000000002c6216f: or     %r15,%rbx
  0x0000000002c62172: lock cmpxchg %rbx,(%rsi)
  0x0000000002c62177: jne    0x0000000002c6340e
  0x0000000002c6217d: jmpq   0x0000000002c621de
  0x0000000002c62182: mov    0x8(%rsi),%ebx
  0x0000000002c62185: shl    $0x3,%rbx
  0x0000000002c62189: mov    0xa8(%rbx),%rbx
  0x0000000002c62190: or     %r15,%rbx
  0x0000000002c62193: lock cmpxchg %rbx,(%rsi)
  0x0000000002c62198: jne    0x0000000002c6340e
  0x0000000002c6219e: jmpq   0x0000000002c621de
  0x0000000002c621a3: mov    0x8(%rsi),%ebx
  0x0000000002c621a6: shl    $0x3,%rbx
  0x0000000002c621aa: mov    0xa8(%rbx),%rbx
  0x0000000002c621b1: lock cmpxchg %rbx,(%rsi)
  0x0000000002c621b6: mov    (%rsi),%rax
  0x0000000002c621b9: or     $0x1,%rax
  0x0000000002c621bd: mov    %rax,(%rdi)
  0x0000000002c621c0: lock cmpxchg %rdi,(%rsi)
  0x0000000002c621c5: je     0x0000000002c621de
  0x0000000002c621cb: sub    %rsp,%rax
  0x0000000002c621ce: and    $0xfffffffffffff007,%rax
  0x0000000002c621d5: mov    %rax,(%rdi)
  0x0000000002c621d8: jne    0x0000000002c6340e  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x0000000002c621de: mov    %rdx,%rdi
  0x0000000002c621e1: movabs $0x1bdcebe8,%rbx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c621eb: addq   $0x1,0x108(%rbx)
  0x0000000002c621f3: movabs $0x1bdcf0c0,%rdi   ;   {metadata(method data for {method} {0x000000001bd15038} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c621fd: mov    0xdc(%rdi),%ebx
  0x0000000002c62203: add    $0x8,%ebx
  0x0000000002c62206: mov    %ebx,0xdc(%rdi)
  0x0000000002c6220c: movabs $0x1bd15030,%rdi   ;   {metadata({method} {0x000000001bd15038} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62216: and    $0x7ffff8,%ebx
  0x0000000002c6221c: cmp    $0x0,%ebx
  0x0000000002c6221f: je     0x0000000002c63421
  0x0000000002c62225: mov    0x28(%rdx),%edi
  0x0000000002c62228: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c6222c: cmp    $0x0,%rdi
  0x0000000002c62230: movabs $0x1bdcf0c0,%rdi   ;   {metadata(method data for {method} {0x000000001bd15038} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6223a: movabs $0x108,%rbx
  0x0000000002c62244: jne    0x0000000002c62254
  0x0000000002c6224a: movabs $0x118,%rbx
  0x0000000002c62254: mov    (%rdi,%rbx,1),%rax
  0x0000000002c62258: lea    0x1(%rax),%rax
  0x0000000002c6225c: mov    %rax,(%rdi,%rbx,1)
  0x0000000002c62260: je     0x0000000002c631f3  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c62266: cmp    $0x0,%r8d
  0x0000000002c6226a: movabs $0x1bdcebe8,%rdi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62274: movabs $0x118,%rbx
  0x0000000002c6227e: jne    0x0000000002c6228e
  0x0000000002c62284: movabs $0x128,%rbx
  0x0000000002c6228e: mov    (%rdi,%rbx,1),%rax
  0x0000000002c62292: lea    0x1(%rax),%rax
  0x0000000002c62296: mov    %rax,(%rdi,%rbx,1)
  0x0000000002c6229a: jne    0x0000000002c622dd  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x0000000002c622a0: movsbl 0x24(%rdx),%edi    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x0000000002c622a4: cmp    $0x0,%edi
  0x0000000002c622a7: movabs $0x1bdcebe8,%rdi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c622b1: movabs $0x138,%rbx
  0x0000000002c622bb: je     0x0000000002c622cb
  0x0000000002c622c1: movabs $0x148,%rbx
  0x0000000002c622cb: mov    (%rdi,%rbx,1),%rax
  0x0000000002c622cf: lea    0x1(%rax),%rax
  0x0000000002c622d3: mov    %rax,(%rdi,%rbx,1)
  0x0000000002c622d7: je     0x0000000002c622f7  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x0000000002c622dd: movabs $0x1bdcebe8,%rdi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c622e7: incl   0x158(%rdi)
  0x0000000002c622ed: mov    $0x1,%edi
  0x0000000002c622f2: jmpq   0x0000000002c622fc  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x0000000002c622f7: mov    $0x0,%edi          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x0000000002c622fc: movabs $0x0,%rbx          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x0000000002c62306: mov    %edi,0x78(%rsp)
  0x0000000002c6230a: mov    %rbx,0x80(%rsp)
  0x0000000002c62312: nopw   0x0(%rax,%rax,1)
  0x0000000002c62318: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x0000000002c6231b: mov    0x14(%rdx),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x0000000002c6231e: cmp    %ecx,%eax
  0x0000000002c62320: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6232a: movabs $0x170,%rcx
  0x0000000002c62334: jl     0x0000000002c62344
  0x0000000002c6233a: movabs $0x180,%rcx
  0x0000000002c62344: mov    (%rax,%rcx,1),%r8
  0x0000000002c62348: lea    0x1(%r8),%r8
  0x0000000002c6234c: mov    %r8,(%rax,%rcx,1)
  0x0000000002c62350: jl     0x0000000002c62381  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x0000000002c62356: mov    %rdx,%rax
  0x0000000002c62359: movabs $0x1bdcebe8,%rcx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62363: addq   $0x1,0x190(%rcx)
  0x0000000002c6236b: mov    %rdx,%rax
  0x0000000002c6236e: mov    %rax,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x0000000002c62371: nop
  0x0000000002c62372: nop
  0x0000000002c62373: nop
  0x0000000002c62374: nop
  0x0000000002c62375: nop
  0x0000000002c62376: nop
  0x0000000002c62377: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x0000000002c6237c: mov    0x70(%rsp),%rdx
  0x0000000002c62381: mov    0x18(%rdx),%esi    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x0000000002c62384: mov    0x14(%rdx),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x0000000002c62387: cmp    %edi,%esi
  0x0000000002c62389: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62393: movabs $0x1a0,%rcx
  0x0000000002c6239d: jl     0x0000000002c623ad
  0x0000000002c623a3: movabs $0x1b0,%rcx
  0x0000000002c623ad: mov    (%rax,%rcx,1),%rbx
  0x0000000002c623b1: lea    0x1(%rbx),%rbx
  0x0000000002c623b5: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c623b9: jge    0x0000000002c62e6a  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x0000000002c623bf: mov    0x78(%rsp),%ebx
  0x0000000002c623c3: cmp    $0x0,%ebx
  0x0000000002c623c6: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c623d0: movabs $0x260,%rcx
  0x0000000002c623da: je     0x0000000002c623ea
  0x0000000002c623e0: movabs $0x270,%rcx
  0x0000000002c623ea: mov    (%rax,%rcx,1),%rbx
  0x0000000002c623ee: lea    0x1(%rbx),%rbx
  0x0000000002c623f2: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c623f6: je     0x0000000002c62452  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x0000000002c623fc: mov    0x2c(%rdx),%eax
  0x0000000002c623ff: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x0000000002c62403: movslq %esi,%rcx
  0x0000000002c62406: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002c63438
  0x0000000002c62409: jae    0x0000000002c63442
  0x0000000002c6240f: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x0000000002c62414: cmp    $0xa,%eax
  0x0000000002c62417: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62421: movabs $0x280,%rcx
  0x0000000002c6242b: jne    0x0000000002c6243b
  0x0000000002c62431: movabs $0x290,%rcx
  0x0000000002c6243b: mov    (%rax,%rcx,1),%rbx
  0x0000000002c6243f: lea    0x1(%rbx),%rbx
  0x0000000002c62443: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c62447: jne    0x0000000002c62452  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x0000000002c6244d: inc    %esi
  0x0000000002c6244f: mov    %esi,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x0000000002c62452: movb   $0x0,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x0000000002c62456: mov    0x18(%rdx),%r9d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x0000000002c6245a: mov    %r9,%r8
  0x0000000002c6245d: mov    $0x0,%esi
  0x0000000002c62462: jmpq   0x0000000002c6253e  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x0000000002c62467: nop
  0x0000000002c62468: mov    0x2c(%rdx),%esi
  0x0000000002c6246b: shl    $0x3,%rsi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x0000000002c6246f: movslq %r8d,%rax
  0x0000000002c62472: cmp    0xc(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000002c6344b
  0x0000000002c62476: jae    0x0000000002c63455
  0x0000000002c6247c: movzwl 0x10(%rsi,%rax,2),%esi  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x0000000002c62481: cmp    $0xa,%esi
  0x0000000002c62484: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6248e: movabs $0x2c0,%rcx
  0x0000000002c62498: je     0x0000000002c624a8
  0x0000000002c6249e: movabs $0x2d0,%rcx
  0x0000000002c624a8: mov    (%rax,%rcx,1),%rbx
  0x0000000002c624ac: lea    0x1(%rbx),%rbx
  0x0000000002c624b0: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c624b4: je     0x0000000002c62581  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x0000000002c624ba: cmp    $0xd,%esi
  0x0000000002c624bd: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c624c7: movabs $0x2e0,%rcx
  0x0000000002c624d1: jne    0x0000000002c624e1
  0x0000000002c624d7: movabs $0x2f0,%rcx
  0x0000000002c624e1: mov    (%rax,%rcx,1),%rbx
  0x0000000002c624e5: lea    0x1(%rbx),%rbx
  0x0000000002c624e9: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c624ed: je     0x0000000002c62581  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x0000000002c624f3: inc    %r8d
  0x0000000002c624f6: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62500: mov    0xe0(%rax),%ecx
  0x0000000002c62506: add    $0x8,%ecx
  0x0000000002c62509: mov    %ecx,0xe0(%rax)
  0x0000000002c6250f: movabs $0x1bd15758,%rax   ;   {metadata({method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62519: and    $0xfff8,%ecx
  0x0000000002c6251f: cmp    $0x0,%ecx
  0x0000000002c62522: je     0x0000000002c6345e  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002c62528: test   %eax,-0x1e4242e(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6252e: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62538: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002c6253e: cmp    %edi,%r8d
  0x0000000002c62541: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6254b: movabs $0x2a0,%rcx
  0x0000000002c62555: jge    0x0000000002c62565
  0x0000000002c6255b: movabs $0x2b0,%rcx
  0x0000000002c62565: mov    (%rax,%rcx,1),%rbx
  0x0000000002c62569: lea    0x1(%rbx),%rbx
  0x0000000002c6256d: mov    %rbx,(%rax,%rcx,1)
  0x0000000002c62571: jl     0x0000000002c62468  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x0000000002c62577: mov    $0x0,%edi
  0x0000000002c6257c: jmpq   0x0000000002c62596  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x0000000002c62581: movabs $0x1bdcebe8,%rdi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6258b: incl   0x300(%rdi)
  0x0000000002c62591: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x0000000002c62596: mov    %r8d,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x0000000002c6259a: cmp    $0x0,%edi
  0x0000000002c6259d: movabs $0x1bdcebe8,%rdi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c625a7: movabs $0x330,%rax
  0x0000000002c625b1: je     0x0000000002c625c1
  0x0000000002c625b7: movabs $0x340,%rax
  0x0000000002c625c1: mov    (%rdi,%rax,1),%rcx
  0x0000000002c625c5: lea    0x1(%rcx),%rcx
  0x0000000002c625c9: mov    %rcx,(%rdi,%rax,1)
  0x0000000002c625cd: jne    0x0000000002c62a66  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x0000000002c625d3: mov    0x80(%rsp),%rbx
  0x0000000002c625db: cmp    $0x0,%rbx
  0x0000000002c625df: movabs $0x1bdcebe8,%rsi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c625e9: movabs $0x418,%rdi
  0x0000000002c625f3: jne    0x0000000002c62603
  0x0000000002c625f9: movabs $0x428,%rdi
  0x0000000002c62603: mov    (%rsi,%rdi,1),%rax
  0x0000000002c62607: lea    0x1(%rax),%rax
  0x0000000002c6260b: mov    %rax,(%rsi,%rdi,1)
  0x0000000002c6260f: mov    %rdx,%r11
  0x0000000002c62612: jne    0x0000000002c627d8  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x0000000002c62618: movabs $0x7c000d608,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62622: mov    0x60(%r15),%rax
  0x0000000002c62626: lea    0x18(%rax),%rdi
  0x0000000002c6262a: cmp    0x70(%r15),%rdi
  0x0000000002c6262e: ja     0x0000000002c63475
  0x0000000002c62634: mov    %rdi,0x60(%r15)
  0x0000000002c62638: mov    0xa8(%rdx),%rcx
  0x0000000002c6263f: mov    %rcx,(%rax)
  0x0000000002c62642: mov    %rdx,%rcx
  0x0000000002c62645: shr    $0x3,%rcx
  0x0000000002c62649: mov    %ecx,0x8(%rax)
  0x0000000002c6264c: xor    %rcx,%rcx
  0x0000000002c6264f: mov    %ecx,0xc(%rax)
  0x0000000002c62652: xor    %rcx,%rcx
  0x0000000002c62655: mov    %rcx,0x10(%rax)
  0x0000000002c62659: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x0000000002c6265c: movabs $0x76b7a51d0,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62666: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x0000000002c62669: mov    %r13,%rdx
  0x0000000002c6266c: movabs $0x1bdcebe8,%rsi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62676: addq   $0x1,0x438(%rsi)
  0x0000000002c6267e: movabs $0x1bdcf920,%rdx   ;   {metadata(method data for {method} {0x000000001bbdf0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62688: mov    0xdc(%rdx),%esi
  0x0000000002c6268e: add    $0x8,%esi
  0x0000000002c62691: mov    %esi,0xdc(%rdx)
  0x0000000002c62697: movabs $0x1bbdf0e8,%rdx   ;   {metadata({method} {0x000000001bbdf0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c626a1: and    $0x7ffff8,%esi
  0x0000000002c626a7: cmp    $0x0,%esi
  0x0000000002c626aa: je     0x0000000002c63482
  0x0000000002c626b0: mov    %r13,%rdx
  0x0000000002c626b3: movabs $0x1bdcf920,%rsi   ;   {metadata(method data for {method} {0x000000001bbdf0f0} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c626bd: addq   $0x1,0x108(%rsi)
  0x0000000002c626c5: movabs $0x1bdce2a8,%rdx   ;   {metadata(method data for {method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c626cf: mov    0xdc(%rdx),%esi
  0x0000000002c626d5: add    $0x8,%esi
  0x0000000002c626d8: mov    %esi,0xdc(%rdx)
  0x0000000002c626de: movabs $0x1bbe3a00,%rdx   ;   {metadata({method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c626e8: and    $0x7ffff8,%esi
  0x0000000002c626ee: cmp    $0x0,%esi
  0x0000000002c626f1: je     0x0000000002c63499
  0x0000000002c626f7: mov    %r13,%rdx
  0x0000000002c626fa: movabs $0x1bdce2a8,%rsi   ;   {metadata(method data for {method} {0x000000001bbe3a08} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c62704: addq   $0x1,0x108(%rsi)
  0x0000000002c6270c: movabs $0x1bca3718,%rdx   ;   {metadata(method data for {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c62716: mov    0xdc(%rdx),%esi
  0x0000000002c6271c: add    $0x8,%esi
  0x0000000002c6271f: mov    %esi,0xdc(%rdx)
  0x0000000002c62725: movabs $0x1bb70480,%rdx   ;   {metadata({method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c6272f: and    $0x7ffff8,%esi
  0x0000000002c62735: cmp    $0x0,%esi
  0x0000000002c62738: je     0x0000000002c634b0
  0x0000000002c6273e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c62748: movslq %ebx,%rbx
  0x0000000002c6274b: mov    %rbx,%rdi
  0x0000000002c6274e: cmp    $0xffffff,%rbx
  0x0000000002c62755: ja     0x0000000002c634c7
  0x0000000002c6275b: movabs $0x17,%rsi
  0x0000000002c62765: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c62769: and    $0xfffffffffffffff8,%rsi
  0x0000000002c6276d: mov    0x60(%r15),%rax
  0x0000000002c62771: lea    (%rax,%rsi,1),%rsi
  0x0000000002c62775: cmp    0x70(%r15),%rsi
  0x0000000002c62779: ja     0x0000000002c634c7
  0x0000000002c6277f: mov    %rsi,0x60(%r15)
  0x0000000002c62783: sub    %rax,%rsi
  0x0000000002c62786: movq   $0x1,(%rax)
  0x0000000002c6278d: mov    %rdx,%rcx
  0x0000000002c62790: shr    $0x3,%rcx
  0x0000000002c62794: mov    %ecx,0x8(%rax)
  0x0000000002c62797: mov    %ebx,0xc(%rax)
  0x0000000002c6279a: sub    $0x10,%rsi
  0x0000000002c6279e: je     0x0000000002c627b5
  0x0000000002c627a4: xor    %rbx,%rbx
  0x0000000002c627a7: shr    $0x3,%rsi
  0x0000000002c627ab: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c627b0: dec    %rsi
  0x0000000002c627b3: jne    0x0000000002c627ab  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002c627b5: mov    %rax,%r10
  0x0000000002c627b8: shr    $0x3,%r10
  0x0000000002c627bc: mov    %r10d,0x10(%r13)
  0x0000000002c627c0: mov    %r13,%rax
  0x0000000002c627c3: shr    $0x9,%rax
  0x0000000002c627c7: movabs $0xe8fe000,%rdi
  0x0000000002c627d1: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002c627d5: mov    %r13,%rbx          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x0000000002c627d8: mov    0x2c(%r11),%edi
  0x0000000002c627dc: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x0000000002c627e0: cmp    (%rbx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x0000000002c634d1
  0x0000000002c627e3: mov    %rbx,%rax
  0x0000000002c627e6: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c627f0: mov    0x8(%rax),%eax
  0x0000000002c627f3: shl    $0x3,%rax
  0x0000000002c627f7: cmp    0x450(%rdx),%rax
  0x0000000002c627fe: jne    0x0000000002c6280d
  0x0000000002c62800: addq   $0x1,0x458(%rdx)
  0x0000000002c62808: jmpq   0x0000000002c62873
  0x0000000002c6280d: cmp    0x460(%rdx),%rax
  0x0000000002c62814: jne    0x0000000002c62823
  0x0000000002c62816: addq   $0x1,0x468(%rdx)
  0x0000000002c6281e: jmpq   0x0000000002c62873
  0x0000000002c62823: cmpq   $0x0,0x450(%rdx)
  0x0000000002c6282e: jne    0x0000000002c62847
  0x0000000002c62830: mov    %rax,0x450(%rdx)
  0x0000000002c62837: movq   $0x1,0x458(%rdx)
  0x0000000002c62842: jmpq   0x0000000002c62873
  0x0000000002c62847: cmpq   $0x0,0x460(%rdx)
  0x0000000002c62852: jne    0x0000000002c6286b
  0x0000000002c62854: mov    %rax,0x460(%rdx)
  0x0000000002c6285b: movq   $0x1,0x468(%rdx)
  0x0000000002c62866: jmpq   0x0000000002c62873
  0x0000000002c6286b: addq   $0x1,0x448(%rdx)
  0x0000000002c62873: mov    %r8,%rdx
  0x0000000002c62876: sub    %r9d,%edx
  0x0000000002c62879: lea    0xc0(%rsp),%r8
  0x0000000002c62881: mov    %rbx,0x8(%r8)
  0x0000000002c62885: mov    (%rbx),%rax
  0x0000000002c62888: mov    %rax,%rsi
  0x0000000002c6288b: and    $0x7,%rsi
  0x0000000002c6288f: cmp    $0x5,%rsi
  0x0000000002c62893: jne    0x0000000002c6291a
  0x0000000002c62899: mov    0x8(%rbx),%esi
  0x0000000002c6289c: shl    $0x3,%rsi
  0x0000000002c628a0: mov    0xa8(%rsi),%rsi
  0x0000000002c628a7: or     %r15,%rsi
  0x0000000002c628aa: xor    %rax,%rsi
  0x0000000002c628ad: and    $0xffffffffffffff87,%rsi
  0x0000000002c628b1: je     0x0000000002c62942
  0x0000000002c628b7: test   $0x7,%rsi
  0x0000000002c628be: jne    0x0000000002c62907
  0x0000000002c628c0: test   $0x300,%rsi
  0x0000000002c628c7: jne    0x0000000002c628e6
  0x0000000002c628c9: and    $0x37f,%rax
  0x0000000002c628d0: mov    %rax,%rsi
  0x0000000002c628d3: or     %r15,%rsi
  0x0000000002c628d6: lock cmpxchg %rsi,(%rbx)
  0x0000000002c628db: jne    0x0000000002c634d6
  0x0000000002c628e1: jmpq   0x0000000002c62942
  0x0000000002c628e6: mov    0x8(%rbx),%esi
  0x0000000002c628e9: shl    $0x3,%rsi
  0x0000000002c628ed: mov    0xa8(%rsi),%rsi
  0x0000000002c628f4: or     %r15,%rsi
  0x0000000002c628f7: lock cmpxchg %rsi,(%rbx)
  0x0000000002c628fc: jne    0x0000000002c634d6
  0x0000000002c62902: jmpq   0x0000000002c62942
  0x0000000002c62907: mov    0x8(%rbx),%esi
  0x0000000002c6290a: shl    $0x3,%rsi
  0x0000000002c6290e: mov    0xa8(%rsi),%rsi
  0x0000000002c62915: lock cmpxchg %rsi,(%rbx)
  0x0000000002c6291a: mov    (%rbx),%rax
  0x0000000002c6291d: or     $0x1,%rax
  0x0000000002c62921: mov    %rax,(%r8)
  0x0000000002c62924: lock cmpxchg %r8,(%rbx)
  0x0000000002c62929: je     0x0000000002c62942
  0x0000000002c6292f: sub    %rsp,%rax
  0x0000000002c62932: and    $0xfffffffffffff007,%rax
  0x0000000002c62939: mov    %rax,(%r8)
  0x0000000002c6293c: jne    0x0000000002c634d6  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c62942: movabs $0x1bdcf638,%r8    ;   {metadata(method data for {method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c6294c: mov    0xdc(%r8),%esi
  0x0000000002c62953: add    $0x8,%esi
  0x0000000002c62956: mov    %esi,0xdc(%r8)
  0x0000000002c6295d: movabs $0x1bbdfe98,%r8    ;   {metadata({method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62967: and    $0x7ffff8,%esi
  0x0000000002c6296d: cmp    $0x0,%esi
  0x0000000002c62970: je     0x0000000002c634e9
  0x0000000002c62976: movl   $0x0,0x14(%rbx)
  0x0000000002c6297d: mov    %rbx,%r8
  0x0000000002c62980: shr    $0x9,%r8
  0x0000000002c62984: movabs $0xe8fe000,%rsi
  0x0000000002c6298e: movb   $0x0,(%r8,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c62993: mov    %rbx,%r8
  0x0000000002c62996: movabs $0x1bdcf638,%rsi   ;   {metadata(method data for {method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c629a0: addq   $0x1,0x108(%rsi)
  0x0000000002c629a8: mov    %rdi,%r8
  0x0000000002c629ab: mov    %rdx,%rdi
  0x0000000002c629ae: mov    %rbx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c629b1: mov    %rbx,0x90(%rsp)
  0x0000000002c629b9: nop
  0x0000000002c629ba: nop
  0x0000000002c629bb: nop
  0x0000000002c629bc: nop
  0x0000000002c629bd: nop
  0x0000000002c629be: nop
  0x0000000002c629bf: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop [200]=Oop off=2340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x0000000002c629c4: lea    0xc0(%rsp),%rax
  0x0000000002c629cc: mov    0x8(%rax),%rsi
  0x0000000002c629d0: mov    (%rsi),%rdx
  0x0000000002c629d3: and    $0x7,%rdx
  0x0000000002c629d7: cmp    $0x5,%rdx
  0x0000000002c629db: je     0x0000000002c629f8
  0x0000000002c629e1: mov    (%rax),%rdx
  0x0000000002c629e4: test   %rdx,%rdx
  0x0000000002c629e7: je     0x0000000002c629f8
  0x0000000002c629ed: lock cmpxchg %rdx,(%rsi)
  0x0000000002c629f2: jne    0x0000000002c63500  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c629f8: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62a02: mov    0xe0(%rdx),%esi
  0x0000000002c62a08: add    $0x8,%esi
  0x0000000002c62a0b: mov    %esi,0xe0(%rdx)
  0x0000000002c62a11: movabs $0x1bd15758,%rdx   ;   {metadata({method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62a1b: and    $0xfff8,%esi
  0x0000000002c62a21: cmp    $0x0,%esi
  0x0000000002c62a24: je     0x0000000002c63516  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=2442}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002c62a2a: test   %eax,-0x1e42930(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c62a30: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62a3a: incl   0x478(%rdx)
  0x0000000002c62a40: mov    0x90(%rsp),%rbx
  0x0000000002c62a48: mov    %rbx,%rcx
  0x0000000002c62a4b: mov    $0x0,%ebx
  0x0000000002c62a50: mov    %ebx,0x78(%rsp)
  0x0000000002c62a54: mov    %rcx,0x80(%rsp)
  0x0000000002c62a5c: mov    0x70(%rsp),%rdx
  0x0000000002c62a61: jmpq   0x0000000002c62318  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002c62a66: mov    0x80(%rsp),%rcx
  0x0000000002c62a6e: cmp    $0x0,%rcx
  0x0000000002c62a72: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62a7c: movabs $0x350,%rdi
  0x0000000002c62a86: jne    0x0000000002c62a96
  0x0000000002c62a8c: movabs $0x360,%rdi
  0x0000000002c62a96: mov    (%rdx,%rdi,1),%rax
  0x0000000002c62a9a: lea    0x1(%rax),%rax
  0x0000000002c62a9e: mov    %rax,(%rdx,%rdi,1)
  0x0000000002c62aa2: mov    %esi,0x7c(%rsp)
  0x0000000002c62aa6: mov    0x70(%rsp),%rdx
  0x0000000002c62aab: jne    0x0000000002c62b51  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x0000000002c62ab1: mov    %rdx,%rbx
  0x0000000002c62ab4: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c62abe: mov    0x60(%r15),%rax
  0x0000000002c62ac2: lea    0x18(%rax),%rdi
  0x0000000002c62ac6: cmp    0x70(%r15),%rdi
  0x0000000002c62aca: ja     0x0000000002c6352d
  0x0000000002c62ad0: mov    %rdi,0x60(%r15)
  0x0000000002c62ad4: mov    0xa8(%rdx),%rcx
  0x0000000002c62adb: mov    %rcx,(%rax)
  0x0000000002c62ade: mov    %rdx,%rcx
  0x0000000002c62ae1: shr    $0x3,%rcx
  0x0000000002c62ae5: mov    %ecx,0x8(%rax)
  0x0000000002c62ae8: xor    %rcx,%rcx
  0x0000000002c62aeb: mov    %ecx,0xc(%rax)
  0x0000000002c62aee: xor    %rcx,%rcx
  0x0000000002c62af1: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x0000000002c62af5: mov    0x2c(%rbx),%edi
  0x0000000002c62af8: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x0000000002c62afc: mov    %rax,%rdx
  0x0000000002c62aff: movabs $0x1bdcebe8,%rsi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62b09: addq   $0x1,0x370(%rsi)
  0x0000000002c62b11: mov    %r8,%rdx
  0x0000000002c62b14: sub    %r9d,%edx
  0x0000000002c62b17: mov    %rdi,%r8
  0x0000000002c62b1a: mov    %rdx,%rdi
  0x0000000002c62b1d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x0000000002c62b20: mov    %rax,0x98(%rsp)
  0x0000000002c62b28: nop
  0x0000000002c62b29: nop
  0x0000000002c62b2a: nop
  0x0000000002c62b2b: nop
  0x0000000002c62b2c: nop
  0x0000000002c62b2d: nop
  0x0000000002c62b2e: nop
  0x0000000002c62b2f: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [152]=Oop [112]=Oop [184]=Oop off=2708}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x0000000002c62b34: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62b3e: incl   0x380(%rax)
  0x0000000002c62b44: mov    0x98(%rsp),%rsi
  0x0000000002c62b4c: jmpq   0x0000000002c62e17  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x0000000002c62b51: mov    0x2c(%rdx),%edi
  0x0000000002c62b54: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x0000000002c62b58: cmp    (%rcx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x0000000002c6353a
  0x0000000002c62b5b: mov    %rcx,%rbx
  0x0000000002c62b5e: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62b68: mov    0x8(%rbx),%ebx
  0x0000000002c62b6b: shl    $0x3,%rbx
  0x0000000002c62b6f: cmp    0x3a0(%rax),%rbx
  0x0000000002c62b76: jne    0x0000000002c62b85
  0x0000000002c62b78: addq   $0x1,0x3a8(%rax)
  0x0000000002c62b80: jmpq   0x0000000002c62beb
  0x0000000002c62b85: cmp    0x3b0(%rax),%rbx
  0x0000000002c62b8c: jne    0x0000000002c62b9b
  0x0000000002c62b8e: addq   $0x1,0x3b8(%rax)
  0x0000000002c62b96: jmpq   0x0000000002c62beb
  0x0000000002c62b9b: cmpq   $0x0,0x3a0(%rax)
  0x0000000002c62ba6: jne    0x0000000002c62bbf
  0x0000000002c62ba8: mov    %rbx,0x3a0(%rax)
  0x0000000002c62baf: movq   $0x1,0x3a8(%rax)
  0x0000000002c62bba: jmpq   0x0000000002c62beb
  0x0000000002c62bbf: cmpq   $0x0,0x3b0(%rax)
  0x0000000002c62bca: jne    0x0000000002c62be3
  0x0000000002c62bcc: mov    %rbx,0x3b0(%rax)
  0x0000000002c62bd3: movq   $0x1,0x3b8(%rax)
  0x0000000002c62bde: jmpq   0x0000000002c62beb
  0x0000000002c62be3: addq   $0x1,0x398(%rax)
  0x0000000002c62beb: mov    %r8,%rsi
  0x0000000002c62bee: sub    %r9d,%esi
  0x0000000002c62bf1: lea    0xc0(%rsp),%r8
  0x0000000002c62bf9: mov    %rcx,0x8(%r8)
  0x0000000002c62bfd: mov    (%rcx),%rax
  0x0000000002c62c00: mov    %rax,%rbx
  0x0000000002c62c03: and    $0x7,%rbx
  0x0000000002c62c07: cmp    $0x5,%rbx
  0x0000000002c62c0b: jne    0x0000000002c62c92
  0x0000000002c62c11: mov    0x8(%rcx),%ebx
  0x0000000002c62c14: shl    $0x3,%rbx
  0x0000000002c62c18: mov    0xa8(%rbx),%rbx
  0x0000000002c62c1f: or     %r15,%rbx
  0x0000000002c62c22: xor    %rax,%rbx
  0x0000000002c62c25: and    $0xffffffffffffff87,%rbx
  0x0000000002c62c29: je     0x0000000002c62cba
  0x0000000002c62c2f: test   $0x7,%rbx
  0x0000000002c62c36: jne    0x0000000002c62c7f
  0x0000000002c62c38: test   $0x300,%rbx
  0x0000000002c62c3f: jne    0x0000000002c62c5e
  0x0000000002c62c41: and    $0x37f,%rax
  0x0000000002c62c48: mov    %rax,%rbx
  0x0000000002c62c4b: or     %r15,%rbx
  0x0000000002c62c4e: lock cmpxchg %rbx,(%rcx)
  0x0000000002c62c53: jne    0x0000000002c6353f
  0x0000000002c62c59: jmpq   0x0000000002c62cba
  0x0000000002c62c5e: mov    0x8(%rcx),%ebx
  0x0000000002c62c61: shl    $0x3,%rbx
  0x0000000002c62c65: mov    0xa8(%rbx),%rbx
  0x0000000002c62c6c: or     %r15,%rbx
  0x0000000002c62c6f: lock cmpxchg %rbx,(%rcx)
  0x0000000002c62c74: jne    0x0000000002c6353f
  0x0000000002c62c7a: jmpq   0x0000000002c62cba
  0x0000000002c62c7f: mov    0x8(%rcx),%ebx
  0x0000000002c62c82: shl    $0x3,%rbx
  0x0000000002c62c86: mov    0xa8(%rbx),%rbx
  0x0000000002c62c8d: lock cmpxchg %rbx,(%rcx)
  0x0000000002c62c92: mov    (%rcx),%rax
  0x0000000002c62c95: or     $0x1,%rax
  0x0000000002c62c99: mov    %rax,(%r8)
  0x0000000002c62c9c: lock cmpxchg %r8,(%rcx)
  0x0000000002c62ca1: je     0x0000000002c62cba
  0x0000000002c62ca7: sub    %rsp,%rax
  0x0000000002c62caa: and    $0xfffffffffffff007,%rax
  0x0000000002c62cb1: mov    %rax,(%r8)
  0x0000000002c62cb4: jne    0x0000000002c6353f  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c62cba: movabs $0x1bdcf638,%r8    ;   {metadata(method data for {method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62cc4: mov    0xdc(%r8),%ebx
  0x0000000002c62ccb: add    $0x8,%ebx
  0x0000000002c62cce: mov    %ebx,0xdc(%r8)
  0x0000000002c62cd5: movabs $0x1bbdfe98,%r8    ;   {metadata({method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62cdf: and    $0x7ffff8,%ebx
  0x0000000002c62ce5: cmp    $0x0,%ebx
  0x0000000002c62ce8: je     0x0000000002c63552
  0x0000000002c62cee: movl   $0x0,0x14(%rcx)
  0x0000000002c62cf5: mov    %rcx,%rbx
  0x0000000002c62cf8: shr    $0x9,%rbx
  0x0000000002c62cfc: movabs $0xe8fe000,%r8
  0x0000000002c62d06: movb   $0x0,(%rbx,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c62d0b: mov    %rcx,%rbx
  0x0000000002c62d0e: movabs $0x1bdcf638,%r8    ;   {metadata(method data for {method} {0x000000001bbdfea0} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002c62d18: addq   $0x1,0x108(%r8)
  0x0000000002c62d20: mov    %rdi,%r8
  0x0000000002c62d23: mov    %rsi,%rdi
  0x0000000002c62d26: mov    %rcx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c62d29: mov    %rcx,0x80(%rsp)
  0x0000000002c62d31: nop
  0x0000000002c62d32: nop
  0x0000000002c62d33: nop
  0x0000000002c62d34: nop
  0x0000000002c62d35: nop
  0x0000000002c62d36: nop
  0x0000000002c62d37: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3228}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x0000000002c62d3c: lea    0xc0(%rsp),%rax
  0x0000000002c62d44: mov    0x8(%rax),%rsi
  0x0000000002c62d48: mov    (%rsi),%rdx
  0x0000000002c62d4b: and    $0x7,%rdx
  0x0000000002c62d4f: cmp    $0x5,%rdx
  0x0000000002c62d53: je     0x0000000002c62d70
  0x0000000002c62d59: mov    (%rax),%rdx
  0x0000000002c62d5c: test   %rdx,%rdx
  0x0000000002c62d5f: je     0x0000000002c62d70
  0x0000000002c62d65: lock cmpxchg %rdx,(%rsi)
  0x0000000002c62d6a: jne    0x0000000002c63569  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c62d70: mov    0x80(%rsp),%rbx
  0x0000000002c62d78: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62d82: mov    0x8(%rbx),%ebx
  0x0000000002c62d85: shl    $0x3,%rbx
  0x0000000002c62d89: cmp    0x3d0(%rdx),%rbx
  0x0000000002c62d90: jne    0x0000000002c62d9f
  0x0000000002c62d92: addq   $0x1,0x3d8(%rdx)
  0x0000000002c62d9a: jmpq   0x0000000002c62e05
  0x0000000002c62d9f: cmp    0x3e0(%rdx),%rbx
  0x0000000002c62da6: jne    0x0000000002c62db5
  0x0000000002c62da8: addq   $0x1,0x3e8(%rdx)
  0x0000000002c62db0: jmpq   0x0000000002c62e05
  0x0000000002c62db5: cmpq   $0x0,0x3d0(%rdx)
  0x0000000002c62dc0: jne    0x0000000002c62dd9
  0x0000000002c62dc2: mov    %rbx,0x3d0(%rdx)
  0x0000000002c62dc9: movq   $0x1,0x3d8(%rdx)
  0x0000000002c62dd4: jmpq   0x0000000002c62e05
  0x0000000002c62dd9: cmpq   $0x0,0x3e0(%rdx)
  0x0000000002c62de4: jne    0x0000000002c62dfd
  0x0000000002c62de6: mov    %rbx,0x3e0(%rdx)
  0x0000000002c62ded: movq   $0x1,0x3e8(%rdx)
  0x0000000002c62df8: jmpq   0x0000000002c62e05
  0x0000000002c62dfd: addq   $0x1,0x3c8(%rdx)
  0x0000000002c62e05: mov    0x80(%rsp),%rdx    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x0000000002c62e0d: nop
  0x0000000002c62e0e: nop
  0x0000000002c62e0f: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3444}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x0000000002c62e14: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x0000000002c62e17: mov    0x7c(%rsp),%edi
  0x0000000002c62e1b: mov    0x70(%rsp),%rdx
  0x0000000002c62e20: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x0000000002c62e23: inc    %eax
  0x0000000002c62e25: mov    %eax,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x0000000002c62e28: cmp    $0xd,%edi
  0x0000000002c62e2b: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62e35: movabs $0x3f8,%rdi
  0x0000000002c62e3f: jne    0x0000000002c62e4f
  0x0000000002c62e45: movabs $0x408,%rdi
  0x0000000002c62e4f: mov    (%rax,%rdi,1),%rbx
  0x0000000002c62e53: lea    0x1(%rbx),%rbx
  0x0000000002c62e57: mov    %rbx,(%rax,%rdi,1)
  0x0000000002c62e5b: jne    0x0000000002c631ad  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x0000000002c62e61: movb   $0x1,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x0000000002c62e65: jmpq   0x0000000002c631ad  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x0000000002c62e6a: mov    0x80(%rsp),%rbx
  0x0000000002c62e72: cmp    $0x0,%rbx
  0x0000000002c62e76: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62e80: movabs $0x1c0,%rdx
  0x0000000002c62e8a: je     0x0000000002c62e9a
  0x0000000002c62e90: movabs $0x1d0,%rdx
  0x0000000002c62e9a: mov    (%rax,%rdx,1),%rsi
  0x0000000002c62e9e: lea    0x1(%rsi),%rsi
  0x0000000002c62ea2: mov    %rsi,(%rax,%rdx,1)
  0x0000000002c62ea6: je     0x0000000002c63078  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x0000000002c62eac: cmp    (%rbx),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x0000000002c6357f
  0x0000000002c62eaf: mov    %rbx,%rax
  0x0000000002c62eb2: movabs $0x1bdcebe8,%rdx   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c62ebc: mov    0x8(%rax),%eax
  0x0000000002c62ebf: shl    $0x3,%rax
  0x0000000002c62ec3: cmp    0x1e8(%rdx),%rax
  0x0000000002c62eca: jne    0x0000000002c62ed9
  0x0000000002c62ecc: addq   $0x1,0x1f0(%rdx)
  0x0000000002c62ed4: jmpq   0x0000000002c62f3f
  0x0000000002c62ed9: cmp    0x1f8(%rdx),%rax
  0x0000000002c62ee0: jne    0x0000000002c62eef
  0x0000000002c62ee2: addq   $0x1,0x200(%rdx)
  0x0000000002c62eea: jmpq   0x0000000002c62f3f
  0x0000000002c62eef: cmpq   $0x0,0x1e8(%rdx)
  0x0000000002c62efa: jne    0x0000000002c62f13
  0x0000000002c62efc: mov    %rax,0x1e8(%rdx)
  0x0000000002c62f03: movq   $0x1,0x1f0(%rdx)
  0x0000000002c62f0e: jmpq   0x0000000002c62f3f
  0x0000000002c62f13: cmpq   $0x0,0x1f8(%rdx)
  0x0000000002c62f1e: jne    0x0000000002c62f37
  0x0000000002c62f20: mov    %rax,0x1f8(%rdx)
  0x0000000002c62f27: movq   $0x1,0x200(%rdx)
  0x0000000002c62f32: jmpq   0x0000000002c62f3f
  0x0000000002c62f37: addq   $0x1,0x1e0(%rdx)
  0x0000000002c62f3f: lea    0xc0(%rsp),%rdx
  0x0000000002c62f47: mov    %rbx,0x8(%rdx)
  0x0000000002c62f4b: mov    (%rbx),%rax
  0x0000000002c62f4e: mov    %rax,%rsi
  0x0000000002c62f51: and    $0x7,%rsi
  0x0000000002c62f55: cmp    $0x5,%rsi
  0x0000000002c62f59: jne    0x0000000002c62fe0
  0x0000000002c62f5f: mov    0x8(%rbx),%esi
  0x0000000002c62f62: shl    $0x3,%rsi
  0x0000000002c62f66: mov    0xa8(%rsi),%rsi
  0x0000000002c62f6d: or     %r15,%rsi
  0x0000000002c62f70: xor    %rax,%rsi
  0x0000000002c62f73: and    $0xffffffffffffff87,%rsi
  0x0000000002c62f77: je     0x0000000002c63008
  0x0000000002c62f7d: test   $0x7,%rsi
  0x0000000002c62f84: jne    0x0000000002c62fcd
  0x0000000002c62f86: test   $0x300,%rsi
  0x0000000002c62f8d: jne    0x0000000002c62fac
  0x0000000002c62f8f: and    $0x37f,%rax
  0x0000000002c62f96: mov    %rax,%rsi
  0x0000000002c62f99: or     %r15,%rsi
  0x0000000002c62f9c: lock cmpxchg %rsi,(%rbx)
  0x0000000002c62fa1: jne    0x0000000002c63584
  0x0000000002c62fa7: jmpq   0x0000000002c63008
  0x0000000002c62fac: mov    0x8(%rbx),%esi
  0x0000000002c62faf: shl    $0x3,%rsi
  0x0000000002c62fb3: mov    0xa8(%rsi),%rsi
  0x0000000002c62fba: or     %r15,%rsi
  0x0000000002c62fbd: lock cmpxchg %rsi,(%rbx)
  0x0000000002c62fc2: jne    0x0000000002c63584
  0x0000000002c62fc8: jmpq   0x0000000002c63008
  0x0000000002c62fcd: mov    0x8(%rbx),%esi
  0x0000000002c62fd0: shl    $0x3,%rsi
  0x0000000002c62fd4: mov    0xa8(%rsi),%rsi
  0x0000000002c62fdb: lock cmpxchg %rsi,(%rbx)
  0x0000000002c62fe0: mov    (%rbx),%rax
  0x0000000002c62fe3: or     $0x1,%rax
  0x0000000002c62fe7: mov    %rax,(%rdx)
  0x0000000002c62fea: lock cmpxchg %rdx,(%rbx)
  0x0000000002c62fef: je     0x0000000002c63008
  0x0000000002c62ff5: sub    %rsp,%rax
  0x0000000002c62ff8: and    $0xfffffffffffff007,%rax
  0x0000000002c62fff: mov    %rax,(%rdx)
  0x0000000002c63002: jne    0x0000000002c63584  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c63008: mov    0xc(%rbx),%edx     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c6300b: lea    0xc0(%rsp),%rax
  0x0000000002c63013: mov    0x8(%rax),%rdi
  0x0000000002c63017: mov    (%rdi),%rsi
  0x0000000002c6301a: and    $0x7,%rsi
  0x0000000002c6301e: cmp    $0x5,%rsi
  0x0000000002c63022: je     0x0000000002c6303f
  0x0000000002c63028: mov    (%rax),%rsi
  0x0000000002c6302b: test   %rsi,%rsi
  0x0000000002c6302e: je     0x0000000002c6303f
  0x0000000002c63034: lock cmpxchg %rsi,(%rdi)
  0x0000000002c63039: jne    0x0000000002c63597  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c6303f: cmp    $0x0,%edx
  0x0000000002c63042: movabs $0x1bdcebe8,%rax   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c6304c: movabs $0x210,%rdx
  0x0000000002c63056: jle    0x0000000002c63066
  0x0000000002c6305c: movabs $0x220,%rdx
  0x0000000002c63066: mov    (%rax,%rdx,1),%rsi
  0x0000000002c6306a: lea    0x1(%rsi),%rsi
  0x0000000002c6306e: mov    %rsi,(%rax,%rdx,1)
  0x0000000002c63072: jg     0x0000000002c630c5  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x0000000002c63078: lea    0xb0(%rsp),%rax
  0x0000000002c63080: mov    0x8(%rax),%rsi
  0x0000000002c63084: mov    (%rsi),%rdx
  0x0000000002c63087: and    $0x7,%rdx
  0x0000000002c6308b: cmp    $0x5,%rdx
  0x0000000002c6308f: je     0x0000000002c630ac
  0x0000000002c63095: mov    (%rax),%rdx
  0x0000000002c63098: test   %rdx,%rdx
  0x0000000002c6309b: je     0x0000000002c630ac
  0x0000000002c630a1: lock cmpxchg %rdx,(%rsi)
  0x0000000002c630a6: jne    0x0000000002c635ad  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x0000000002c630ac: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c630b6: add    $0xe0,%rsp
  0x0000000002c630bd: pop    %rbp
  0x0000000002c630be: test   %eax,-0x1e42fc4(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c630c4: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x0000000002c630c5: mov    %rbx,%rdx
  0x0000000002c630c8: movabs $0x1bdcebe8,%rsi   ;   {metadata(method data for {method} {0x000000001bd15760} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c630d2: mov    0x8(%rdx),%edx
  0x0000000002c630d5: shl    $0x3,%rdx
  0x0000000002c630d9: cmp    0x238(%rsi),%rdx
  0x0000000002c630e0: jne    0x0000000002c630ef
  0x0000000002c630e2: addq   $0x1,0x240(%rsi)
  0x0000000002c630ea: jmpq   0x0000000002c63155
  0x0000000002c630ef: cmp    0x248(%rsi),%rdx
  0x0000000002c630f6: jne    0x0000000002c63105
  0x0000000002c630f8: addq   $0x1,0x250(%rsi)
  0x0000000002c63100: jmpq   0x0000000002c63155
  0x0000000002c63105: cmpq   $0x0,0x238(%rsi)
  0x0000000002c63110: jne    0x0000000002c63129
  0x0000000002c63112: mov    %rdx,0x238(%rsi)
  0x0000000002c63119: movq   $0x1,0x240(%rsi)
  0x0000000002c63124: jmpq   0x0000000002c63155
  0x0000000002c63129: cmpq   $0x0,0x248(%rsi)
  0x0000000002c63134: jne    0x0000000002c6314d
  0x0000000002c63136: mov    %rdx,0x248(%rsi)
  0x0000000002c6313d: movq   $0x1,0x250(%rsi)
  0x0000000002c63148: jmpq   0x0000000002c63155
  0x0000000002c6314d: addq   $0x1,0x230(%rsi)
  0x0000000002c63155: mov    %rbx,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002c63158: nop
  0x0000000002c63159: nop
  0x0000000002c6315a: nop
  0x0000000002c6315b: nop
  0x0000000002c6315c: nop
  0x0000000002c6315d: nop
  0x0000000002c6315e: nop
  0x0000000002c6315f: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [184]=Oop off=4292}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x0000000002c63164: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002c63167: lea    0xb0(%rsp),%rax
  0x0000000002c6316f: mov    0x8(%rax),%rsi
  0x0000000002c63173: mov    (%rsi),%r8
  0x0000000002c63176: and    $0x7,%r8
  0x0000000002c6317a: cmp    $0x5,%r8
  0x0000000002c6317e: je     0x0000000002c6319b
  0x0000000002c63184: mov    (%rax),%r8
  0x0000000002c63187: test   %r8,%r8
  0x0000000002c6318a: je     0x0000000002c6319b
  0x0000000002c63190: lock cmpxchg %r8,(%rsi)
  0x0000000002c63195: jne    0x0000000002c635c3  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x0000000002c6319b: mov    %rdx,%rax
  0x0000000002c6319e: add    $0xe0,%rsp
  0x0000000002c631a5: pop    %rbp
  0x0000000002c631a6: test   %eax,-0x1e430ac(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c631ac: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x0000000002c631ad: lea    0xb0(%rsp),%rax
  0x0000000002c631b5: mov    0x8(%rax),%r8
  0x0000000002c631b9: mov    (%r8),%rdx
  0x0000000002c631bc: and    $0x7,%rdx
  0x0000000002c631c0: cmp    $0x5,%rdx
  0x0000000002c631c4: je     0x0000000002c631e1
  0x0000000002c631ca: mov    (%rax),%rdx
  0x0000000002c631cd: test   %rdx,%rdx
  0x0000000002c631d0: je     0x0000000002c631e1
  0x0000000002c631d6: lock cmpxchg %rdx,(%r8)
  0x0000000002c631db: jne    0x0000000002c635d9  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x0000000002c631e1: mov    %rsi,%rax
  0x0000000002c631e4: add    $0xe0,%rsp
  0x0000000002c631eb: pop    %rbp
  0x0000000002c631ec: test   %eax,-0x1e430f2(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c631f2: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x0000000002c631f3: mov    %r8d,0xa8(%rsp)
  0x0000000002c631fb: nopl   0x0(%rax,%rax,1)
  0x0000000002c63200: jmpq   0x0000000002c635fe  ;   {no_reloc}
  0x0000000002c63205: add    %al,(%rax)
  0x0000000002c63207: add    %al,(%rax)
  0x0000000002c63209: add    %ch,%cl
  0x0000000002c6320b: stc    
  0x0000000002c6320c: add    (%rax),%eax
  0x0000000002c6320e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c63211: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x000000001bd15038} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002c63214: (bad)  
  0x0000000002c63215: lock fcompl (%rbx)
  0x0000000002c63218: add    %al,(%rax)
  0x0000000002c6321a: add    %al,(%rax)
  0x0000000002c6321c: addq   $0x1,0x128(%rdi)
  0x0000000002c63224: movabs $0x76b845228,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002c6322e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c63231: mov    %rax,0xa0(%rsp)
  0x0000000002c63239: nop
  0x0000000002c6323a: nop
  0x0000000002c6323b: nop
  0x0000000002c6323c: nop
  0x0000000002c6323d: nop
  0x0000000002c6323e: nop
  0x0000000002c6323f: callq  0x0000000002b961a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x0000000002c63244: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4524}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c6324c: movabs $0x2c6324c,%rdx    ;   {section_word}
  0x0000000002c63256: callq  0x0000000002c555e0  ;   {runtime_call}
  0x0000000002c6325b: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002c6325c: mov    0x2a8(%r15),%rax
  0x0000000002c63263: xor    %r10,%r10
  0x0000000002c63266: mov    %r10,0x2a8(%r15)
  0x0000000002c6326d: xor    %r10,%r10
  0x0000000002c63270: mov    %r10,0x2b0(%r15)
  0x0000000002c63277: mov    %rax,%rdx
  0x0000000002c6327a: lea    0xc0(%rsp),%rax
  0x0000000002c63282: mov    0x8(%rax),%rdi
  0x0000000002c63286: mov    (%rdi),%rsi
  0x0000000002c63289: and    $0x7,%rsi
  0x0000000002c6328d: cmp    $0x5,%rsi
  0x0000000002c63291: je     0x0000000002c632ae
  0x0000000002c63297: mov    (%rax),%rsi
  0x0000000002c6329a: test   %rsi,%rsi
  0x0000000002c6329d: je     0x0000000002c632ae
  0x0000000002c632a3: lock cmpxchg %rsi,(%rdi)
  0x0000000002c632a8: jne    0x0000000002c63615  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c632ae: mov    %rdx,%rax          ; OopMap{rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4625}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c632b1: movabs $0x2c632b1,%rdx    ;   {section_word}
  0x0000000002c632bb: callq  0x0000000002c555e0  ;   {runtime_call}
  0x0000000002c632c0: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002c632c1: mov    0x2a8(%r15),%rax
  0x0000000002c632c8: xor    %r10,%r10
  0x0000000002c632cb: mov    %r10,0x2a8(%r15)
  0x0000000002c632d2: xor    %r10,%r10
  0x0000000002c632d5: mov    %r10,0x2b0(%r15)
  0x0000000002c632dc: mov    %rax,%rdx
  0x0000000002c632df: lea    0xc0(%rsp),%rax
  0x0000000002c632e7: mov    0x8(%rax),%rcx
  0x0000000002c632eb: mov    (%rcx),%rsi
  0x0000000002c632ee: and    $0x7,%rsi
  0x0000000002c632f2: cmp    $0x5,%rsi
  0x0000000002c632f6: je     0x0000000002c63313
  0x0000000002c632fc: mov    (%rax),%rsi
  0x0000000002c632ff: test   %rsi,%rsi
  0x0000000002c63302: je     0x0000000002c63313
  0x0000000002c63308: lock cmpxchg %rsi,(%rcx)
  0x0000000002c6330d: jne    0x0000000002c6362b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c63313: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rbx=Oop [184]=Oop rax=Oop off=4726}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c63316: movabs $0x2c63316,%rdx    ;   {section_word}
  0x0000000002c63320: callq  0x0000000002c555e0  ;   {runtime_call}
  0x0000000002c63325: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002c63326: mov    0x88(%rsp),%rdi
  0x0000000002c6332e: mov    0x70(%rsp),%rsi
  0x0000000002c63333: mov    0x2a8(%r15),%rax
  0x0000000002c6333a: xor    %r10,%r10
  0x0000000002c6333d: mov    %r10,0x2a8(%r15)
  0x0000000002c63344: xor    %r10,%r10
  0x0000000002c63347: mov    %r10,0x2b0(%r15)
  0x0000000002c6334e: mov    %rax,%rdx
  0x0000000002c63351: lea    0xc0(%rsp),%rax
  0x0000000002c63359: mov    0x8(%rax),%r8
  0x0000000002c6335d: mov    (%r8),%rcx
  0x0000000002c63360: and    $0x7,%rcx
  0x0000000002c63364: cmp    $0x5,%rcx
  0x0000000002c63368: je     0x0000000002c63385
  0x0000000002c6336e: mov    (%rax),%rcx
  0x0000000002c63371: test   %rcx,%rcx
  0x0000000002c63374: je     0x0000000002c63385
  0x0000000002c6337a: lock cmpxchg %rcx,(%r8)
  0x0000000002c6337f: jne    0x0000000002c63641  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c63385: mov    %rdx,%rax          ; OopMap{rbx=Oop rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop rax=Oop off=4840}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c63388: movabs $0x2c63388,%rdx    ;   {section_word}
  0x0000000002c63392: callq  0x0000000002c555e0  ;   {runtime_call}
  0x0000000002c63397: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002c63398: mov    0x2a8(%r15),%rax
  0x0000000002c6339f: xor    %r10,%r10
  0x0000000002c633a2: mov    %r10,0x2a8(%r15)
  0x0000000002c633a9: xor    %r10,%r10
  0x0000000002c633ac: mov    %r10,0x2b0(%r15)
  0x0000000002c633b3: mov    %rax,%rsi
  0x0000000002c633b6: lea    0xb0(%rsp),%rax
  0x0000000002c633be: mov    0x8(%rax),%rbx
  0x0000000002c633c2: mov    (%rbx),%rdi
  0x0000000002c633c5: and    $0x7,%rdi
  0x0000000002c633c9: cmp    $0x5,%rdi
  0x0000000002c633cd: je     0x0000000002c633ea
  0x0000000002c633d3: mov    (%rax),%rdi
  0x0000000002c633d6: test   %rdi,%rdi
  0x0000000002c633d9: je     0x0000000002c633ea
  0x0000000002c633df: lock cmpxchg %rdi,(%rbx)
  0x0000000002c633e4: jne    0x0000000002c63657  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x0000000002c633ea: mov    %rsi,%rax
  0x0000000002c633ed: jmpq   0x0000000002c636b6
  0x0000000002c633f2: mov    %rax,0x8(%rsp)
  0x0000000002c633f7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c633ff: callq  0x0000000002c58220  ; OopMap{rdx=Oop [112]=Oop off=4964}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x0000000002c63404: jmpq   0x0000000002c62106
  0x0000000002c63409: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop off=4974}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002c6340e: mov    %rsi,0x8(%rsp)
  0x0000000002c63413: mov    %rdi,(%rsp)
  0x0000000002c63417: callq  0x0000000002c56520  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=4988}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002c6341c: jmpq   0x0000000002c621de
  0x0000000002c63421: mov    %rdi,0x8(%rsp)
  0x0000000002c63426: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6342e: callq  0x0000000002c58220  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=5011}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002c63433: jmpq   0x0000000002c62225
  0x0000000002c63438: callq  0x0000000002c539c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5021}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002c6343d: callq  0x0000000002c539c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5026}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002c63442: mov    %rsi,(%rsp)
  0x0000000002c63446: callq  0x0000000002c53300  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5035}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002c6344b: callq  0x0000000002c539c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5040}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002c63450: callq  0x0000000002c539c0  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5045}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002c63455: mov    %r8,(%rsp)
  0x0000000002c63459: callq  0x0000000002c53300  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5054}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002c6345e: mov    %rax,0x8(%rsp)
  0x0000000002c63463: movq   $0xac,(%rsp)
  0x0000000002c6346b: callq  0x0000000002c58220  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=5072}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x0000000002c63470: jmpq   0x0000000002c62528
  0x0000000002c63475: mov    %rdx,%rdx
  0x0000000002c63478: callq  0x0000000002c54140  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5085}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x0000000002c6347d: jmpq   0x0000000002c62659
  0x0000000002c63482: mov    %rdx,0x8(%rsp)
  0x0000000002c63487: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6348f: callq  0x0000000002c58220  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002c63494: jmpq   0x0000000002c626b0
  0x0000000002c63499: mov    %rdx,0x8(%rsp)
  0x0000000002c6349e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c634a6: callq  0x0000000002c58220  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5131}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002c634ab: jmpq   0x0000000002c626f7
  0x0000000002c634b0: mov    %rdx,0x8(%rsp)
  0x0000000002c634b5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c634bd: callq  0x0000000002c58220  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5154}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002c634c2: jmpq   0x0000000002c6273e
  0x0000000002c634c7: callq  0x0000000002c54a40  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5164}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002c634cc: jmpq   0x0000000002c627b5
  0x0000000002c634d1: callq  0x0000000002c539c0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop off=5174}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002c634d6: mov    %rbx,0x8(%rsp)
  0x0000000002c634db: mov    %r8,(%rsp)
  0x0000000002c634df: callq  0x0000000002c56520  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5188}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002c634e4: jmpq   0x0000000002c62942
  0x0000000002c634e9: mov    %r8,0x8(%rsp)
  0x0000000002c634ee: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c634f6: callq  0x0000000002c58220  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5211}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002c634fb: jmpq   0x0000000002c62976
  0x0000000002c63500: lea    0xc0(%rsp),%rax
  0x0000000002c63508: mov    %rax,(%rsp)
  0x0000000002c6350c: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c63511: jmpq   0x0000000002c629f8
  0x0000000002c63516: mov    %rdx,0x8(%rsp)
  0x0000000002c6351b: movq   $0x125,(%rsp)
  0x0000000002c63523: callq  0x0000000002c58220  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=5256}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x0000000002c63528: jmpq   0x0000000002c62a2a
  0x0000000002c6352d: mov    %rdx,%rdx
  0x0000000002c63530: callq  0x0000000002c54140  ; OopMap{[136]=Oop rbx=Oop [112]=Oop [184]=Oop off=5269}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x0000000002c63535: jmpq   0x0000000002c62af5
  0x0000000002c6353a: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop off=5279}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002c6353f: mov    %rcx,0x8(%rsp)
  0x0000000002c63544: mov    %r8,(%rsp)
  0x0000000002c63548: callq  0x0000000002c56520  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5293}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002c6354d: jmpq   0x0000000002c62cba
  0x0000000002c63552: mov    %r8,0x8(%rsp)
  0x0000000002c63557: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6355f: callq  0x0000000002c58220  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5316}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002c63564: jmpq   0x0000000002c62cee
  0x0000000002c63569: lea    0xc0(%rsp),%rax
  0x0000000002c63571: mov    %rax,(%rsp)
  0x0000000002c63575: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c6357a: jmpq   0x0000000002c62d70
  0x0000000002c6357f: callq  0x0000000002c539c0  ; OopMap{[136]=Oop rbx=Oop [184]=Oop off=5348}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002c63584: mov    %rbx,0x8(%rsp)
  0x0000000002c63589: mov    %rdx,(%rsp)
  0x0000000002c6358d: callq  0x0000000002c56520  ; OopMap{[136]=Oop rbx=Oop [184]=Oop [200]=Oop off=5362}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002c63592: jmpq   0x0000000002c63008
  0x0000000002c63597: lea    0xc0(%rsp),%rax
  0x0000000002c6359f: mov    %rax,(%rsp)
  0x0000000002c635a3: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c635a8: jmpq   0x0000000002c6303f
  0x0000000002c635ad: lea    0xb0(%rsp),%rax
  0x0000000002c635b5: mov    %rax,(%rsp)
  0x0000000002c635b9: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c635be: jmpq   0x0000000002c630ac
  0x0000000002c635c3: lea    0xb0(%rsp),%rax
  0x0000000002c635cb: mov    %rax,(%rsp)
  0x0000000002c635cf: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c635d4: jmpq   0x0000000002c6319b
  0x0000000002c635d9: lea    0xb0(%rsp),%rax
  0x0000000002c635e1: mov    %rax,(%rsp)
  0x0000000002c635e5: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c635ea: jmpq   0x0000000002c631e1
  0x0000000002c635ef: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c635f9: mov    $0xa050f00,%eax
  0x0000000002c635fe: callq  0x0000000002c57160  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5475}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002c63603: jmpq   0x0000000002c63200
  0x0000000002c63608: mov    %rdx,%rdx
  0x0000000002c6360b: callq  0x0000000002c53e60  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5488}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002c63610: jmpq   0x0000000002c6320f
  0x0000000002c63615: lea    0xc0(%rsp),%rax
  0x0000000002c6361d: mov    %rax,(%rsp)
  0x0000000002c63621: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c63626: jmpq   0x0000000002c632ae
  0x0000000002c6362b: lea    0xc0(%rsp),%rax
  0x0000000002c63633: mov    %rax,(%rsp)
  0x0000000002c63637: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c6363c: jmpq   0x0000000002c63313
  0x0000000002c63641: lea    0xc0(%rsp),%rax
  0x0000000002c63649: mov    %rax,(%rsp)
  0x0000000002c6364d: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c63652: jmpq   0x0000000002c63385
  0x0000000002c63657: lea    0xb0(%rsp),%rax
  0x0000000002c6365f: mov    %rax,(%rsp)
  0x0000000002c63663: callq  0x0000000002c56920  ;   {runtime_call}
  0x0000000002c63668: jmpq   0x0000000002c633ea
  0x0000000002c6366d: mov    0x90(%rsp),%rbx
  0x0000000002c63675: jmpq   0x0000000002c63326
  0x0000000002c6367a: mov    0x7c(%rsp),%edi
  0x0000000002c6367e: mov    0x80(%rsp),%rbx
  0x0000000002c63686: jmpq   0x0000000002c632c1
  0x0000000002c6368b: nop
  0x0000000002c6368c: nop
  0x0000000002c6368d: mov    0x2a8(%r15),%rax
  0x0000000002c63694: movabs $0x0,%r10
  0x0000000002c6369e: mov    %r10,0x2a8(%r15)
  0x0000000002c636a5: movabs $0x0,%r10
  0x0000000002c636af: mov    %r10,0x2b0(%r15)
  0x0000000002c636b6: add    $0xe0,%rsp
  0x0000000002c636bd: pop    %rbp
  0x0000000002c636be: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c636c3: hlt    
  0x0000000002c636c4: hlt    
  0x0000000002c636c5: hlt    
  0x0000000002c636c6: hlt    
  0x0000000002c636c7: hlt    
  0x0000000002c636c8: hlt    
  0x0000000002c636c9: hlt    
  0x0000000002c636ca: hlt    
  0x0000000002c636cb: hlt    
  0x0000000002c636cc: hlt    
  0x0000000002c636cd: hlt    
  0x0000000002c636ce: hlt    
  0x0000000002c636cf: hlt    
  0x0000000002c636d0: hlt    
  0x0000000002c636d1: hlt    
  0x0000000002c636d2: hlt    
  0x0000000002c636d3: hlt    
  0x0000000002c636d4: hlt    
  0x0000000002c636d5: hlt    
  0x0000000002c636d6: hlt    
  0x0000000002c636d7: hlt    
  0x0000000002c636d8: hlt    
  0x0000000002c636d9: hlt    
  0x0000000002c636da: hlt    
  0x0000000002c636db: hlt    
  0x0000000002c636dc: hlt    
  0x0000000002c636dd: hlt    
  0x0000000002c636de: hlt    
  0x0000000002c636df: hlt    
[Stub Code]
  0x0000000002c636e0: nop                       ;   {no_reloc}
  0x0000000002c636e1: nop
  0x0000000002c636e2: nop
  0x0000000002c636e3: nop
  0x0000000002c636e4: nop
  0x0000000002c636e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c636ef: jmpq   0x0000000002c636ef  ;   {runtime_call}
  0x0000000002c636f4: nop
  0x0000000002c636f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c636ff: jmpq   0x0000000002c636ff  ;   {runtime_call}
  0x0000000002c63704: nop
  0x0000000002c63705: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6370f: jmpq   0x0000000002c6370f  ;   {runtime_call}
  0x0000000002c63714: nop
  0x0000000002c63715: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6371f: jmpq   0x0000000002c6371f  ;   {runtime_call}
  0x0000000002c63724: nop
  0x0000000002c63725: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6372f: jmpq   0x0000000002c6372f  ;   {runtime_call}
  0x0000000002c63734: nop
  0x0000000002c63735: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6373f: jmpq   0x0000000002c6373f  ;   {runtime_call}
  0x0000000002c63744: nop
  0x0000000002c63745: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6374f: jmpq   0x0000000002c6374f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c63754: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c63759: mov    %rsp,-0x28(%rsp)
  0x0000000002c6375e: sub    $0x80,%rsp
  0x0000000002c63765: mov    %rax,0x78(%rsp)
  0x0000000002c6376a: mov    %rcx,0x70(%rsp)
  0x0000000002c6376f: mov    %rdx,0x68(%rsp)
  0x0000000002c63774: mov    %rbx,0x60(%rsp)
  0x0000000002c63779: mov    %rbp,0x50(%rsp)
  0x0000000002c6377e: mov    %rsi,0x48(%rsp)
  0x0000000002c63783: mov    %rdi,0x40(%rsp)
  0x0000000002c63788: mov    %r8,0x38(%rsp)
  0x0000000002c6378d: mov    %r9,0x30(%rsp)
  0x0000000002c63792: mov    %r10,0x28(%rsp)
  0x0000000002c63797: mov    %r11,0x20(%rsp)
  0x0000000002c6379c: mov    %r12,0x18(%rsp)
  0x0000000002c637a1: mov    %r13,0x10(%rsp)
  0x0000000002c637a6: mov    %r14,0x8(%rsp)
  0x0000000002c637ab: mov    %r15,(%rsp)
  0x0000000002c637af: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c637b9: movabs $0x2c63759,%rdx    ;   {internal_word}
  0x0000000002c637c3: mov    %rsp,%r8
  0x0000000002c637c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c637ca: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c637cf: hlt    
[Deopt Handler Code]
  0x0000000002c637d0: movabs $0x2c637d0,%r10    ;   {section_word}
  0x0000000002c637da: push   %r10
  0x0000000002c637dc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c637e1: hlt    
  0x0000000002c637e2: hlt    
  0x0000000002c637e3: hlt    
  0x0000000002c637e4: hlt    
  0x0000000002c637e5: hlt    
  0x0000000002c637e6: hlt    
  0x0000000002c637e7: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x0000000002c620a0' size='10976' address='0x0000000002c61e10' relocation_offset='288' insts_offset='656' stub_offset='6352' scopes_data_offset='6680' scopes_pcs_offset='8152' dependencies_offset='10296' handler_table_offset='10304' nul_chk_table_offset='10904' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='163' backedge_count='3267' iicount='163' stamp='9.376'/>
<writer thread='21536'/>
<task_queued compile_id='37' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='613' iicount='613' level='3' stamp='9.376' comment='tiered' hot_count='613'/>
<task_queued compile_id='38' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='9.377' comment='tiered' hot_count='128'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c67710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002c678e0: mov    0x8(%rdx),%r10d
  0x0000000002c678e4: shl    $0x3,%r10
  0x0000000002c678e8: cmp    %rax,%r10
  0x0000000002c678eb: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c678f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c678fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c67900: mov    %eax,-0x6000(%rsp)
  0x0000000002c67907: push   %rbp
  0x0000000002c67908: sub    $0x60,%rsp
  0x0000000002c6790c: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67916: mov    0xdc(%rsi),%ebx
  0x0000000002c6791c: add    $0x8,%ebx
  0x0000000002c6791f: mov    %ebx,0xdc(%rsi)
  0x0000000002c67925: movabs $0x1bb73158,%rsi   ;   {metadata({method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6792f: and    $0x1ff8,%ebx
  0x0000000002c67935: cmp    $0x0,%ebx
  0x0000000002c67938: je     0x0000000002c67c0e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002c6793e: mov    %rdx,%rsi
  0x0000000002c67941: movabs $0x1bdce860,%rbx   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6794b: addq   $0x1,0x108(%rbx)
  0x0000000002c67953: movabs $0x1bca3718,%rsi   ;   {metadata(method data for {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c6795d: mov    0xdc(%rsi),%ebx
  0x0000000002c67963: add    $0x8,%ebx
  0x0000000002c67966: mov    %ebx,0xdc(%rsi)
  0x0000000002c6796c: movabs $0x1bb70480,%rsi   ;   {metadata({method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c67976: and    $0x7ffff8,%ebx
  0x0000000002c6797c: cmp    $0x0,%ebx
  0x0000000002c6797f: je     0x0000000002c67c25
  0x0000000002c67985: cmp    $0x0,%r9d
  0x0000000002c67989: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67993: movabs $0x118,%rbx
  0x0000000002c6799d: jge    0x0000000002c679ad
  0x0000000002c679a3: movabs $0x128,%rbx
  0x0000000002c679ad: mov    (%rsi,%rbx,1),%rax
  0x0000000002c679b1: lea    0x1(%rax),%rax
  0x0000000002c679b5: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c679b9: jl     0x0000000002c67bce  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002c679bf: cmp    $0x0,%edi
  0x0000000002c679c2: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c679cc: movabs $0x148,%rbx
  0x0000000002c679d6: jg     0x0000000002c679e6
  0x0000000002c679dc: movabs $0x158,%rbx
  0x0000000002c679e6: mov    (%rsi,%rbx,1),%rax
  0x0000000002c679ea: lea    0x1(%rax),%rax
  0x0000000002c679ee: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c679f2: jg     0x0000000002c67a6e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002c679f8: cmp    $0x0,%edi
  0x0000000002c679fb: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67a05: movabs $0x168,%rbx
  0x0000000002c67a0f: jge    0x0000000002c67a1f
  0x0000000002c67a15: movabs $0x178,%rbx
  0x0000000002c67a1f: mov    (%rsi,%rbx,1),%rax
  0x0000000002c67a23: lea    0x1(%rax),%rax
  0x0000000002c67a27: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c67a2b: jl     0x0000000002c67b8e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002c67a31: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002c67c3c
  0x0000000002c67a35: cmp    %esi,%r9d
  0x0000000002c67a38: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67a42: movabs $0x198,%rbx
  0x0000000002c67a4c: jg     0x0000000002c67a5c
  0x0000000002c67a52: movabs $0x1a8,%rbx
  0x0000000002c67a5c: mov    (%rsi,%rbx,1),%rax
  0x0000000002c67a60: lea    0x1(%rax),%rax
  0x0000000002c67a64: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c67a68: jle    0x0000000002c67b0a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002c67a6e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002c67c41
  0x0000000002c67a72: sub    %edi,%esi
  0x0000000002c67a74: cmp    %esi,%r9d
  0x0000000002c67a77: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67a81: movabs $0x1b8,%rbx
  0x0000000002c67a8b: jle    0x0000000002c67a9b
  0x0000000002c67a91: movabs $0x1c8,%rbx
  0x0000000002c67a9b: mov    (%rsi,%rbx,1),%rax
  0x0000000002c67a9f: lea    0x1(%rax),%rax
  0x0000000002c67aa3: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c67aa7: jg     0x0000000002c67b44  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002c67aad: mov    %rdx,0x38(%rsp)
  0x0000000002c67ab2: movabs $0x1bdce860,%rsi   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67abc: addq   $0x1,0x1e8(%rsi)
  0x0000000002c67ac4: add    %r9d,%edi
  0x0000000002c67ac7: mov    %r8,%rdx
  0x0000000002c67aca: mov    %r9,%r8
  0x0000000002c67acd: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002c67ad0: nop
  0x0000000002c67ad1: nop
  0x0000000002c67ad2: nop
  0x0000000002c67ad3: nop
  0x0000000002c67ad4: nop
  0x0000000002c67ad5: nop
  0x0000000002c67ad6: nop
  0x0000000002c67ad7: callq  0x0000000002b96620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002c67adc: mov    0x38(%rsp),%rdx
  0x0000000002c67ae1: mov    %rax,%r10
  0x0000000002c67ae4: shr    $0x3,%r10
  0x0000000002c67ae8: mov    %r10d,0xc(%rdx)
  0x0000000002c67aec: shr    $0x9,%rdx
  0x0000000002c67af0: movabs $0xe8fe000,%rax
  0x0000000002c67afa: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002c67afe: add    $0x60,%rsp
  0x0000000002c67b02: pop    %rbp
  0x0000000002c67b03: test   %eax,-0x1e47a09(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c67b09: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002c67b0a: movabs $0x76b70ad80,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002c67b14: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002c67c46
  0x0000000002c67b17: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002c67b1b: mov    %rax,%r10
  0x0000000002c67b1e: shr    $0x3,%r10
  0x0000000002c67b22: mov    %r10d,0xc(%rdx)
  0x0000000002c67b26: shr    $0x9,%rdx
  0x0000000002c67b2a: movabs $0xe8fe000,%rax
  0x0000000002c67b34: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002c67b38: add    $0x60,%rsp
  0x0000000002c67b3c: pop    %rbp
  0x0000000002c67b3d: test   %eax,-0x1e47a43(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c67b43: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002c67b44: nopl   0x0(%rax)
  0x0000000002c67b48: jmpq   0x0000000002c67c5a  ;   {no_reloc}
  0x0000000002c67b4d: add    %al,(%rax)
  0x0000000002c67b4f: add    %al,(%rax)
  0x0000000002c67b51: add    %ch,%cl
  0x0000000002c67b53: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002c67b58: mov    %eax,%eax
  0x0000000002c67b5a: movabs $0x1bdce860,%rdx   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67b64: addq   $0x1,0x1d8(%rdx)
  0x0000000002c67b6c: add    %r9d,%edi
  0x0000000002c67b6f: mov    %rdi,%r8
  0x0000000002c67b72: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002c67b75: mov    %rax,0x40(%rsp)
  0x0000000002c67b7a: nop
  0x0000000002c67b7b: nop
  0x0000000002c67b7c: nop
  0x0000000002c67b7d: nop
  0x0000000002c67b7e: nop
  0x0000000002c67b7f: callq  0x0000000002b961a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002c67b84: mov    0x40(%rsp),%rax
  0x0000000002c67b89: jmpq   0x0000000002c67ce8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002c67b8e: xchg   %ax,%ax
  0x0000000002c67b90: jmpq   0x0000000002c67c80  ;   {no_reloc}
  0x0000000002c67b95: add    %al,(%rax)
  0x0000000002c67b97: add    %al,(%rax)
  0x0000000002c67b99: add    %ch,%cl
  0x0000000002c67b9b: jmp    0x0000000002c67b9d
  0x0000000002c67b9d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002c67b9f: mov    %rax,%r8
  0x0000000002c67ba2: movabs $0x1bdce860,%rdx   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67bac: addq   $0x1,0x188(%rdx)
  0x0000000002c67bb4: mov    %rdi,%r8
  0x0000000002c67bb7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002c67bba: mov    %rax,0x48(%rsp)
  0x0000000002c67bbf: callq  0x0000000002b961a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002c67bc4: mov    0x48(%rsp),%rax
  0x0000000002c67bc9: jmpq   0x0000000002c67ce8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002c67bce: xchg   %ax,%ax
  0x0000000002c67bd0: jmpq   0x0000000002c67ca6  ;   {no_reloc}
  0x0000000002c67bd5: add    %al,(%rax)
  0x0000000002c67bd7: add    %al,(%rax)
  0x0000000002c67bd9: add    %ch,%cl
  0x0000000002c67bdb: roll   (%rax)
  0x0000000002c67bdd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002c67bdf: mov    %rax,%r8
  0x0000000002c67be2: movabs $0x1bdce860,%rdx   ;   {metadata(method data for {method} {0x000000001bb73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c67bec: addq   $0x1,0x138(%rdx)
  0x0000000002c67bf4: mov    %r9,%r8
  0x0000000002c67bf7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002c67bfa: mov    %rax,0x50(%rsp)
  0x0000000002c67bff: callq  0x0000000002b961a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002c67c04: mov    0x50(%rsp),%rax
  0x0000000002c67c09: jmpq   0x0000000002c67ce8
  0x0000000002c67c0e: mov    %rsi,0x8(%rsp)
  0x0000000002c67c13: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c67c1b: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002c67c20: jmpq   0x0000000002c6793e
  0x0000000002c67c25: mov    %rsi,0x8(%rsp)
  0x0000000002c67c2a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c67c32: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002c67c37: jmpq   0x0000000002c67985
  0x0000000002c67c3c: callq  0x0000000002c539c0  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002c67c41: callq  0x0000000002c539c0  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002c67c46: callq  0x0000000002c539c0  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002c67c4b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c67c55: mov    $0xa050f00,%eax
  0x0000000002c67c5a: callq  0x0000000002c57160  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002c67c5f: jmpq   0x0000000002c67b48
  0x0000000002c67c64: mov    %rdx,%rdx
  0x0000000002c67c67: callq  0x0000000002c53e60  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002c67c6c: jmpq   0x0000000002c67b57
  0x0000000002c67c71: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c67c7b: mov    $0xa050f00,%eax
  0x0000000002c67c80: callq  0x0000000002c57160  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002c67c85: jmpq   0x0000000002c67b90
  0x0000000002c67c8a: mov    %rdx,%rdx
  0x0000000002c67c8d: callq  0x0000000002c53e60  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002c67c92: jmpq   0x0000000002c67b9f
  0x0000000002c67c97: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c67ca1: mov    $0xa050f00,%eax
  0x0000000002c67ca6: callq  0x0000000002c57160  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002c67cab: jmpq   0x0000000002c67bd0
  0x0000000002c67cb0: mov    %rdx,%rdx
  0x0000000002c67cb3: callq  0x0000000002c53e60  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002c67cb8: jmpq   0x0000000002c67bdf
  0x0000000002c67cbd: nop
  0x0000000002c67cbe: nop
  0x0000000002c67cbf: mov    0x2a8(%r15),%rax
  0x0000000002c67cc6: movabs $0x0,%r10
  0x0000000002c67cd0: mov    %r10,0x2a8(%r15)
  0x0000000002c67cd7: movabs $0x0,%r10
  0x0000000002c67ce1: mov    %r10,0x2b0(%r15)
  0x0000000002c67ce8: add    $0x60,%rsp
  0x0000000002c67cec: pop    %rbp
  0x0000000002c67ced: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c67cf2: hlt    
  0x0000000002c67cf3: hlt    
  0x0000000002c67cf4: hlt    
  0x0000000002c67cf5: hlt    
  0x0000000002c67cf6: hlt    
  0x0000000002c67cf7: hlt    
  0x0000000002c67cf8: hlt    
  0x0000000002c67cf9: hlt    
  0x0000000002c67cfa: hlt    
  0x0000000002c67cfb: hlt    
  0x0000000002c67cfc: hlt    
  0x0000000002c67cfd: hlt    
  0x0000000002c67cfe: hlt    
  0x0000000002c67cff: hlt    
[Stub Code]
  0x0000000002c67d00: nop                       ;   {no_reloc}
  0x0000000002c67d01: nop
  0x0000000002c67d02: nop
  0x0000000002c67d03: nop
  0x0000000002c67d04: nop
  0x0000000002c67d05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c67d0f: jmpq   0x0000000002c67d0f  ;   {runtime_call}
  0x0000000002c67d14: nop
  0x0000000002c67d15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c67d1f: jmpq   0x0000000002c67d1f  ;   {runtime_call}
  0x0000000002c67d24: nop
  0x0000000002c67d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c67d2f: jmpq   0x0000000002c67d2f  ;   {runtime_call}
  0x0000000002c67d34: nop
  0x0000000002c67d35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c67d3f: jmpq   0x0000000002c67d3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c67d44: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c67d49: mov    %rsp,-0x28(%rsp)
  0x0000000002c67d4e: sub    $0x80,%rsp
  0x0000000002c67d55: mov    %rax,0x78(%rsp)
  0x0000000002c67d5a: mov    %rcx,0x70(%rsp)
  0x0000000002c67d5f: mov    %rdx,0x68(%rsp)
  0x0000000002c67d64: mov    %rbx,0x60(%rsp)
  0x0000000002c67d69: mov    %rbp,0x50(%rsp)
  0x0000000002c67d6e: mov    %rsi,0x48(%rsp)
  0x0000000002c67d73: mov    %rdi,0x40(%rsp)
  0x0000000002c67d78: mov    %r8,0x38(%rsp)
  0x0000000002c67d7d: mov    %r9,0x30(%rsp)
  0x0000000002c67d82: mov    %r10,0x28(%rsp)
  0x0000000002c67d87: mov    %r11,0x20(%rsp)
  0x0000000002c67d8c: mov    %r12,0x18(%rsp)
  0x0000000002c67d91: mov    %r13,0x10(%rsp)
  0x0000000002c67d96: mov    %r14,0x8(%rsp)
  0x0000000002c67d9b: mov    %r15,(%rsp)
  0x0000000002c67d9f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c67da9: movabs $0x2c67d49,%rdx    ;   {internal_word}
  0x0000000002c67db3: mov    %rsp,%r8
  0x0000000002c67db6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c67dba: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c67dbf: hlt    
[Deopt Handler Code]
  0x0000000002c67dc0: movabs $0x2c67dc0,%r10    ;   {section_word}
  0x0000000002c67dca: push   %r10
  0x0000000002c67dcc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c67dd1: hlt    
  0x0000000002c67dd2: hlt    
  0x0000000002c67dd3: hlt    
  0x0000000002c67dd4: hlt    
  0x0000000002c67dd5: hlt    
  0x0000000002c67dd6: hlt    
  0x0000000002c67dd7: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x0000000002c678e0' size='2704' address='0x0000000002c67710' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='637' iicount='637' stamp='10.093'/>
<writer thread='21536'/>
<task_queued compile_id='39' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='256' iicount='256' level='3' stamp='10.093' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c681d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbf41b0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c68320: mov    0x8(%rdx),%r10d
  0x0000000002c68324: shl    $0x3,%r10
  0x0000000002c68328: cmp    %rax,%r10
  0x0000000002c6832b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c68331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6833c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c68340: mov    %eax,-0x6000(%rsp)
  0x0000000002c68347: push   %rbp
  0x0000000002c68348: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x0000000002c6834c: mov    0x10(%rdx),%eax
  0x0000000002c6834f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x0000000002c68353: add    $0x30,%rsp
  0x0000000002c68357: pop    %rbp
  0x0000000002c68358: test   %eax,-0x1e4825e(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6835e: retq   
  0x0000000002c6835f: nop
  0x0000000002c68360: nop
  0x0000000002c68361: mov    0x2a8(%r15),%rax
  0x0000000002c68368: movabs $0x0,%r10
  0x0000000002c68372: mov    %r10,0x2a8(%r15)
  0x0000000002c68379: movabs $0x0,%r10
  0x0000000002c68383: mov    %r10,0x2b0(%r15)
  0x0000000002c6838a: add    $0x30,%rsp
  0x0000000002c6838e: pop    %rbp
  0x0000000002c6838f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c68394: hlt    
  0x0000000002c68395: hlt    
  0x0000000002c68396: hlt    
  0x0000000002c68397: hlt    
  0x0000000002c68398: hlt    
  0x0000000002c68399: hlt    
  0x0000000002c6839a: hlt    
  0x0000000002c6839b: hlt    
  0x0000000002c6839c: hlt    
  0x0000000002c6839d: hlt    
  0x0000000002c6839e: hlt    
  0x0000000002c6839f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c683a0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c683a5: mov    %rsp,-0x28(%rsp)
  0x0000000002c683aa: sub    $0x80,%rsp
  0x0000000002c683b1: mov    %rax,0x78(%rsp)
  0x0000000002c683b6: mov    %rcx,0x70(%rsp)
  0x0000000002c683bb: mov    %rdx,0x68(%rsp)
  0x0000000002c683c0: mov    %rbx,0x60(%rsp)
  0x0000000002c683c5: mov    %rbp,0x50(%rsp)
  0x0000000002c683ca: mov    %rsi,0x48(%rsp)
  0x0000000002c683cf: mov    %rdi,0x40(%rsp)
  0x0000000002c683d4: mov    %r8,0x38(%rsp)
  0x0000000002c683d9: mov    %r9,0x30(%rsp)
  0x0000000002c683de: mov    %r10,0x28(%rsp)
  0x0000000002c683e3: mov    %r11,0x20(%rsp)
  0x0000000002c683e8: mov    %r12,0x18(%rsp)
  0x0000000002c683ed: mov    %r13,0x10(%rsp)
  0x0000000002c683f2: mov    %r14,0x8(%rsp)
  0x0000000002c683f7: mov    %r15,(%rsp)
  0x0000000002c683fb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c68405: movabs $0x2c683a5,%rdx    ;   {internal_word}
  0x0000000002c6840f: mov    %rsp,%r8
  0x0000000002c68412: and    $0xfffffffffffffff0,%rsp
  0x0000000002c68416: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6841b: hlt    
[Deopt Handler Code]
  0x0000000002c6841c: movabs $0x2c6841c,%r10    ;   {section_word}
  0x0000000002c68426: push   %r10
  0x0000000002c68428: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6842d: hlt    
  0x0000000002c6842e: hlt    
  0x0000000002c6842f: hlt    
<nmethod compile_id='38' compiler='C1' level='1' entry='0x0000000002c68320' size='704' address='0x0000000002c681d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='136' iicount='136' stamp='10.177'/>
<writer thread='21536'/>
<task_queued compile_id='40' method='java/lang/Character toLowerCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='10.177' comment='tiered' hot_count='256'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c684d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002c68640: mov    %eax,-0x6000(%rsp)
  0x0000000002c68647: push   %rbp
  0x0000000002c68648: sub    $0x40,%rsp
  0x0000000002c6864c: movabs $0x1bdcfa58,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c68656: mov    0xdc(%rsi),%edi
  0x0000000002c6865c: add    $0x8,%edi
  0x0000000002c6865f: mov    %edi,0xdc(%rsi)
  0x0000000002c68665: movabs $0x1bc0a3d0,%rsi   ;   {metadata({method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6866f: and    $0x1ff8,%edi
  0x0000000002c68675: cmp    $0x0,%edi
  0x0000000002c68678: je     0x0000000002c687ac  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x0000000002c6867e: movabs $0x1bdcfa58,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c68688: addq   $0x1,0x108(%rsi)
  0x0000000002c68690: movabs $0x1bd42228,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6869a: mov    0xdc(%rsi),%edi
  0x0000000002c686a0: add    $0x8,%edi
  0x0000000002c686a3: mov    %edi,0xdc(%rsi)
  0x0000000002c686a9: movabs $0x1bc0a468,%rsi   ;   {metadata({method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c686b3: and    $0x7ffff8,%edi
  0x0000000002c686b9: cmp    $0x0,%edi
  0x0000000002c686bc: je     0x0000000002c687c3
  0x0000000002c686c2: movabs $0x1bd42228,%rsi   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c686cc: addq   $0x1,0x108(%rsi)
  0x0000000002c686d4: mov    %rdx,%rsi
  0x0000000002c686d7: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000002c686da: mov    %esi,0x28(%rsp)
  0x0000000002c686de: nop
  0x0000000002c686df: callq  0x0000000002b96620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x0000000002c686e4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c687da
  0x0000000002c686e7: mov    %rax,%r8
  0x0000000002c686ea: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c686f4: mov    0x8(%r8),%r8d
  0x0000000002c686f8: shl    $0x3,%r8
  0x0000000002c686fc: cmp    0x120(%rdx),%r8
  0x0000000002c68703: jne    0x0000000002c68712
  0x0000000002c68705: addq   $0x1,0x128(%rdx)
  0x0000000002c6870d: jmpq   0x0000000002c68778
  0x0000000002c68712: cmp    0x130(%rdx),%r8
  0x0000000002c68719: jne    0x0000000002c68728
  0x0000000002c6871b: addq   $0x1,0x138(%rdx)
  0x0000000002c68723: jmpq   0x0000000002c68778
  0x0000000002c68728: cmpq   $0x0,0x120(%rdx)
  0x0000000002c68733: jne    0x0000000002c6874c
  0x0000000002c68735: mov    %r8,0x120(%rdx)
  0x0000000002c6873c: movq   $0x1,0x128(%rdx)
  0x0000000002c68747: jmpq   0x0000000002c68778
  0x0000000002c6874c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c68757: jne    0x0000000002c68770
  0x0000000002c68759: mov    %r8,0x130(%rdx)
  0x0000000002c68760: movq   $0x1,0x138(%rdx)
  0x0000000002c6876b: jmpq   0x0000000002c68778
  0x0000000002c68770: addq   $0x1,0x118(%rdx)
  0x0000000002c68778: mov    0x28(%rsp),%r8d
  0x0000000002c6877d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000002c68780: nop
  0x0000000002c68781: nop
  0x0000000002c68782: nop
  0x0000000002c68783: nop
  0x0000000002c68784: nop
  0x0000000002c68785: movabs $0xffffffffffffffff,%rax
  0x0000000002c6878f: callq  0x0000000002b963e0  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x0000000002c68794: and    $0xffff,%eax
  0x0000000002c6879a: and    $0xffff,%eax
  0x0000000002c687a0: add    $0x40,%rsp
  0x0000000002c687a4: pop    %rbp
  0x0000000002c687a5: test   %eax,-0x1e486ab(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c687ab: retq   
  0x0000000002c687ac: mov    %rsi,0x8(%rsp)
  0x0000000002c687b1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c687b9: callq  0x0000000002c58220  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002c687be: jmpq   0x0000000002c6867e
  0x0000000002c687c3: mov    %rsi,0x8(%rsp)
  0x0000000002c687c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c687d0: callq  0x0000000002c58220  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002c687d5: jmpq   0x0000000002c686c2
  0x0000000002c687da: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002c687df: nop
  0x0000000002c687e0: nop
  0x0000000002c687e1: mov    0x2a8(%r15),%rax
  0x0000000002c687e8: movabs $0x0,%r10
  0x0000000002c687f2: mov    %r10,0x2a8(%r15)
  0x0000000002c687f9: movabs $0x0,%r10
  0x0000000002c68803: mov    %r10,0x2b0(%r15)
  0x0000000002c6880a: add    $0x40,%rsp
  0x0000000002c6880e: pop    %rbp
  0x0000000002c6880f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c68814: hlt    
  0x0000000002c68815: hlt    
  0x0000000002c68816: hlt    
  0x0000000002c68817: hlt    
  0x0000000002c68818: hlt    
  0x0000000002c68819: hlt    
  0x0000000002c6881a: hlt    
  0x0000000002c6881b: hlt    
  0x0000000002c6881c: hlt    
  0x0000000002c6881d: hlt    
  0x0000000002c6881e: hlt    
  0x0000000002c6881f: hlt    
[Stub Code]
  0x0000000002c68820: nop                       ;   {no_reloc}
  0x0000000002c68821: nop
  0x0000000002c68822: nop
  0x0000000002c68823: nop
  0x0000000002c68824: nop
  0x0000000002c68825: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6882f: jmpq   0x0000000002c6882f  ;   {runtime_call}
  0x0000000002c68834: nop
  0x0000000002c68835: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6883f: jmpq   0x0000000002c6883f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c68844: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c68849: mov    %rsp,-0x28(%rsp)
  0x0000000002c6884e: sub    $0x80,%rsp
  0x0000000002c68855: mov    %rax,0x78(%rsp)
  0x0000000002c6885a: mov    %rcx,0x70(%rsp)
  0x0000000002c6885f: mov    %rdx,0x68(%rsp)
  0x0000000002c68864: mov    %rbx,0x60(%rsp)
  0x0000000002c68869: mov    %rbp,0x50(%rsp)
  0x0000000002c6886e: mov    %rsi,0x48(%rsp)
  0x0000000002c68873: mov    %rdi,0x40(%rsp)
  0x0000000002c68878: mov    %r8,0x38(%rsp)
  0x0000000002c6887d: mov    %r9,0x30(%rsp)
  0x0000000002c68882: mov    %r10,0x28(%rsp)
  0x0000000002c68887: mov    %r11,0x20(%rsp)
  0x0000000002c6888c: mov    %r12,0x18(%rsp)
  0x0000000002c68891: mov    %r13,0x10(%rsp)
  0x0000000002c68896: mov    %r14,0x8(%rsp)
  0x0000000002c6889b: mov    %r15,(%rsp)
  0x0000000002c6889f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c688a9: movabs $0x2c68849,%rdx    ;   {internal_word}
  0x0000000002c688b3: mov    %rsp,%r8
  0x0000000002c688b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c688ba: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c688bf: hlt    
[Deopt Handler Code]
  0x0000000002c688c0: movabs $0x2c688c0,%r10    ;   {section_word}
  0x0000000002c688ca: push   %r10
  0x0000000002c688cc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c688d1: hlt    
  0x0000000002c688d2: hlt    
  0x0000000002c688d3: hlt    
  0x0000000002c688d4: hlt    
  0x0000000002c688d5: hlt    
  0x0000000002c688d6: hlt    
  0x0000000002c688d7: hlt    
<nmethod compile_id='40' compiler='C1' level='3' entry='0x0000000002c68640' size='1304' address='0x0000000002c684d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toLowerCase (C)C' bytes='6' count='260' iicount='260' stamp='10.355'/>
<writer thread='21536'/>
<task_queued compile_id='41' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='128' backedge_count='1994' iicount='128' level='3' stamp='10.357' comment='tiered' hot_count='128'/>
<task_queued compile_id='42' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3584' iicount='3584' level='1' stamp='10.357' comment='tiered' hot_count='3584'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c68a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002c68b60: mov    0x8(%rdx),%r10d
  0x0000000002c68b64: shl    $0x3,%r10
  0x0000000002c68b68: cmp    %rax,%r10
  0x0000000002c68b6b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c68b71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c68b7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c68b80: mov    %eax,-0x6000(%rsp)
  0x0000000002c68b87: push   %rbp
  0x0000000002c68b88: sub    $0x50,%rsp
  0x0000000002c68b8c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002c68b8f: mov    %rdx,0x40(%rsp)
  0x0000000002c68b94: callq  0x0000000002c53be0  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002c68b99: add    $0x50,%rsp
  0x0000000002c68b9d: pop    %rbp
  0x0000000002c68b9e: test   %eax,-0x1e48aa4(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c68ba4: retq   
  0x0000000002c68ba5: nop
  0x0000000002c68ba6: nop
  0x0000000002c68ba7: mov    0x2a8(%r15),%rax
  0x0000000002c68bae: movabs $0x0,%r10
  0x0000000002c68bb8: mov    %r10,0x2a8(%r15)
  0x0000000002c68bbf: movabs $0x0,%r10
  0x0000000002c68bc9: mov    %r10,0x2b0(%r15)
  0x0000000002c68bd0: add    $0x50,%rsp
  0x0000000002c68bd4: pop    %rbp
  0x0000000002c68bd5: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c68bda: hlt    
  0x0000000002c68bdb: hlt    
  0x0000000002c68bdc: hlt    
  0x0000000002c68bdd: hlt    
  0x0000000002c68bde: hlt    
  0x0000000002c68bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c68be0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c68be5: mov    %rsp,-0x28(%rsp)
  0x0000000002c68bea: sub    $0x80,%rsp
  0x0000000002c68bf1: mov    %rax,0x78(%rsp)
  0x0000000002c68bf6: mov    %rcx,0x70(%rsp)
  0x0000000002c68bfb: mov    %rdx,0x68(%rsp)
  0x0000000002c68c00: mov    %rbx,0x60(%rsp)
  0x0000000002c68c05: mov    %rbp,0x50(%rsp)
  0x0000000002c68c0a: mov    %rsi,0x48(%rsp)
  0x0000000002c68c0f: mov    %rdi,0x40(%rsp)
  0x0000000002c68c14: mov    %r8,0x38(%rsp)
  0x0000000002c68c19: mov    %r9,0x30(%rsp)
  0x0000000002c68c1e: mov    %r10,0x28(%rsp)
  0x0000000002c68c23: mov    %r11,0x20(%rsp)
  0x0000000002c68c28: mov    %r12,0x18(%rsp)
  0x0000000002c68c2d: mov    %r13,0x10(%rsp)
  0x0000000002c68c32: mov    %r14,0x8(%rsp)
  0x0000000002c68c37: mov    %r15,(%rsp)
  0x0000000002c68c3b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c68c45: movabs $0x2c68be5,%rdx    ;   {internal_word}
  0x0000000002c68c4f: mov    %rsp,%r8
  0x0000000002c68c52: and    $0xfffffffffffffff0,%rsp
  0x0000000002c68c56: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c68c5b: hlt    
[Deopt Handler Code]
  0x0000000002c68c5c: movabs $0x2c68c5c,%r10    ;   {section_word}
  0x0000000002c68c66: push   %r10
  0x0000000002c68c68: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c68c6d: hlt    
  0x0000000002c68c6e: hlt    
  0x0000000002c68c6f: hlt    
<nmethod compile_id='42' compiler='C1' level='1' entry='0x0000000002c68b60' size='712' address='0x0000000002c68a10' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3590' iicount='3590' stamp='10.440'/>
<make_not_entrant thread='19132' compile_id='3' compiler='C1' level='3' stamp='10.440'/>
Decoding compiled method 0x0000000002c68d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/util/Locale&apos;
  #           [sp+0xe0]  (sp of caller)
  0x0000000002c69040: mov    0x8(%rdx),%r10d
  0x0000000002c69044: shl    $0x3,%r10
  0x0000000002c69048: cmp    %rax,%r10
  0x0000000002c6904b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c69051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6905c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c69060: mov    %eax,-0x6000(%rsp)
  0x0000000002c69067: push   %rbp
  0x0000000002c69068: sub    $0xd0,%rsp
  0x0000000002c6906f: mov    %rdx,0x68(%rsp)
  0x0000000002c69074: mov    %r8,0x78(%rsp)
  0x0000000002c69079: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69083: mov    0xdc(%rsi),%edi
  0x0000000002c69089: add    $0x8,%edi
  0x0000000002c6908c: mov    %edi,0xdc(%rsi)
  0x0000000002c69092: movabs $0x1bb768d0,%rsi   ;   {metadata({method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6909c: and    $0x1ff8,%edi
  0x0000000002c690a2: cmp    $0x0,%edi
  0x0000000002c690a5: je     0x0000000002c6a521  ;*aload_1
                                                ; - java.lang.String::toLowerCase@0 (line 2562)

  0x0000000002c690ab: cmp    $0x0,%r8
  0x0000000002c690af: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c690b9: movabs $0x108,%rdi
  0x0000000002c690c3: jne    0x0000000002c690d3
  0x0000000002c690c9: movabs $0x118,%rdi
  0x0000000002c690d3: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c690d7: lea    0x1(%rbx),%rbx
  0x0000000002c690db: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c690df: je     0x0000000002c6a4a5  ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x0000000002c690e5: mov    0xc(%rdx),%esi
  0x0000000002c690e8: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::toLowerCase@13 (line 2567)

  0x0000000002c690ec: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ; implicit exception: dispatches to 0x0000000002c6a538
  0x0000000002c690ef: mov    %esi,0x70(%rsp)
  0x0000000002c690f3: mov    $0x0,%edi          ;*iload_2
                                                ; - java.lang.String::toLowerCase@20 (line 2571)

  0x0000000002c690f8: cmp    %esi,%edi
  0x0000000002c690fa: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69104: movabs $0x138,%rax
  0x0000000002c6910e: jge    0x0000000002c6911e
  0x0000000002c69114: movabs $0x148,%rax
  0x0000000002c6911e: mov    (%rbx,%rax,1),%rcx
  0x0000000002c69122: lea    0x1(%rcx),%rcx
  0x0000000002c69126: mov    %rcx,(%rbx,%rax,1)
  0x0000000002c6912a: jge    0x0000000002c6a493  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@22 (line 2571)

  0x0000000002c69130: mov    0xc(%rdx),%ebx
  0x0000000002c69133: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@26 (line 2572)

  0x0000000002c69137: movslq %edi,%rax
  0x0000000002c6913a: cmp    0xc(%rbx),%edi     ; implicit exception: dispatches to 0x0000000002c6a53d
  0x0000000002c6913d: jae    0x0000000002c6a547
  0x0000000002c69143: movzwl 0x10(%rbx,%rax,2),%ebx  ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x0000000002c69148: cmp    $0xd800,%ebx
  0x0000000002c6914e: movabs $0x1bdd3460,%rax   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69158: movabs $0x158,%rcx
  0x0000000002c69162: jl     0x0000000002c69172
  0x0000000002c69168: movabs $0x168,%rcx
  0x0000000002c69172: mov    (%rax,%rcx,1),%r9
  0x0000000002c69176: lea    0x1(%r9),%r9
  0x0000000002c6917a: mov    %r9,(%rax,%rcx,1)
  0x0000000002c6917e: jl     0x0000000002c691c0  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x0000000002c69184: cmp    $0xdbff,%ebx
  0x0000000002c6918a: movabs $0x1bdd3460,%rax   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69194: movabs $0x178,%rcx
  0x0000000002c6919e: jg     0x0000000002c691ae
  0x0000000002c691a4: movabs $0x188,%rcx
  0x0000000002c691ae: mov    (%rax,%rcx,1),%r9
  0x0000000002c691b2: lea    0x1(%r9),%r9
  0x0000000002c691b6: mov    %r9,(%rax,%rcx,1)
  0x0000000002c691ba: jle    0x0000000002c6936f  ;*if_icmpgt
                                                ; - java.lang.String::toLowerCase@44 (line 2573)

  0x0000000002c691c0: mov    %edi,0x64(%rsp)
  0x0000000002c691c4: movabs $0x1bdd3460,%rax   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c691ce: addq   $0x1,0x238(%rax)
  0x0000000002c691d6: movabs $0x1bdcfa58,%rax   ;   {metadata(method data for {method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c691e0: mov    0xdc(%rax),%ecx
  0x0000000002c691e6: add    $0x8,%ecx
  0x0000000002c691e9: mov    %ecx,0xdc(%rax)
  0x0000000002c691ef: movabs $0x1bc0a3d0,%rax   ;   {metadata({method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c691f9: and    $0x7ffff8,%ecx
  0x0000000002c691ff: cmp    $0x0,%ecx
  0x0000000002c69202: je     0x0000000002c6a550
  0x0000000002c69208: movabs $0x1bdcfa58,%rax   ;   {metadata(method data for {method} {0x000000001bc0a3d8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69212: addq   $0x1,0x108(%rax)
  0x0000000002c6921a: movabs $0x1bd42228,%rax   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69224: mov    0xdc(%rax),%ecx
  0x0000000002c6922a: add    $0x8,%ecx
  0x0000000002c6922d: mov    %ecx,0xdc(%rax)
  0x0000000002c69233: movabs $0x1bc0a468,%rax   ;   {metadata({method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6923d: and    $0x7ffff8,%ecx
  0x0000000002c69243: cmp    $0x0,%ecx
  0x0000000002c69246: je     0x0000000002c6a567
  0x0000000002c6924c: movabs $0x1bd42228,%rax   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69256: addq   $0x1,0x108(%rax)
  0x0000000002c6925e: mov    %rbx,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002c69261: mov    %ebx,0x60(%rsp)
  0x0000000002c69265: nop
  0x0000000002c69266: nop
  0x0000000002c69267: callq  0x0000000002b96620  ; OopMap{[104]=Oop [120]=Oop off=556}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {static_call}
  0x0000000002c6926c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c6a57e
  0x0000000002c6926f: mov    %rax,%r8
  0x0000000002c69272: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6927c: mov    0x8(%r8),%r8d
  0x0000000002c69280: shl    $0x3,%r8
  0x0000000002c69284: cmp    0x120(%rdx),%r8
  0x0000000002c6928b: jne    0x0000000002c6929a
  0x0000000002c6928d: addq   $0x1,0x128(%rdx)
  0x0000000002c69295: jmpq   0x0000000002c69300
  0x0000000002c6929a: cmp    0x130(%rdx),%r8
  0x0000000002c692a1: jne    0x0000000002c692b0
  0x0000000002c692a3: addq   $0x1,0x138(%rdx)
  0x0000000002c692ab: jmpq   0x0000000002c69300
  0x0000000002c692b0: cmpq   $0x0,0x120(%rdx)
  0x0000000002c692bb: jne    0x0000000002c692d4
  0x0000000002c692bd: mov    %r8,0x120(%rdx)
  0x0000000002c692c4: movq   $0x1,0x128(%rdx)
  0x0000000002c692cf: jmpq   0x0000000002c69300
  0x0000000002c692d4: cmpq   $0x0,0x130(%rdx)
  0x0000000002c692df: jne    0x0000000002c692f8
  0x0000000002c692e1: mov    %r8,0x130(%rdx)
  0x0000000002c692e8: movq   $0x1,0x138(%rdx)
  0x0000000002c692f3: jmpq   0x0000000002c69300
  0x0000000002c692f8: addq   $0x1,0x118(%rdx)
  0x0000000002c69300: mov    0x60(%rsp),%r8d
  0x0000000002c69305: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002c69308: nop
  0x0000000002c69309: nop
  0x0000000002c6930a: nop
  0x0000000002c6930b: nop
  0x0000000002c6930c: nop
  0x0000000002c6930d: movabs $0xffffffffffffffff,%rax
  0x0000000002c69317: callq  0x0000000002b963e0  ; OopMap{[104]=Oop [120]=Oop off=732}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {virtual_call}
  0x0000000002c6931c: and    $0xffff,%eax
  0x0000000002c69322: and    $0xffff,%eax
  0x0000000002c69328: mov    0x60(%rsp),%ebx
  0x0000000002c6932c: cmp    %eax,%ebx
  0x0000000002c6932e: movabs $0x1bdd3460,%r8    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69338: movabs $0x248,%rdx
  0x0000000002c69342: je     0x0000000002c69352
  0x0000000002c69348: movabs $0x258,%rdx
  0x0000000002c69352: mov    (%r8,%rdx,1),%rsi
  0x0000000002c69356: lea    0x1(%rsi),%rsi
  0x0000000002c6935a: mov    %rsi,(%r8,%rdx,1)
  0x0000000002c6935e: mov    0x64(%rsp),%edi
  0x0000000002c69362: jne    0x0000000002c6968d  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@85 (line 2581)

  0x0000000002c69368: inc    %edi
  0x0000000002c6936a: jmpq   0x0000000002c6961e  ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x0000000002c6936f: mov    %edi,0x64(%rsp)
  0x0000000002c69373: mov    0x68(%rsp),%rdx
  0x0000000002c69378: movabs $0x1bdd3460,%r8    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69382: mov    0x8(%rdx),%edx
  0x0000000002c69385: shl    $0x3,%rdx
  0x0000000002c69389: cmp    0x1a0(%r8),%rdx
  0x0000000002c69390: jne    0x0000000002c6939f
  0x0000000002c69392: addq   $0x1,0x1a8(%r8)
  0x0000000002c6939a: jmpq   0x0000000002c69405
  0x0000000002c6939f: cmp    0x1b0(%r8),%rdx
  0x0000000002c693a6: jne    0x0000000002c693b5
  0x0000000002c693a8: addq   $0x1,0x1b8(%r8)
  0x0000000002c693b0: jmpq   0x0000000002c69405
  0x0000000002c693b5: cmpq   $0x0,0x1a0(%r8)
  0x0000000002c693c0: jne    0x0000000002c693d9
  0x0000000002c693c2: mov    %rdx,0x1a0(%r8)
  0x0000000002c693c9: movq   $0x1,0x1a8(%r8)
  0x0000000002c693d4: jmpq   0x0000000002c69405
  0x0000000002c693d9: cmpq   $0x0,0x1b0(%r8)
  0x0000000002c693e4: jne    0x0000000002c693fd
  0x0000000002c693e6: mov    %rdx,0x1b0(%r8)
  0x0000000002c693ed: movq   $0x1,0x1b8(%r8)
  0x0000000002c693f8: jmpq   0x0000000002c69405
  0x0000000002c693fd: addq   $0x1,0x198(%r8)
  0x0000000002c69405: mov    0x64(%rsp),%r8d
  0x0000000002c6940a: mov    0x68(%rsp),%rdx    ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@49 (line 2575)

  0x0000000002c6940f: callq  0x0000000002b961a0  ; OopMap{[104]=Oop [120]=Oop off=980}
                                                ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@49 (line 2575)
                                                ;   {optimized virtual_call}
  0x0000000002c69414: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6941e: addq   $0x1,0x1c8(%rdx)
  0x0000000002c69426: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69430: mov    0xdc(%rdx),%esi
  0x0000000002c69436: add    $0x8,%esi
  0x0000000002c69439: mov    %esi,0xdc(%rdx)
  0x0000000002c6943f: movabs $0x1bc0a468,%rdx   ;   {metadata({method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69449: and    $0x7ffff8,%esi
  0x0000000002c6944f: cmp    $0x0,%esi
  0x0000000002c69452: je     0x0000000002c6a583
  0x0000000002c69458: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69462: addq   $0x1,0x108(%rdx)
  0x0000000002c6946a: mov    %rax,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)

  0x0000000002c6946d: mov    %eax,0x74(%rsp)
  0x0000000002c69471: nop
  0x0000000002c69472: nop
  0x0000000002c69473: nop
  0x0000000002c69474: nop
  0x0000000002c69475: nop
  0x0000000002c69476: nop
  0x0000000002c69477: callq  0x0000000002b96620  ; OopMap{[104]=Oop [120]=Oop off=1084}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {static_call}
  0x0000000002c6947c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c6a59a
  0x0000000002c6947f: mov    %rax,%r8
  0x0000000002c69482: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6948c: mov    0x8(%r8),%r8d
  0x0000000002c69490: shl    $0x3,%r8
  0x0000000002c69494: cmp    0x120(%rdx),%r8
  0x0000000002c6949b: jne    0x0000000002c694aa
  0x0000000002c6949d: addq   $0x1,0x128(%rdx)
  0x0000000002c694a5: jmpq   0x0000000002c69510
  0x0000000002c694aa: cmp    0x130(%rdx),%r8
  0x0000000002c694b1: jne    0x0000000002c694c0
  0x0000000002c694b3: addq   $0x1,0x138(%rdx)
  0x0000000002c694bb: jmpq   0x0000000002c69510
  0x0000000002c694c0: cmpq   $0x0,0x120(%rdx)
  0x0000000002c694cb: jne    0x0000000002c694e4
  0x0000000002c694cd: mov    %r8,0x120(%rdx)
  0x0000000002c694d4: movq   $0x1,0x128(%rdx)
  0x0000000002c694df: jmpq   0x0000000002c69510
  0x0000000002c694e4: cmpq   $0x0,0x130(%rdx)
  0x0000000002c694ef: jne    0x0000000002c69508
  0x0000000002c694f1: mov    %r8,0x130(%rdx)
  0x0000000002c694f8: movq   $0x1,0x138(%rdx)
  0x0000000002c69503: jmpq   0x0000000002c69510
  0x0000000002c69508: addq   $0x1,0x118(%rdx)
  0x0000000002c69510: mov    0x74(%rsp),%r8d
  0x0000000002c69515: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)

  0x0000000002c69518: nop
  0x0000000002c69519: nop
  0x0000000002c6951a: nop
  0x0000000002c6951b: nop
  0x0000000002c6951c: nop
  0x0000000002c6951d: movabs $0xffffffffffffffff,%rax
  0x0000000002c69527: callq  0x0000000002b963e0  ; OopMap{[104]=Oop [120]=Oop off=1260}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {virtual_call}
  0x0000000002c6952c: mov    0x74(%rsp),%ebx
  0x0000000002c69530: cmp    %eax,%ebx
  0x0000000002c69532: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6953c: movabs $0x1d8,%rsi
  0x0000000002c69546: je     0x0000000002c69556
  0x0000000002c6954c: movabs $0x1e8,%rsi
  0x0000000002c69556: mov    (%rdx,%rsi,1),%rdi
  0x0000000002c6955a: lea    0x1(%rdi),%rdi
  0x0000000002c6955e: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002c69562: jne    0x0000000002c69674  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@61 (line 2576)

  0x0000000002c69568: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69572: addq   $0x1,0x210(%rdx)
  0x0000000002c6957a: movabs $0x1bdd3dd0,%rdx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69584: mov    0xdc(%rdx),%esi
  0x0000000002c6958a: add    $0x8,%esi
  0x0000000002c6958d: mov    %esi,0xdc(%rdx)
  0x0000000002c69593: movabs $0x1bc08278,%rdx   ;   {metadata({method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c6959d: and    $0x7ffff8,%esi
  0x0000000002c695a3: cmp    $0x0,%esi
  0x0000000002c695a6: je     0x0000000002c6a59f
  0x0000000002c695ac: cmp    $0x10000,%ebx
  0x0000000002c695b2: movabs $0x1bdd3dd0,%rbx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c695bc: movabs $0x108,%rdx
  0x0000000002c695c6: jl     0x0000000002c695d6
  0x0000000002c695cc: movabs $0x118,%rdx
  0x0000000002c695d6: mov    (%rbx,%rdx,1),%rsi
  0x0000000002c695da: lea    0x1(%rsi),%rsi
  0x0000000002c695de: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002c695e2: jl     0x0000000002c69602  ;*if_icmplt
                                                ; - java.lang.Character::charCount@3 (line 4818)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x0000000002c695e8: movabs $0x1bdd3dd0,%rbx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c695f2: incl   0x128(%rbx)
  0x0000000002c695f8: mov    $0x2,%ebx
  0x0000000002c695fd: jmpq   0x0000000002c69607  ;*goto
                                                ; - java.lang.Character::charCount@7 (line 4818)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x0000000002c69602: mov    $0x1,%ebx          ;*ireturn
                                                ; - java.lang.Character::charCount@11 (line 4818)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)

  0x0000000002c69607: add    0x64(%rsp),%ebx
  0x0000000002c6960b: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69615: incl   0x220(%rdx)
  0x0000000002c6961b: mov    %rbx,%rdi          ;*goto
                                                ; - java.lang.String::toLowerCase@75 (line 2580)

  0x0000000002c6961e: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69628: mov    0xe0(%rbx),%edx
  0x0000000002c6962e: add    $0x8,%edx
  0x0000000002c69631: mov    %edx,0xe0(%rbx)
  0x0000000002c69637: movabs $0x1bb768d0,%rbx   ;   {metadata({method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69641: and    $0xfff8,%edx
  0x0000000002c69647: cmp    $0x0,%edx
  0x0000000002c6964a: je     0x0000000002c6a5b6  ; OopMap{[104]=Oop [120]=Oop off=1552}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x0000000002c69650: test   %eax,-0x1e49556(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c69656: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69660: incl   0x280(%rbx)
  0x0000000002c69666: mov    0x70(%rsp),%esi
  0x0000000002c6966a: mov    0x68(%rsp),%rdx
  0x0000000002c6966f: jmpq   0x0000000002c690f8  ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)

  0x0000000002c69674: mov    0x64(%rsp),%edi
  0x0000000002c69678: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69682: incl   0x1f8(%rbx)
  0x0000000002c69688: jmpq   0x0000000002c6969d  ;*goto
                                                ; - java.lang.String::toLowerCase@64 (line 2577)

  0x0000000002c6968d: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69697: incl   0x268(%rbx)        ;*goto
                                                ; - java.lang.String::toLowerCase@88 (line 2582)

  0x0000000002c6969d: mov    0x68(%rsp),%rdx
  0x0000000002c696a2: mov    0x70(%rsp),%ebx
  0x0000000002c696a6: mov    %rdx,%r11
  0x0000000002c696a9: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c696b3: mov    %rdi,%r13
  0x0000000002c696b6: movslq %ebx,%rbx
  0x0000000002c696b9: mov    %rbx,%rdi
  0x0000000002c696bc: cmp    $0xffffff,%rbx
  0x0000000002c696c3: ja     0x0000000002c6a5cd
  0x0000000002c696c9: movabs $0x17,%rsi
  0x0000000002c696d3: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c696d7: and    $0xfffffffffffffff8,%rsi
  0x0000000002c696db: mov    0x60(%r15),%rax
  0x0000000002c696df: lea    (%rax,%rsi,1),%rsi
  0x0000000002c696e3: cmp    0x70(%r15),%rsi
  0x0000000002c696e7: ja     0x0000000002c6a5cd
  0x0000000002c696ed: mov    %rsi,0x60(%r15)
  0x0000000002c696f1: sub    %rax,%rsi
  0x0000000002c696f4: movq   $0x1,(%rax)
  0x0000000002c696fb: mov    %rdx,%rcx
  0x0000000002c696fe: shr    $0x3,%rcx
  0x0000000002c69702: mov    %ecx,0x8(%rax)
  0x0000000002c69705: mov    %ebx,0xc(%rax)
  0x0000000002c69708: sub    $0x10,%rsi
  0x0000000002c6970c: je     0x0000000002c69723
  0x0000000002c69712: xor    %rbx,%rbx
  0x0000000002c69715: shr    $0x3,%rsi
  0x0000000002c69719: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c6971e: dec    %rsi
  0x0000000002c69721: jne    0x0000000002c69719  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x0000000002c69723: mov    0xc(%r11),%edx
  0x0000000002c69727: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@108 (line 2595)

  0x0000000002c6972b: movabs $0x1bdd3460,%r9    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69735: addq   $0x1,0x298(%r9)
  0x0000000002c6973d: mov    $0x0,%r8d
  0x0000000002c69743: mov    %rax,%r9
  0x0000000002c69746: mov    $0x0,%edi
  0x0000000002c6974b: mov    %r13,%rsi
  0x0000000002c6974e: mov    %rax,0x80(%rsp)
  0x0000000002c69756: mov    %r13d,0x64(%rsp)
  0x0000000002c6975b: test   %rdx,%rdx
  0x0000000002c6975e: je     0x0000000002c6a5d7
  0x0000000002c69764: lea    (%r8,%rsi,1),%rcx
  0x0000000002c69768: cmp    0xc(%rdx),%ecx
  0x0000000002c6976b: ja     0x0000000002c6a5d7
  0x0000000002c69771: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c69775: cmp    0xc(%r9),%ecx
  0x0000000002c69779: ja     0x0000000002c6a5d7
  0x0000000002c6977f: test   %esi,%esi
  0x0000000002c69781: jl     0x0000000002c6a5d7
  0x0000000002c69787: je     0x0000000002c697cb
  0x0000000002c6978d: movslq %r8d,%r8
  0x0000000002c69790: movslq %edi,%rdi
  0x0000000002c69793: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c69798: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c6979d: mov    %rsi,%r8
  0x0000000002c697a0: sub    $0x20,%rsp
  0x0000000002c697a4: test   $0xf,%esp
  0x0000000002c697aa: je     0x0000000002c697c2
  0x0000000002c697b0: sub    $0x8,%rsp
  0x0000000002c697b4: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c697b9: add    $0x8,%rsp
  0x0000000002c697bd: jmpq   0x0000000002c697c7
  0x0000000002c697c2: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c697c7: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x0000000002c697cb: mov    0x78(%rsp),%r8
  0x0000000002c697d0: cmp    (%r8),%rax         ;*invokevirtual getLanguage
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x0000000002c6a5e1
  0x0000000002c697d3: mov    %r8,%rdx
  0x0000000002c697d6: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c697e0: mov    0x8(%rdx),%edx
  0x0000000002c697e3: shl    $0x3,%rdx
  0x0000000002c697e7: cmp    0x2b0(%rsi),%rdx
  0x0000000002c697ee: jne    0x0000000002c697fd
  0x0000000002c697f0: addq   $0x1,0x2b8(%rsi)
  0x0000000002c697f8: jmpq   0x0000000002c69863
  0x0000000002c697fd: cmp    0x2c0(%rsi),%rdx
  0x0000000002c69804: jne    0x0000000002c69813
  0x0000000002c69806: addq   $0x1,0x2c8(%rsi)
  0x0000000002c6980e: jmpq   0x0000000002c69863
  0x0000000002c69813: cmpq   $0x0,0x2b0(%rsi)
  0x0000000002c6981e: jne    0x0000000002c69837
  0x0000000002c69820: mov    %rdx,0x2b0(%rsi)
  0x0000000002c69827: movq   $0x1,0x2b8(%rsi)
  0x0000000002c69832: jmpq   0x0000000002c69863
  0x0000000002c69837: cmpq   $0x0,0x2c0(%rsi)
  0x0000000002c69842: jne    0x0000000002c6985b
  0x0000000002c69844: mov    %rdx,0x2c0(%rsi)
  0x0000000002c6984b: movq   $0x1,0x2c8(%rsi)
  0x0000000002c69856: jmpq   0x0000000002c69863
  0x0000000002c6985b: addq   $0x1,0x2a8(%rsi)
  0x0000000002c69863: movabs $0x1bdd3f28,%rdx   ;   {metadata(method data for {method} {0x000000001bd1f6f0} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x0000000002c6986d: mov    0xdc(%rdx),%esi
  0x0000000002c69873: add    $0x8,%esi
  0x0000000002c69876: mov    %esi,0xdc(%rdx)
  0x0000000002c6987c: movabs $0x1bd1f6e8,%rdx   ;   {metadata({method} {0x000000001bd1f6f0} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x0000000002c69886: and    $0x7ffff8,%esi
  0x0000000002c6988c: cmp    $0x0,%esi
  0x0000000002c6988f: je     0x0000000002c6a5e6
  0x0000000002c69895: mov    0x10(%r8),%edx
  0x0000000002c69899: shl    $0x3,%rdx          ;*getfield baseLocale
                                                ; - java.util.Locale::getLanguage@1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x0000000002c6989d: cmp    (%rdx),%rax        ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x0000000002c6a5fd
  0x0000000002c698a0: mov    %rdx,%rsi
  0x0000000002c698a3: movabs $0x1bdd3f28,%rdi   ;   {metadata(method data for {method} {0x000000001bd1f6f0} &apos;getLanguage&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/util/Locale&apos;)}
  0x0000000002c698ad: mov    0x8(%rsi),%esi
  0x0000000002c698b0: shl    $0x3,%rsi
  0x0000000002c698b4: cmp    0x110(%rdi),%rsi
  0x0000000002c698bb: jne    0x0000000002c698ca
  0x0000000002c698bd: addq   $0x1,0x118(%rdi)
  0x0000000002c698c5: jmpq   0x0000000002c69930
  0x0000000002c698ca: cmp    0x120(%rdi),%rsi
  0x0000000002c698d1: jne    0x0000000002c698e0
  0x0000000002c698d3: addq   $0x1,0x128(%rdi)
  0x0000000002c698db: jmpq   0x0000000002c69930
  0x0000000002c698e0: cmpq   $0x0,0x110(%rdi)
  0x0000000002c698eb: jne    0x0000000002c69904
  0x0000000002c698ed: mov    %rsi,0x110(%rdi)
  0x0000000002c698f4: movq   $0x1,0x118(%rdi)
  0x0000000002c698ff: jmpq   0x0000000002c69930
  0x0000000002c69904: cmpq   $0x0,0x120(%rdi)
  0x0000000002c6990f: jne    0x0000000002c69928
  0x0000000002c69911: mov    %rsi,0x120(%rdi)
  0x0000000002c69918: movq   $0x1,0x128(%rdi)
  0x0000000002c69923: jmpq   0x0000000002c69930
  0x0000000002c69928: addq   $0x1,0x108(%rdi)
  0x0000000002c69930: mov    0x10(%rdx),%edx
  0x0000000002c69933: shl    $0x3,%rdx          ;*getfield language
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x0000000002c69937: movabs $0x76b7b3880,%r10  ;   {oop(&quot;tr&quot;)}
  0x0000000002c69941: cmp    %r10,%rdx
  0x0000000002c69944: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6994e: movabs $0x2d8,%rdi
  0x0000000002c69958: je     0x0000000002c69968
  0x0000000002c6995e: movabs $0x2e8,%rdi
  0x0000000002c69968: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c6996c: lea    0x1(%rbx),%rbx
  0x0000000002c69970: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c69974: je     0x0000000002c69a00  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x0000000002c6997a: movabs $0x76b7b38b0,%r10  ;   {oop(&quot;az&quot;)}
  0x0000000002c69984: cmp    %r10,%rdx
  0x0000000002c69987: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69991: movabs $0x2f8,%rdi
  0x0000000002c6999b: je     0x0000000002c699ab
  0x0000000002c699a1: movabs $0x308,%rdi
  0x0000000002c699ab: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c699af: lea    0x1(%rbx),%rbx
  0x0000000002c699b3: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c699b7: je     0x0000000002c69a00  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x0000000002c699bd: movabs $0x76b7b38e0,%r10  ;   {oop(&quot;lt&quot;)}
  0x0000000002c699c7: cmp    %r10,%rdx
  0x0000000002c699ca: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c699d4: movabs $0x318,%rsi
  0x0000000002c699de: jne    0x0000000002c699ee
  0x0000000002c699e4: movabs $0x328,%rsi
  0x0000000002c699ee: mov    (%rdx,%rsi,1),%rdi
  0x0000000002c699f2: lea    0x1(%rdi),%rdi
  0x0000000002c699f6: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002c699fa: jne    0x0000000002c69a1a  ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x0000000002c69a00: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69a0a: incl   0x338(%rdx)
  0x0000000002c69a10: mov    $0x1,%esi
  0x0000000002c69a15: jmpq   0x0000000002c69a1f  ;*goto
                                                ; - java.lang.String::toLowerCase@147 (line 2598)

  0x0000000002c69a1a: mov    $0x0,%esi          ;*istore
                                                ; - java.lang.String::toLowerCase@151 (line 2598)

  0x0000000002c69a1f: mov    0x80(%rsp),%rax
  0x0000000002c69a27: mov    0x64(%rsp),%edi
  0x0000000002c69a2b: mov    $0x0,%ebx          ;*iload
                                                ; - java.lang.String::toLowerCase@156 (line 2604)

  0x0000000002c69a30: mov    %ebx,0x90(%rsp)
  0x0000000002c69a37: mov    %rax,0x98(%rsp)
  0x0000000002c69a3f: mov    %esi,0x88(%rsp)
  0x0000000002c69a46: xchg   %ax,%ax
  0x0000000002c69a48: mov    0x68(%rsp),%rdx
  0x0000000002c69a4d: cmp    0x70(%rsp),%edi
  0x0000000002c69a51: movabs $0x1bdd3460,%rcx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69a5b: movabs $0x350,%r9
  0x0000000002c69a65: jge    0x0000000002c69a75
  0x0000000002c69a6b: movabs $0x360,%r9
  0x0000000002c69a75: mov    (%rcx,%r9,1),%r11
  0x0000000002c69a79: lea    0x1(%r11),%r11
  0x0000000002c69a7d: mov    %r11,(%rcx,%r9,1)
  0x0000000002c69a81: jge    0x0000000002c6a3f4  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x0000000002c69a87: mov    0xc(%rdx),%ecx
  0x0000000002c69a8a: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::toLowerCase@163 (line 2605)

  0x0000000002c69a8e: movslq %edi,%r9
  0x0000000002c69a91: cmp    0xc(%rcx),%edi     ; implicit exception: dispatches to 0x0000000002c6a602
  0x0000000002c69a94: jae    0x0000000002c6a60c
  0x0000000002c69a9a: movzwl 0x10(%rcx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x0000000002c69aa0: cmp    $0xd800,%ecx
  0x0000000002c69aa6: movabs $0x1bdd3460,%r9    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69ab0: movabs $0x370,%r11
  0x0000000002c69aba: jl     0x0000000002c69aca
  0x0000000002c69ac0: movabs $0x380,%r11
  0x0000000002c69aca: mov    (%r9,%r11,1),%r13
  0x0000000002c69ace: lea    0x1(%r13),%r13
  0x0000000002c69ad2: mov    %r13,(%r9,%r11,1)
  0x0000000002c69ad6: jl     0x0000000002c69b18  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x0000000002c69adc: cmp    $0xdbff,%ecx
  0x0000000002c69ae2: movabs $0x1bdd3460,%r9    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69aec: movabs $0x390,%r11
  0x0000000002c69af6: jg     0x0000000002c69b06
  0x0000000002c69afc: movabs $0x3a0,%r11
  0x0000000002c69b06: mov    (%r9,%r11,1),%r13
  0x0000000002c69b0a: lea    0x1(%r13),%r13
  0x0000000002c69b0e: mov    %r13,(%r9,%r11,1)
  0x0000000002c69b12: jle    0x0000000002c69b2a  ;*if_icmpgt
                                                ; - java.lang.String::toLowerCase@184 (line 2606)

  0x0000000002c69b18: mov    $0x1,%r11d
  0x0000000002c69b1e: mov    %edi,0x8c(%rsp)
  0x0000000002c69b25: jmpq   0x0000000002c69c8f  ;*iload
                                                ; - java.lang.String::toLowerCase@208 (line 2613)

  0x0000000002c69b2a: mov    %rdx,%rcx
  0x0000000002c69b2d: movabs $0x1bdd3460,%r9    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69b37: mov    0x8(%rcx),%ecx
  0x0000000002c69b3a: shl    $0x3,%rcx
  0x0000000002c69b3e: cmp    0x3b8(%r9),%rcx
  0x0000000002c69b45: jne    0x0000000002c69b54
  0x0000000002c69b47: addq   $0x1,0x3c0(%r9)
  0x0000000002c69b4f: jmpq   0x0000000002c69bba
  0x0000000002c69b54: cmp    0x3c8(%r9),%rcx
  0x0000000002c69b5b: jne    0x0000000002c69b6a
  0x0000000002c69b5d: addq   $0x1,0x3d0(%r9)
  0x0000000002c69b65: jmpq   0x0000000002c69bba
  0x0000000002c69b6a: cmpq   $0x0,0x3b8(%r9)
  0x0000000002c69b75: jne    0x0000000002c69b8e
  0x0000000002c69b77: mov    %rcx,0x3b8(%r9)
  0x0000000002c69b7e: movq   $0x1,0x3c0(%r9)
  0x0000000002c69b89: jmpq   0x0000000002c69bba
  0x0000000002c69b8e: cmpq   $0x0,0x3c8(%r9)
  0x0000000002c69b99: jne    0x0000000002c69bb2
  0x0000000002c69b9b: mov    %rcx,0x3c8(%r9)
  0x0000000002c69ba2: movq   $0x1,0x3d0(%r9)
  0x0000000002c69bad: jmpq   0x0000000002c69bba
  0x0000000002c69bb2: addq   $0x1,0x3b0(%r9)
  0x0000000002c69bba: mov    %rdi,%r8
  0x0000000002c69bbd: mov    %rdx,%r9
  0x0000000002c69bc0: mov    %r9,%rdx           ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@190 (line 2608)

  0x0000000002c69bc3: mov    %edi,0x8c(%rsp)
  0x0000000002c69bca: nop
  0x0000000002c69bcb: nop
  0x0000000002c69bcc: nop
  0x0000000002c69bcd: nop
  0x0000000002c69bce: nop
  0x0000000002c69bcf: callq  0x0000000002b961a0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=2964}
                                                ;*invokevirtual codePointAt
                                                ; - java.lang.String::toLowerCase@190 (line 2608)
                                                ;   {optimized virtual_call}
  0x0000000002c69bd4: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69bde: addq   $0x1,0x3e0(%rdx)
  0x0000000002c69be6: movabs $0x1bdd3dd0,%rdx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69bf0: mov    0xdc(%rdx),%r8d
  0x0000000002c69bf7: add    $0x8,%r8d
  0x0000000002c69bfb: mov    %r8d,0xdc(%rdx)
  0x0000000002c69c02: movabs $0x1bc08278,%rdx   ;   {metadata({method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69c0c: and    $0x7ffff8,%r8d
  0x0000000002c69c13: cmp    $0x0,%r8d
  0x0000000002c69c17: je     0x0000000002c6a615
  0x0000000002c69c1d: cmp    $0x10000,%eax
  0x0000000002c69c23: movabs $0x1bdd3dd0,%rdx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69c2d: movabs $0x108,%r8
  0x0000000002c69c37: jl     0x0000000002c69c47
  0x0000000002c69c3d: movabs $0x118,%r8
  0x0000000002c69c47: mov    (%rdx,%r8,1),%r9
  0x0000000002c69c4b: lea    0x1(%r9),%r9
  0x0000000002c69c4f: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69c53: jl     0x0000000002c69c73  ;*if_icmplt
                                                ; - java.lang.Character::charCount@3 (line 4818)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x0000000002c69c59: movabs $0x1bdd3dd0,%rdx   ;   {metadata(method data for {method} {0x000000001bc08280} &apos;charCount&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69c63: incl   0x128(%rdx)
  0x0000000002c69c69: mov    $0x2,%edx
  0x0000000002c69c6e: jmpq   0x0000000002c69c78  ;*goto
                                                ; - java.lang.Character::charCount@7 (line 4818)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x0000000002c69c73: mov    $0x1,%edx          ;*ireturn
                                                ; - java.lang.Character::charCount@11 (line 4818)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)

  0x0000000002c69c78: movabs $0x1bdd3460,%r8    ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69c82: incl   0x3f0(%r8)
  0x0000000002c69c89: mov    %rdx,%r11
  0x0000000002c69c8c: mov    %rax,%rcx          ;*goto
                                                ; - java.lang.String::toLowerCase@202 (line 2609)

  0x0000000002c69c8f: mov    0x88(%rsp),%esi
  0x0000000002c69c96: cmp    $0x0,%esi
  0x0000000002c69c99: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69ca3: movabs $0x408,%r8
  0x0000000002c69cad: jne    0x0000000002c69cbd
  0x0000000002c69cb3: movabs $0x418,%r8
  0x0000000002c69cbd: mov    (%rdx,%r8,1),%r9
  0x0000000002c69cc1: lea    0x1(%r9),%r9
  0x0000000002c69cc5: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69cc9: jne    0x0000000002c69d47  ;*ifne
                                                ; - java.lang.String::toLowerCase@210 (line 2613)

  0x0000000002c69ccf: cmp    $0x3a3,%ecx
  0x0000000002c69cd5: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69cdf: movabs $0x428,%r8
  0x0000000002c69ce9: je     0x0000000002c69cf9
  0x0000000002c69cef: movabs $0x438,%r8
  0x0000000002c69cf9: mov    (%rdx,%r8,1),%r9
  0x0000000002c69cfd: lea    0x1(%r9),%r9
  0x0000000002c69d01: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69d05: je     0x0000000002c69d47  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x0000000002c69d0b: cmp    $0x130,%ecx
  0x0000000002c69d11: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69d1b: movabs $0x448,%r8
  0x0000000002c69d25: jne    0x0000000002c69d35
  0x0000000002c69d2b: movabs $0x458,%r8
  0x0000000002c69d35: mov    (%rdx,%r8,1),%r9
  0x0000000002c69d39: lea    0x1(%r9),%r9
  0x0000000002c69d3d: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69d41: jne    0x0000000002c69d99  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x0000000002c69d47: mov    %r11d,0x94(%rsp)
  0x0000000002c69d4f: mov    %esi,0x88(%rsp)
  0x0000000002c69d56: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69d60: addq   $0x1,0x468(%rdx)
  0x0000000002c69d68: mov    0x68(%rsp),%rdx
  0x0000000002c69d6d: mov    0x8c(%rsp),%r8d
  0x0000000002c69d75: mov    0x78(%rsp),%r9     ;*invokestatic toLowerCaseEx
                                                ; - java.lang.String::toLowerCase@233 (line 2616)

  0x0000000002c69d7a: nop
  0x0000000002c69d7b: nop
  0x0000000002c69d7c: nop
  0x0000000002c69d7d: nop
  0x0000000002c69d7e: nop
  0x0000000002c69d7f: callq  0x0000000002b96620  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3396}
                                                ;*invokestatic toLowerCaseEx
                                                ; - java.lang.String::toLowerCase@233 (line 2616)
                                                ;   {static_call}
  0x0000000002c69d84: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69d8e: incl   0x478(%rdx)
  0x0000000002c69d94: jmpq   0x0000000002c69ec4  ;*goto
                                                ; - java.lang.String::toLowerCase@238 (line 2616)

  0x0000000002c69d99: mov    %r11d,0x94(%rsp)
  0x0000000002c69da1: mov    %esi,0x88(%rsp)
  0x0000000002c69da8: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69db2: addq   $0x1,0x490(%rdx)
  0x0000000002c69dba: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69dc4: mov    0xdc(%rdx),%esi
  0x0000000002c69dca: add    $0x8,%esi
  0x0000000002c69dcd: mov    %esi,0xdc(%rdx)
  0x0000000002c69dd3: movabs $0x1bc0a468,%rdx   ;   {metadata({method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69ddd: and    $0x7ffff8,%esi
  0x0000000002c69de3: cmp    $0x0,%esi
  0x0000000002c69de6: je     0x0000000002c6a62c
  0x0000000002c69dec: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69df6: addq   $0x1,0x108(%rdx)
  0x0000000002c69dfe: mov    %rcx,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002c69e01: mov    %ecx,0xa0(%rsp)
  0x0000000002c69e08: nop
  0x0000000002c69e09: nop
  0x0000000002c69e0a: nop
  0x0000000002c69e0b: nop
  0x0000000002c69e0c: nop
  0x0000000002c69e0d: nop
  0x0000000002c69e0e: nop
  0x0000000002c69e0f: callq  0x0000000002b96620  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3540}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {static_call}
  0x0000000002c69e14: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c6a643
  0x0000000002c69e17: mov    %rax,%r8
  0x0000000002c69e1a: movabs $0x1bd42228,%rdx   ;   {metadata(method data for {method} {0x000000001bc0a470} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c69e24: mov    0x8(%r8),%r8d
  0x0000000002c69e28: shl    $0x3,%r8
  0x0000000002c69e2c: cmp    0x120(%rdx),%r8
  0x0000000002c69e33: jne    0x0000000002c69e42
  0x0000000002c69e35: addq   $0x1,0x128(%rdx)
  0x0000000002c69e3d: jmpq   0x0000000002c69ea8
  0x0000000002c69e42: cmp    0x130(%rdx),%r8
  0x0000000002c69e49: jne    0x0000000002c69e58
  0x0000000002c69e4b: addq   $0x1,0x138(%rdx)
  0x0000000002c69e53: jmpq   0x0000000002c69ea8
  0x0000000002c69e58: cmpq   $0x0,0x120(%rdx)
  0x0000000002c69e63: jne    0x0000000002c69e7c
  0x0000000002c69e65: mov    %r8,0x120(%rdx)
  0x0000000002c69e6c: movq   $0x1,0x128(%rdx)
  0x0000000002c69e77: jmpq   0x0000000002c69ea8
  0x0000000002c69e7c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c69e87: jne    0x0000000002c69ea0
  0x0000000002c69e89: mov    %r8,0x130(%rdx)
  0x0000000002c69e90: movq   $0x1,0x138(%rdx)
  0x0000000002c69e9b: jmpq   0x0000000002c69ea8
  0x0000000002c69ea0: addq   $0x1,0x118(%rdx)
  0x0000000002c69ea8: mov    0xa0(%rsp),%r8d
  0x0000000002c69eb0: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002c69eb3: nop
  0x0000000002c69eb4: nop
  0x0000000002c69eb5: movabs $0xffffffffffffffff,%rax
  0x0000000002c69ebf: callq  0x0000000002b963e0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3716}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {virtual_call}
  0x0000000002c69ec4: cmp    $0xffffffff,%eax
  0x0000000002c69ec7: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69ed1: movabs $0x4a0,%r8
  0x0000000002c69edb: je     0x0000000002c69eeb
  0x0000000002c69ee1: movabs $0x4b0,%r8
  0x0000000002c69eeb: mov    (%rdx,%r8,1),%r9
  0x0000000002c69eef: lea    0x1(%r9),%r9
  0x0000000002c69ef3: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69ef7: je     0x0000000002c69f39  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x0000000002c69efd: cmp    $0x10000,%eax
  0x0000000002c69f03: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69f0d: movabs $0x4c0,%r8
  0x0000000002c69f17: jl     0x0000000002c69f27
  0x0000000002c69f1d: movabs $0x4d0,%r8
  0x0000000002c69f27: mov    (%rdx,%r8,1),%r9
  0x0000000002c69f2b: lea    0x1(%r9),%r9
  0x0000000002c69f2f: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69f33: jl     0x0000000002c6a34c  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)

  0x0000000002c69f39: cmp    $0xffffffff,%eax
  0x0000000002c69f3c: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69f46: movabs $0x4e0,%r8
  0x0000000002c69f50: jne    0x0000000002c69f60
  0x0000000002c69f56: movabs $0x4f0,%r8
  0x0000000002c69f60: mov    (%rdx,%r8,1),%r9
  0x0000000002c69f64: lea    0x1(%r9),%r9
  0x0000000002c69f68: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69f6c: jne    0x0000000002c69fb1  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@264 (line 2622)

  0x0000000002c69f72: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69f7c: addq   $0x1,0x500(%rdx)
  0x0000000002c69f84: mov    0x68(%rsp),%rdx
  0x0000000002c69f89: mov    0x8c(%rsp),%r8d
  0x0000000002c69f91: mov    0x78(%rsp),%r9     ;*invokestatic toLowerCaseCharArray
                                                ; - java.lang.String::toLowerCase@271 (line 2624)

  0x0000000002c69f96: nop
  0x0000000002c69f97: callq  0x0000000002b96620  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=3932}
                                                ;*invokestatic toLowerCaseCharArray
                                                ; - java.lang.String::toLowerCase@271 (line 2624)
                                                ;   {static_call}
  0x0000000002c69f9c: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69fa6: incl   0x510(%rdx)
  0x0000000002c69fac: jmpq   0x0000000002c6a07c  ;*goto
                                                ; - java.lang.String::toLowerCase@276 (line 2624)

  0x0000000002c69fb1: mov    0x94(%rsp),%r11d
  0x0000000002c69fb9: cmp    $0x2,%r11d
  0x0000000002c69fbd: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c69fc7: movabs $0x528,%r8
  0x0000000002c69fd1: jne    0x0000000002c69fe1
  0x0000000002c69fd7: movabs $0x538,%r8
  0x0000000002c69fe1: mov    (%rdx,%r8,1),%r9
  0x0000000002c69fe5: lea    0x1(%r9),%r9
  0x0000000002c69fe9: mov    %r9,(%rdx,%r8,1)
  0x0000000002c69fed: mov    %r11d,0x94(%rsp)
  0x0000000002c69ff5: jne    0x0000000002c6a05f  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@282 (line 2625)

  0x0000000002c69ffb: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a005: addq   $0x1,0x548(%rdx)
  0x0000000002c6a00d: mov    0x90(%rsp),%ebx
  0x0000000002c6a014: add    0x8c(%rsp),%ebx
  0x0000000002c6a01b: mov    %rax,%rdx
  0x0000000002c6a01e: mov    0x98(%rsp),%r8
  0x0000000002c6a026: mov    %rbx,%r9           ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@296 (line 2626)

  0x0000000002c6a029: nop
  0x0000000002c6a02a: nop
  0x0000000002c6a02b: nop
  0x0000000002c6a02c: nop
  0x0000000002c6a02d: nop
  0x0000000002c6a02e: nop
  0x0000000002c6a02f: callq  0x0000000002b96620  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=4084}
                                                ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@296 (line 2626)
                                                ;   {static_call}
  0x0000000002c6a034: sub    0x94(%rsp),%eax
  0x0000000002c6a03b: add    0x90(%rsp),%eax
  0x0000000002c6a042: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a04c: incl   0x558(%rdx)
  0x0000000002c6a052: mov    0x98(%rsp),%rsi
  0x0000000002c6a05a: jmpq   0x0000000002c6a37f  ;*goto
                                                ; - java.lang.String::toLowerCase@305 (line 2627)

  0x0000000002c6a05f: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a069: addq   $0x1,0x570(%rdx)
  0x0000000002c6a071: mov    %rax,%rdx          ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@310 (line 2629)

  0x0000000002c6a074: nop
  0x0000000002c6a075: nop
  0x0000000002c6a076: nop
  0x0000000002c6a077: callq  0x0000000002b96620  ; OopMap{[104]=Oop [120]=Oop [152]=Oop off=4156}
                                                ;*invokestatic toChars
                                                ; - java.lang.String::toLowerCase@310 (line 2629)
                                                ;   {static_call}
  0x0000000002c6a07c: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::toLowerCase@317 (line 2633)
                                                ; implicit exception: dispatches to 0x0000000002c6a648
  0x0000000002c6a080: cmp    0x94(%rsp),%r11d
  0x0000000002c6a088: movabs $0x1bdd3460,%rbx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a092: movabs $0x580,%rdx
  0x0000000002c6a09c: jle    0x0000000002c6a0ac
  0x0000000002c6a0a2: movabs $0x590,%rdx
  0x0000000002c6a0ac: mov    (%rbx,%rdx,1),%rsi
  0x0000000002c6a0b0: lea    0x1(%rsi),%rsi
  0x0000000002c6a0b4: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002c6a0b8: jg     0x0000000002c6a0db  ;*if_icmple
                                                ; - java.lang.String::toLowerCase@324 (line 2634)

  0x0000000002c6a0be: mov    0x98(%rsp),%rsi
  0x0000000002c6a0c6: mov    %r11d,0xa4(%rsp)
  0x0000000002c6a0ce: mov    %rax,0xb0(%rsp)
  0x0000000002c6a0d6: jmpq   0x0000000002c6a259  ;*iconst_0
                                                ; - java.lang.String::toLowerCase@358 (line 2639)

  0x0000000002c6a0db: mov    %rax,0xb0(%rsp)
  0x0000000002c6a0e3: mov    0x98(%rsp),%r8
  0x0000000002c6a0eb: mov    0xc(%r8),%ebx      ;*arraylength
                                                ; - java.lang.String::toLowerCase@329 (line 2635)
                                                ; implicit exception: dispatches to 0x0000000002c6a64d
  0x0000000002c6a0ef: add    %r11d,%ebx
  0x0000000002c6a0f2: sub    0x94(%rsp),%ebx
  0x0000000002c6a0f9: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c6a103: movslq %ebx,%rbx
  0x0000000002c6a106: mov    %rbx,%rdi
  0x0000000002c6a109: cmp    $0xffffff,%rbx
  0x0000000002c6a110: ja     0x0000000002c6a652
  0x0000000002c6a116: movabs $0x17,%rsi
  0x0000000002c6a120: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c6a124: and    $0xfffffffffffffff8,%rsi
  0x0000000002c6a128: mov    0x60(%r15),%rax
  0x0000000002c6a12c: lea    (%rax,%rsi,1),%rsi
  0x0000000002c6a130: cmp    0x70(%r15),%rsi
  0x0000000002c6a134: ja     0x0000000002c6a652
  0x0000000002c6a13a: mov    %rsi,0x60(%r15)
  0x0000000002c6a13e: sub    %rax,%rsi
  0x0000000002c6a141: movq   $0x1,(%rax)
  0x0000000002c6a148: mov    %rdx,%rcx
  0x0000000002c6a14b: shr    $0x3,%rcx
  0x0000000002c6a14f: mov    %ecx,0x8(%rax)
  0x0000000002c6a152: mov    %ebx,0xc(%rax)
  0x0000000002c6a155: sub    $0x10,%rsi
  0x0000000002c6a159: je     0x0000000002c6a170
  0x0000000002c6a15f: xor    %rbx,%rbx
  0x0000000002c6a162: shr    $0x3,%rsi
  0x0000000002c6a166: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c6a16b: dec    %rsi
  0x0000000002c6a16e: jne    0x0000000002c6a166  ;*newarray
                                                ; - java.lang.String::toLowerCase@336 (line 2635)

  0x0000000002c6a170: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a17a: addq   $0x1,0x5a0(%rdx)
  0x0000000002c6a182: mov    0x90(%rsp),%ebx
  0x0000000002c6a189: add    0x8c(%rsp),%ebx
  0x0000000002c6a190: mov    %r8,%rdx
  0x0000000002c6a193: mov    $0x0,%r8d
  0x0000000002c6a199: mov    %rax,%r9
  0x0000000002c6a19c: mov    $0x0,%edi
  0x0000000002c6a1a1: mov    %rbx,%rsi
  0x0000000002c6a1a4: mov    %r11d,0xa4(%rsp)
  0x0000000002c6a1ac: mov    %rax,0xa8(%rsp)
  0x0000000002c6a1b4: mov    0x8(%r9),%ecx
  0x0000000002c6a1b8: shl    $0x3,%rcx
  0x0000000002c6a1bc: cmpl   $0x0,0x8(%rcx)
  0x0000000002c6a1c3: jge    0x0000000002c6a65c
  0x0000000002c6a1c9: mov    0x8(%rdx),%ecx
  0x0000000002c6a1cc: shl    $0x3,%rcx
  0x0000000002c6a1d0: cmpl   $0x0,0x8(%rcx)
  0x0000000002c6a1d7: jge    0x0000000002c6a65c
  0x0000000002c6a1dd: lea    (%r8,%rsi,1),%rcx
  0x0000000002c6a1e1: cmp    0xc(%rdx),%ecx
  0x0000000002c6a1e4: ja     0x0000000002c6a65c
  0x0000000002c6a1ea: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c6a1ee: cmp    0xc(%r9),%ecx
  0x0000000002c6a1f2: ja     0x0000000002c6a65c
  0x0000000002c6a1f8: test   %esi,%esi
  0x0000000002c6a1fa: jl     0x0000000002c6a65c
  0x0000000002c6a200: je     0x0000000002c6a251
  0x0000000002c6a206: movslq %r8d,%r8
  0x0000000002c6a209: movslq %edi,%rdi
  0x0000000002c6a20c: mov    0x8(%rdx),%ecx
  0x0000000002c6a20f: cmp    0x8(%r9),%ecx
  0x0000000002c6a213: jne    0x0000000002c6a65c
  0x0000000002c6a219: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c6a21e: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c6a223: mov    %rsi,%r8
  0x0000000002c6a226: sub    $0x20,%rsp
  0x0000000002c6a22a: test   $0xf,%esp
  0x0000000002c6a230: je     0x0000000002c6a248
  0x0000000002c6a236: sub    $0x8,%rsp
  0x0000000002c6a23a: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6a23f: add    $0x8,%rsp
  0x0000000002c6a243: jmpq   0x0000000002c6a24d
  0x0000000002c6a248: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6a24d: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@351 (line 2636)

  0x0000000002c6a251: mov    0xa8(%rsp),%rsi    ;*iconst_0
                                                ; - java.lang.String::toLowerCase@358 (line 2639)

  0x0000000002c6a259: mov    $0x0,%edx
  0x0000000002c6a25e: mov    0xa4(%rsp),%r11d
  0x0000000002c6a266: mov    0xb0(%rsp),%rax
  0x0000000002c6a26e: jmpq   0x0000000002c6a2eb  ;*iload
                                                ; - java.lang.String::toLowerCase@361 (line 2639)

  0x0000000002c6a273: nopl   0x0(%rax,%rax,1)
  0x0000000002c6a278: movslq %edx,%rdi
  0x0000000002c6a27b: movzwl 0x10(%rax,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::toLowerCase@382 (line 2640)

  0x0000000002c6a280: mov    0x90(%rsp),%ebx
  0x0000000002c6a287: add    0x8c(%rsp),%ebx
  0x0000000002c6a28e: add    %edx,%ebx
  0x0000000002c6a290: movslq %ebx,%rcx
  0x0000000002c6a293: cmp    0xc(%rsi),%ebx     ; implicit exception: dispatches to 0x0000000002c6a669
  0x0000000002c6a296: jae    0x0000000002c6a673
  0x0000000002c6a29c: mov    %di,0x10(%rsi,%rcx,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)

  0x0000000002c6a2a1: inc    %edx
  0x0000000002c6a2a3: movabs $0x1bdd3460,%rdi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a2ad: mov    0xe0(%rdi),%ecx
  0x0000000002c6a2b3: add    $0x8,%ecx
  0x0000000002c6a2b6: mov    %ecx,0xe0(%rdi)
  0x0000000002c6a2bc: movabs $0x1bb768d0,%rdi   ;   {metadata({method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a2c6: and    $0xfff8,%ecx
  0x0000000002c6a2cc: cmp    $0x0,%ecx
  0x0000000002c6a2cf: je     0x0000000002c6a67c  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=4757}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)

  0x0000000002c6a2d5: test   %eax,-0x1e4a1db(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6a2db: movabs $0x1bdd3460,%rdi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a2e5: incl   0x5d0(%rdi)        ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)

  0x0000000002c6a2eb: cmp    %r11d,%edx
  0x0000000002c6a2ee: movabs $0x1bdd3460,%rdi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a2f8: movabs $0x5b0,%rcx
  0x0000000002c6a302: jge    0x0000000002c6a312
  0x0000000002c6a308: movabs $0x5c0,%rcx
  0x0000000002c6a312: mov    (%rdi,%rcx,1),%r8
  0x0000000002c6a316: lea    0x1(%r8),%r8
  0x0000000002c6a31a: mov    %r8,(%rdi,%rcx,1)
  0x0000000002c6a31e: jl     0x0000000002c6a278  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@365 (line 2639)

  0x0000000002c6a324: sub    0x94(%rsp),%r11d
  0x0000000002c6a32c: add    0x90(%rsp),%r11d
  0x0000000002c6a334: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a33e: incl   0x5e8(%rdx)
  0x0000000002c6a344: mov    %r11,%rax
  0x0000000002c6a347: jmpq   0x0000000002c6a37f  ;*goto
                                                ; - java.lang.String::toLowerCase@400 (line 2643)

  0x0000000002c6a34c: mov    0x98(%rsp),%r8
  0x0000000002c6a354: mov    0x90(%rsp),%ebx
  0x0000000002c6a35b: add    0x8c(%rsp),%ebx
  0x0000000002c6a362: movslq %ebx,%rdx
  0x0000000002c6a365: cmp    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x0000000002c6a693
  0x0000000002c6a369: jae    0x0000000002c6a69d
  0x0000000002c6a36f: mov    %ax,0x10(%r8,%rdx,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)

  0x0000000002c6a375: mov    0x90(%rsp),%eax
  0x0000000002c6a37c: mov    %r8,%rsi           ;*iload
                                                ; - java.lang.String::toLowerCase@414 (line 2604)

  0x0000000002c6a37f: mov    0x94(%rsp),%r11d
  0x0000000002c6a387: add    0x8c(%rsp),%r11d
  0x0000000002c6a38f: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a399: mov    0xe0(%rdx),%edi
  0x0000000002c6a39f: add    $0x8,%edi
  0x0000000002c6a3a2: mov    %edi,0xe0(%rdx)
  0x0000000002c6a3a8: movabs $0x1bb768d0,%rdx   ;   {metadata({method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a3b2: and    $0xfff8,%edi
  0x0000000002c6a3b8: cmp    $0x0,%edi
  0x0000000002c6a3bb: je     0x0000000002c6a6a6  ; OopMap{[104]=Oop [120]=Oop rsi=Oop off=4993}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)

  0x0000000002c6a3c1: test   %eax,-0x1e4a2c7(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6a3c7: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a3d1: incl   0x600(%rdx)
  0x0000000002c6a3d7: mov    %r11,%rdi
  0x0000000002c6a3da: mov    %rax,%rbx
  0x0000000002c6a3dd: mov    %rsi,%r8
  0x0000000002c6a3e0: mov    %ebx,0x90(%rsp)
  0x0000000002c6a3e7: mov    %r8,0x98(%rsp)
  0x0000000002c6a3ef: jmpq   0x0000000002c69a48  ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)

  0x0000000002c6a3f4: mov    0x90(%rsp),%ebx
  0x0000000002c6a3fb: mov    0x98(%rsp),%r8
  0x0000000002c6a403: mov    0x70(%rsp),%r9d
  0x0000000002c6a408: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c6a412: mov    0x60(%r15),%rax
  0x0000000002c6a416: lea    0x18(%rax),%rdi
  0x0000000002c6a41a: cmp    0x70(%r15),%rdi
  0x0000000002c6a41e: ja     0x0000000002c6a6bd
  0x0000000002c6a424: mov    %rdi,0x60(%r15)
  0x0000000002c6a428: mov    0xa8(%rdx),%rcx
  0x0000000002c6a42f: mov    %rcx,(%rax)
  0x0000000002c6a432: mov    %rdx,%rcx
  0x0000000002c6a435: shr    $0x3,%rcx
  0x0000000002c6a439: mov    %ecx,0x8(%rax)
  0x0000000002c6a43c: xor    %rcx,%rcx
  0x0000000002c6a43f: mov    %ecx,0xc(%rax)
  0x0000000002c6a442: xor    %rcx,%rcx
  0x0000000002c6a445: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)

  0x0000000002c6a449: mov    %rax,%rdi
  0x0000000002c6a44c: movabs $0x1bdd3460,%rdx   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a456: addq   $0x1,0x618(%rdx)
  0x0000000002c6a45e: add    %r9d,%ebx
  0x0000000002c6a461: mov    $0x0,%r9d
  0x0000000002c6a467: mov    %rbx,%rdi
  0x0000000002c6a46a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x0000000002c6a46d: mov    %rax,0xb8(%rsp)
  0x0000000002c6a475: nop
  0x0000000002c6a476: nop
  0x0000000002c6a477: callq  0x0000000002b961a0  ; OopMap{[184]=Oop off=5180}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@435 (line 2647)
                                                ;   {optimized virtual_call}
  0x0000000002c6a47c: mov    0xb8(%rsp),%rax
  0x0000000002c6a484: add    $0xd0,%rsp
  0x0000000002c6a48b: pop    %rbp
  0x0000000002c6a48c: test   %eax,-0x1e4a392(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6a492: retq                      ;*areturn
                                                ; - java.lang.String::toLowerCase@438 (line 2647)

  0x0000000002c6a493: mov    %rdx,%rax
  0x0000000002c6a496: add    $0xd0,%rsp
  0x0000000002c6a49d: pop    %rbp
  0x0000000002c6a49e: test   %eax,-0x1e4a3a4(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6a4a4: retq                      ;*areturn
                                                ; - java.lang.String::toLowerCase@98 (line 2587)

  0x0000000002c6a4a5: data16 xchg %ax,%ax
  0x0000000002c6a4a8: jmpq   0x0000000002c6a6d9  ;   {no_reloc}
  0x0000000002c6a4ad: add    %al,(%rax)
  0x0000000002c6a4af: add    %al,(%rax)
  0x0000000002c6a4b1: add    %cl,-0x75(%rcx)
  0x0000000002c6a4b4: rex.RXB (bad) 
  0x0000000002c6a4b6: lea    0x20(%rax),%rdi
  0x0000000002c6a4ba: cmp    0x70(%r15),%rdi
  0x0000000002c6a4be: ja     0x0000000002c6a6e3
  0x0000000002c6a4c4: mov    %rdi,0x60(%r15)
  0x0000000002c6a4c8: mov    0xa8(%rdx),%rcx
  0x0000000002c6a4cf: mov    %rcx,(%rax)
  0x0000000002c6a4d2: mov    %rdx,%rcx
  0x0000000002c6a4d5: shr    $0x3,%rcx
  0x0000000002c6a4d9: mov    %ecx,0x8(%rax)
  0x0000000002c6a4dc: xor    %rcx,%rcx
  0x0000000002c6a4df: mov    %ecx,0xc(%rax)
  0x0000000002c6a4e2: xor    %rcx,%rcx
  0x0000000002c6a4e5: mov    %rcx,0x10(%rax)
  0x0000000002c6a4e9: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)

  0x0000000002c6a4ed: mov    %rax,%rdx
  0x0000000002c6a4f0: movabs $0x1bdd3460,%rsi   ;   {metadata(method data for {method} {0x000000001bb768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6a4fa: addq   $0x1,0x128(%rsi)
  0x0000000002c6a502: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@8 (line 2563)

  0x0000000002c6a505: mov    %rax,0xc0(%rsp)
  0x0000000002c6a50d: nop
  0x0000000002c6a50e: nop
  0x0000000002c6a50f: callq  0x0000000002b961a0  ; OopMap{[192]=Oop off=5332}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::toLowerCase@8 (line 2563)
                                                ;   {optimized virtual_call}
  0x0000000002c6a514: mov    0xc0(%rsp),%rax
  0x0000000002c6a51c: jmpq   0x0000000002c6a71b
  0x0000000002c6a521: mov    %rsi,0x8(%rsp)
  0x0000000002c6a526: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a52e: callq  0x0000000002c58220  ; OopMap{rdx=Oop [104]=Oop r8=Oop [120]=Oop off=5363}
                                                ;*synchronization entry
                                                ; - java.lang.String::toLowerCase@-1 (line 2562)
                                                ;   {runtime_call}
  0x0000000002c6a533: jmpq   0x0000000002c690ab
  0x0000000002c6a538: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [104]=Oop r8=Oop [120]=Oop off=5373}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ;   {runtime_call}
  0x0000000002c6a53d: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5378}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x0000000002c6a542: callq  0x0000000002c539c0  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5383}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x0000000002c6a547: mov    %rdi,(%rsp)
  0x0000000002c6a54b: callq  0x0000000002c53300  ; OopMap{rdx=Oop [104]=Oop [120]=Oop rbx=Oop off=5392}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)
                                                ;   {runtime_call}
  0x0000000002c6a550: mov    %rax,0x8(%rsp)
  0x0000000002c6a555: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a55d: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop off=5410}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002c6a562: jmpq   0x0000000002c69208
  0x0000000002c6a567: mov    %rax,0x8(%rsp)
  0x0000000002c6a56c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a574: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop off=5433}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002c6a579: jmpq   0x0000000002c6924c
  0x0000000002c6a57e: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop rax=Oop off=5443}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002c6a583: mov    %rdx,0x8(%rsp)
  0x0000000002c6a588: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a590: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop off=5461}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {runtime_call}
  0x0000000002c6a595: jmpq   0x0000000002c69458
  0x0000000002c6a59a: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop rax=Oop off=5471}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@58 (line 2576)
                                                ;   {runtime_call}
  0x0000000002c6a59f: mov    %rdx,0x8(%rsp)
  0x0000000002c6a5a4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a5ac: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop off=5489}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4818)
                                                ; - java.lang.String::toLowerCase@70 (line 2579)
                                                ;   {runtime_call}
  0x0000000002c6a5b1: jmpq   0x0000000002c695ac
  0x0000000002c6a5b6: mov    %rbx,0x8(%rsp)
  0x0000000002c6a5bb: movq   $0x5e,(%rsp)
  0x0000000002c6a5c3: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop off=5512}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@94 (line 2586)
                                                ;   {runtime_call}
  0x0000000002c6a5c8: jmpq   0x0000000002c69650
  0x0000000002c6a5cd: callq  0x0000000002c54a40  ; OopMap{[120]=Oop r11=Oop [104]=Oop off=5522}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)
                                                ;   {runtime_call}
  0x0000000002c6a5d2: jmpq   0x0000000002c69723
  0x0000000002c6a5d7: callq  0x0000000002b96620  ; OopMap{[104]=Oop [128]=Oop [120]=Oop off=5532}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)
                                                ;   {static_call}
  0x0000000002c6a5dc: jmpq   0x0000000002c697cb
  0x0000000002c6a5e1: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop off=5542}
                                                ;*invokevirtual getLanguage
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x0000000002c6a5e6: mov    %rdx,0x8(%rsp)
  0x0000000002c6a5eb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a5f3: callq  0x0000000002c58220  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop off=5560}
                                                ;*synchronization entry
                                                ; - java.util.Locale::getLanguage@-1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x0000000002c6a5f8: jmpq   0x0000000002c69895
  0x0000000002c6a5fd: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [128]=Oop r8=Oop [120]=Oop rdx=Oop off=5570}
                                                ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x0000000002c6a602: callq  0x0000000002c539c0  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5575}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x0000000002c6a607: callq  0x0000000002c539c0  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5580}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x0000000002c6a60c: mov    %rdi,(%rsp)
  0x0000000002c6a610: callq  0x0000000002c53300  ; OopMap{[152]=Oop [120]=Oop rdx=Oop [104]=Oop rcx=Oop off=5589}
                                                ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ;   {runtime_call}
  0x0000000002c6a615: mov    %rdx,0x8(%rsp)
  0x0000000002c6a61a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a622: callq  0x0000000002c58220  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=5607}
                                                ;*synchronization entry
                                                ; - java.lang.Character::charCount@-1 (line 4818)
                                                ; - java.lang.String::toLowerCase@197 (line 2609)
                                                ;   {runtime_call}
  0x0000000002c6a627: jmpq   0x0000000002c69c1d
  0x0000000002c6a62c: mov    %rdx,0x8(%rsp)
  0x0000000002c6a631: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6a639: callq  0x0000000002c58220  ; OopMap{[104]=Oop [152]=Oop [120]=Oop off=5630}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x0000000002c6a63e: jmpq   0x0000000002c69dec
  0x0000000002c6a643: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [152]=Oop [120]=Oop rax=Oop off=5640}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x0000000002c6a648: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop [152]=Oop rax=Oop off=5645}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@317 (line 2633)
                                                ;   {runtime_call}
  0x0000000002c6a64d: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop r8=Oop [176]=Oop off=5650}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@329 (line 2635)
                                                ;   {runtime_call}
  0x0000000002c6a652: callq  0x0000000002c54a40  ; OopMap{[104]=Oop [120]=Oop r8=Oop [176]=Oop off=5655}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@336 (line 2635)
                                                ;   {runtime_call}
  0x0000000002c6a657: jmpq   0x0000000002c6a170
  0x0000000002c6a65c: nop
  0x0000000002c6a65d: nop
  0x0000000002c6a65e: nop
  0x0000000002c6a65f: callq  0x0000000002b96620  ; OopMap{[104]=Oop [120]=Oop [168]=Oop [176]=Oop off=5668}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@351 (line 2636)
                                                ;   {static_call}
  0x0000000002c6a664: jmpq   0x0000000002c6a251
  0x0000000002c6a669: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5678}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x0000000002c6a66e: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5683}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x0000000002c6a673: mov    %rbx,(%rsp)
  0x0000000002c6a677: callq  0x0000000002c53300  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5692}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@383 (line 2640)
                                                ;   {runtime_call}
  0x0000000002c6a67c: mov    %rdi,0x8(%rsp)
  0x0000000002c6a681: movq   $0x183,(%rsp)
  0x0000000002c6a689: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop rsi=Oop rax=Oop off=5710}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@387 (line 2639)
                                                ;   {runtime_call}
  0x0000000002c6a68e: jmpq   0x0000000002c6a2d5
  0x0000000002c6a693: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5720}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x0000000002c6a698: callq  0x0000000002c539c0  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5725}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x0000000002c6a69d: mov    %rbx,(%rsp)
  0x0000000002c6a6a1: callq  0x0000000002c53300  ; OopMap{[104]=Oop [120]=Oop r8=Oop off=5734}
                                                ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)
                                                ;   {runtime_call}
  0x0000000002c6a6a6: mov    %rdx,0x8(%rsp)
  0x0000000002c6a6ab: movq   $0x1a5,(%rsp)
  0x0000000002c6a6b3: callq  0x0000000002c58220  ; OopMap{[104]=Oop [120]=Oop rsi=Oop off=5752}
                                                ;*goto
                                                ; - java.lang.String::toLowerCase@421 (line 2604)
                                                ;   {runtime_call}
  0x0000000002c6a6b8: jmpq   0x0000000002c6a3c1
  0x0000000002c6a6bd: mov    %rdx,%rdx
  0x0000000002c6a6c0: callq  0x0000000002c54140  ; OopMap{r8=Oop off=5765}
                                                ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)
                                                ;   {runtime_call}
  0x0000000002c6a6c5: jmpq   0x0000000002c6a449
  0x0000000002c6a6ca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c6a6d4: mov    $0xa050f00,%eax
  0x0000000002c6a6d9: callq  0x0000000002c57160  ; OopMap{off=5790}
                                                ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)
                                                ;   {runtime_call}
  0x0000000002c6a6de: jmpq   0x0000000002c6a4a8
  0x0000000002c6a6e3: mov    %rdx,%rdx
  0x0000000002c6a6e6: callq  0x0000000002c54140  ; OopMap{off=5803}
                                                ;*new  ; - java.lang.String::toLowerCase@4 (line 2563)
                                                ;   {runtime_call}
  0x0000000002c6a6eb: jmpq   0x0000000002c6a4ed
  0x0000000002c6a6f0: nop
  0x0000000002c6a6f1: nop
  0x0000000002c6a6f2: mov    0x2a8(%r15),%rax
  0x0000000002c6a6f9: movabs $0x0,%r10
  0x0000000002c6a703: mov    %r10,0x2a8(%r15)
  0x0000000002c6a70a: movabs $0x0,%r10
  0x0000000002c6a714: mov    %r10,0x2b0(%r15)
  0x0000000002c6a71b: add    $0xd0,%rsp
  0x0000000002c6a722: pop    %rbp
  0x0000000002c6a723: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6a728: hlt    
  0x0000000002c6a729: hlt    
  0x0000000002c6a72a: hlt    
  0x0000000002c6a72b: hlt    
  0x0000000002c6a72c: hlt    
  0x0000000002c6a72d: hlt    
  0x0000000002c6a72e: hlt    
  0x0000000002c6a72f: hlt    
  0x0000000002c6a730: hlt    
  0x0000000002c6a731: hlt    
  0x0000000002c6a732: hlt    
  0x0000000002c6a733: hlt    
  0x0000000002c6a734: hlt    
  0x0000000002c6a735: hlt    
  0x0000000002c6a736: hlt    
  0x0000000002c6a737: hlt    
  0x0000000002c6a738: hlt    
  0x0000000002c6a739: hlt    
  0x0000000002c6a73a: hlt    
  0x0000000002c6a73b: hlt    
  0x0000000002c6a73c: hlt    
  0x0000000002c6a73d: hlt    
  0x0000000002c6a73e: hlt    
  0x0000000002c6a73f: hlt    
[Stub Code]
  0x0000000002c6a740: nop                       ;   {no_reloc}
  0x0000000002c6a741: nop
  0x0000000002c6a742: nop
  0x0000000002c6a743: nop
  0x0000000002c6a744: nop
  0x0000000002c6a745: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a74f: jmpq   0x0000000002c6a74f  ;   {runtime_call}
  0x0000000002c6a754: nop
  0x0000000002c6a755: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a75f: jmpq   0x0000000002c6a75f  ;   {runtime_call}
  0x0000000002c6a764: nop
  0x0000000002c6a765: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a76f: jmpq   0x0000000002c6a76f  ;   {runtime_call}
  0x0000000002c6a774: nop
  0x0000000002c6a775: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a77f: jmpq   0x0000000002c6a77f  ;   {runtime_call}
  0x0000000002c6a784: nop
  0x0000000002c6a785: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a78f: jmpq   0x0000000002c6a78f  ;   {runtime_call}
  0x0000000002c6a794: nop
  0x0000000002c6a795: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a79f: jmpq   0x0000000002c6a79f  ;   {runtime_call}
  0x0000000002c6a7a4: nop
  0x0000000002c6a7a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7af: jmpq   0x0000000002c6a7af  ;   {runtime_call}
  0x0000000002c6a7b4: nop
  0x0000000002c6a7b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7bf: jmpq   0x0000000002c6a7bf  ;   {runtime_call}
  0x0000000002c6a7c4: nop
  0x0000000002c6a7c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7cf: jmpq   0x0000000002c6a7cf  ;   {runtime_call}
  0x0000000002c6a7d4: nop
  0x0000000002c6a7d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7df: jmpq   0x0000000002c6a7df  ;   {runtime_call}
  0x0000000002c6a7e4: nop
  0x0000000002c6a7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7ef: jmpq   0x0000000002c6a7ef  ;   {runtime_call}
  0x0000000002c6a7f4: nop
  0x0000000002c6a7f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a7ff: jmpq   0x0000000002c6a7ff  ;   {runtime_call}
  0x0000000002c6a804: nop
  0x0000000002c6a805: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a80f: jmpq   0x0000000002c6a80f  ;   {runtime_call}
  0x0000000002c6a814: nop
  0x0000000002c6a815: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a81f: jmpq   0x0000000002c6a81f  ;   {runtime_call}
  0x0000000002c6a824: nop
  0x0000000002c6a825: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a82f: jmpq   0x0000000002c6a82f  ;   {runtime_call}
  0x0000000002c6a834: nop
  0x0000000002c6a835: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6a83f: jmpq   0x0000000002c6a83f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c6a844: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c6a849: mov    %rsp,-0x28(%rsp)
  0x0000000002c6a84e: sub    $0x80,%rsp
  0x0000000002c6a855: mov    %rax,0x78(%rsp)
  0x0000000002c6a85a: mov    %rcx,0x70(%rsp)
  0x0000000002c6a85f: mov    %rdx,0x68(%rsp)
  0x0000000002c6a864: mov    %rbx,0x60(%rsp)
  0x0000000002c6a869: mov    %rbp,0x50(%rsp)
  0x0000000002c6a86e: mov    %rsi,0x48(%rsp)
  0x0000000002c6a873: mov    %rdi,0x40(%rsp)
  0x0000000002c6a878: mov    %r8,0x38(%rsp)
  0x0000000002c6a87d: mov    %r9,0x30(%rsp)
  0x0000000002c6a882: mov    %r10,0x28(%rsp)
  0x0000000002c6a887: mov    %r11,0x20(%rsp)
  0x0000000002c6a88c: mov    %r12,0x18(%rsp)
  0x0000000002c6a891: mov    %r13,0x10(%rsp)
  0x0000000002c6a896: mov    %r14,0x8(%rsp)
  0x0000000002c6a89b: mov    %r15,(%rsp)
  0x0000000002c6a89f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6a8a9: movabs $0x2c6a849,%rdx    ;   {internal_word}
  0x0000000002c6a8b3: mov    %rsp,%r8
  0x0000000002c6a8b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6a8ba: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6a8bf: hlt    
[Deopt Handler Code]
  0x0000000002c6a8c0: movabs $0x2c6a8c0,%r10    ;   {section_word}
  0x0000000002c6a8ca: push   %r10
  0x0000000002c6a8cc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6a8d1: hlt    
  0x0000000002c6a8d2: hlt    
  0x0000000002c6a8d3: hlt    
  0x0000000002c6a8d4: hlt    
  0x0000000002c6a8d5: hlt    
  0x0000000002c6a8d6: hlt    
  0x0000000002c6a8d7: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x0000000002c69040' size='11472' address='0x0000000002c68d10' relocation_offset='288' insts_offset='816' stub_offset='6704' scopes_data_offset='7160' scopes_pcs_offset='9024' dependencies_offset='11328' nul_chk_table_offset='11336' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='151' backedge_count='2261' iicount='151' stamp='12.202'/>
<writer thread='21536'/>
<task_queued compile_id='43' method='java/lang/String indexOf (I)I' bytes='7' count='384' iicount='384' level='3' stamp='12.204' comment='tiered' hot_count='384'/>
<task_queued compile_id='44' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='285' iicount='285' level='3' stamp='12.204' comment='tiered' hot_count='285'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6ba10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c6bb80: mov    0x8(%rdx),%r10d
  0x0000000002c6bb84: shl    $0x3,%r10
  0x0000000002c6bb88: cmp    %rax,%r10
  0x0000000002c6bb8b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c6bb91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6bb9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c6bba0: mov    %eax,-0x6000(%rsp)
  0x0000000002c6bba7: push   %rbp
  0x0000000002c6bba8: sub    $0x30,%rsp
  0x0000000002c6bbac: movabs $0x1bde1d20,%r9    ;   {metadata(method data for {method} {0x000000001bb75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6bbb6: mov    0xdc(%r9),%esi
  0x0000000002c6bbbd: add    $0x8,%esi
  0x0000000002c6bbc0: mov    %esi,0xdc(%r9)
  0x0000000002c6bbc7: movabs $0x1bb75050,%r9    ;   {metadata({method} {0x000000001bb75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6bbd1: and    $0x1ff8,%esi
  0x0000000002c6bbd7: cmp    $0x0,%esi
  0x0000000002c6bbda: je     0x0000000002c6bc88  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002c6bbe0: mov    %rdx,%r9
  0x0000000002c6bbe3: movabs $0x1bde1d20,%rsi   ;   {metadata(method data for {method} {0x000000001bb75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6bbed: mov    0x8(%r9),%r9d
  0x0000000002c6bbf1: shl    $0x3,%r9
  0x0000000002c6bbf5: cmp    0x110(%rsi),%r9
  0x0000000002c6bbfc: jne    0x0000000002c6bc0b
  0x0000000002c6bbfe: addq   $0x1,0x118(%rsi)
  0x0000000002c6bc06: jmpq   0x0000000002c6bc71
  0x0000000002c6bc0b: cmp    0x120(%rsi),%r9
  0x0000000002c6bc12: jne    0x0000000002c6bc21
  0x0000000002c6bc14: addq   $0x1,0x128(%rsi)
  0x0000000002c6bc1c: jmpq   0x0000000002c6bc71
  0x0000000002c6bc21: cmpq   $0x0,0x110(%rsi)
  0x0000000002c6bc2c: jne    0x0000000002c6bc45
  0x0000000002c6bc2e: mov    %r9,0x110(%rsi)
  0x0000000002c6bc35: movq   $0x1,0x118(%rsi)
  0x0000000002c6bc40: jmpq   0x0000000002c6bc71
  0x0000000002c6bc45: cmpq   $0x0,0x120(%rsi)
  0x0000000002c6bc50: jne    0x0000000002c6bc69
  0x0000000002c6bc52: mov    %r9,0x120(%rsi)
  0x0000000002c6bc59: movq   $0x1,0x128(%rsi)
  0x0000000002c6bc64: jmpq   0x0000000002c6bc71
  0x0000000002c6bc69: addq   $0x1,0x108(%rsi)
  0x0000000002c6bc71: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002c6bc77: callq  0x0000000002b961a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002c6bc7c: add    $0x30,%rsp
  0x0000000002c6bc80: pop    %rbp
  0x0000000002c6bc81: test   %eax,-0x1e4bb87(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6bc87: retq   
  0x0000000002c6bc88: mov    %r9,0x8(%rsp)
  0x0000000002c6bc8d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6bc95: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002c6bc9a: jmpq   0x0000000002c6bbe0
  0x0000000002c6bc9f: nop
  0x0000000002c6bca0: nop
  0x0000000002c6bca1: mov    0x2a8(%r15),%rax
  0x0000000002c6bca8: movabs $0x0,%r10
  0x0000000002c6bcb2: mov    %r10,0x2a8(%r15)
  0x0000000002c6bcb9: movabs $0x0,%r10
  0x0000000002c6bcc3: mov    %r10,0x2b0(%r15)
  0x0000000002c6bcca: add    $0x30,%rsp
  0x0000000002c6bcce: pop    %rbp
  0x0000000002c6bccf: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6bcd4: hlt    
  0x0000000002c6bcd5: hlt    
  0x0000000002c6bcd6: hlt    
  0x0000000002c6bcd7: hlt    
  0x0000000002c6bcd8: hlt    
  0x0000000002c6bcd9: hlt    
  0x0000000002c6bcda: hlt    
  0x0000000002c6bcdb: hlt    
  0x0000000002c6bcdc: hlt    
  0x0000000002c6bcdd: hlt    
  0x0000000002c6bcde: hlt    
  0x0000000002c6bcdf: hlt    
[Stub Code]
  0x0000000002c6bce0: nop                       ;   {no_reloc}
  0x0000000002c6bce1: nop
  0x0000000002c6bce2: nop
  0x0000000002c6bce3: nop
  0x0000000002c6bce4: nop
  0x0000000002c6bce5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6bcef: jmpq   0x0000000002c6bcef  ;   {runtime_call}
[Exception Handler]
  0x0000000002c6bcf4: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c6bcf9: mov    %rsp,-0x28(%rsp)
  0x0000000002c6bcfe: sub    $0x80,%rsp
  0x0000000002c6bd05: mov    %rax,0x78(%rsp)
  0x0000000002c6bd0a: mov    %rcx,0x70(%rsp)
  0x0000000002c6bd0f: mov    %rdx,0x68(%rsp)
  0x0000000002c6bd14: mov    %rbx,0x60(%rsp)
  0x0000000002c6bd19: mov    %rbp,0x50(%rsp)
  0x0000000002c6bd1e: mov    %rsi,0x48(%rsp)
  0x0000000002c6bd23: mov    %rdi,0x40(%rsp)
  0x0000000002c6bd28: mov    %r8,0x38(%rsp)
  0x0000000002c6bd2d: mov    %r9,0x30(%rsp)
  0x0000000002c6bd32: mov    %r10,0x28(%rsp)
  0x0000000002c6bd37: mov    %r11,0x20(%rsp)
  0x0000000002c6bd3c: mov    %r12,0x18(%rsp)
  0x0000000002c6bd41: mov    %r13,0x10(%rsp)
  0x0000000002c6bd46: mov    %r14,0x8(%rsp)
  0x0000000002c6bd4b: mov    %r15,(%rsp)
  0x0000000002c6bd4f: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6bd59: movabs $0x2c6bcf9,%rdx    ;   {internal_word}
  0x0000000002c6bd63: mov    %rsp,%r8
  0x0000000002c6bd66: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6bd6a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6bd6f: hlt    
[Deopt Handler Code]
  0x0000000002c6bd70: movabs $0x2c6bd70,%r10    ;   {section_word}
  0x0000000002c6bd7a: push   %r10
  0x0000000002c6bd7c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6bd81: hlt    
  0x0000000002c6bd82: hlt    
  0x0000000002c6bd83: hlt    
  0x0000000002c6bd84: hlt    
  0x0000000002c6bd85: hlt    
  0x0000000002c6bd86: hlt    
  0x0000000002c6bd87: hlt    
<nmethod compile_id='43' compiler='C1' level='3' entry='0x0000000002c6bb80' size='1040' address='0x0000000002c6ba10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='387' iicount='387' stamp='12.338'/>
<writer thread='21536'/>
<task_queued compile_id='45' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='256' backedge_count='601' iicount='256' level='3' stamp='12.338' comment='tiered' hot_count='256'/>
<task_queued compile_id='46' method='java/util/ArrayList size ()I' bytes='5' count='128' iicount='128' level='1' stamp='12.338' comment='tiered' hot_count='128'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6c050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c6c1c0: mov    0x8(%rdx),%r10d
  0x0000000002c6c1c4: shl    $0x3,%r10
  0x0000000002c6c1c8: cmp    %rax,%r10
  0x0000000002c6c1cb: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c6c1d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6c1dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c6c1e0: mov    %eax,-0x6000(%rsp)
  0x0000000002c6c1e7: push   %rbp
  0x0000000002c6c1e8: sub    $0x30,%rsp
  0x0000000002c6c1ec: movabs $0x1bde2630,%rax   ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c1f6: mov    0xdc(%rax),%esi
  0x0000000002c6c1fc: add    $0x8,%esi
  0x0000000002c6c1ff: mov    %esi,0xdc(%rax)
  0x0000000002c6c205: movabs $0x1bb74db0,%rax   ;   {metadata({method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c20f: and    $0x1ff8,%esi
  0x0000000002c6c215: cmp    $0x0,%esi
  0x0000000002c6c218: je     0x0000000002c6c3d5  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002c6c21e: mov    0xc(%rdx),%eax
  0x0000000002c6c221: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002c6c225: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002c6c3ec
  0x0000000002c6c229: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002c6c22d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002c6c3f1
  0x0000000002c6c230: cmp    $0x0,%r9d
  0x0000000002c6c234: movabs $0x1bde2630,%rbx   ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c23e: movabs $0x108,%rdx
  0x0000000002c6c248: jl     0x0000000002c6c258
  0x0000000002c6c24e: movabs $0x118,%rdx
  0x0000000002c6c258: mov    (%rbx,%rdx,1),%rcx
  0x0000000002c6c25c: lea    0x1(%rcx),%rcx
  0x0000000002c6c260: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002c6c264: jl     0x0000000002c6c3a2  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002c6c26a: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002c6c3f6
  0x0000000002c6c26d: sub    %edi,%ebx
  0x0000000002c6c26f: cmp    %ebx,%r9d
  0x0000000002c6c272: movabs $0x1bde2630,%rbx   ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c27c: movabs $0x128,%rdx
  0x0000000002c6c286: jle    0x0000000002c6c296
  0x0000000002c6c28c: movabs $0x138,%rdx
  0x0000000002c6c296: mov    (%rbx,%rdx,1),%rcx
  0x0000000002c6c29a: lea    0x1(%rcx),%rcx
  0x0000000002c6c29e: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002c6c2a2: jg     0x0000000002c6c3a2  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002c6c2a8: mov    $0x0,%ebx
  0x0000000002c6c2ad: jmpq   0x0000000002c6c362  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002c6c2b2: nopw   0x0(%rax,%rax,1)
  0x0000000002c6c2b8: mov    %r9,%rdx
  0x0000000002c6c2bb: inc    %edx
  0x0000000002c6c2bd: movslq %r9d,%rcx
  0x0000000002c6c2c0: cmp    0xc(%rax),%r9d
  0x0000000002c6c2c4: jae    0x0000000002c6c3fb
  0x0000000002c6c2ca: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002c6c2cf: mov    %rbx,%r8
  0x0000000002c6c2d2: inc    %r8d
  0x0000000002c6c2d5: movslq %ebx,%r9
  0x0000000002c6c2d8: cmp    0xc(%rsi),%ebx
  0x0000000002c6c2db: jae    0x0000000002c6c404
  0x0000000002c6c2e1: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002c6c2e7: movabs $0x1bde2630,%r9    ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c2f1: mov    0xe0(%r9),%r11d
  0x0000000002c6c2f8: add    $0x8,%r11d
  0x0000000002c6c2fc: mov    %r11d,0xe0(%r9)
  0x0000000002c6c303: movabs $0x1bb74db0,%r9    ;   {metadata({method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c30d: and    $0xfff8,%r11d
  0x0000000002c6c314: cmp    $0x0,%r11d
  0x0000000002c6c318: je     0x0000000002c6c40d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002c6c31e: test   %eax,-0x1e4c224(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6c324: cmp    %ebx,%ecx
  0x0000000002c6c326: movabs $0x1bde2630,%rbx   ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c330: movabs $0x168,%rcx
  0x0000000002c6c33a: je     0x0000000002c6c34a
  0x0000000002c6c340: movabs $0x178,%rcx
  0x0000000002c6c34a: mov    (%rbx,%rcx,1),%r9
  0x0000000002c6c34e: lea    0x1(%r9),%r9
  0x0000000002c6c352: mov    %r9,(%rbx,%rcx,1)
  0x0000000002c6c356: jne    0x0000000002c6c3b3  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002c6c35c: mov    %r8,%rbx
  0x0000000002c6c35f: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002c6c362: dec    %edi
  0x0000000002c6c364: cmp    $0x0,%edi
  0x0000000002c6c367: movabs $0x1bde2630,%rdx   ;   {metadata(method data for {method} {0x000000001bb74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6c371: movabs $0x148,%rcx
  0x0000000002c6c37b: jl     0x0000000002c6c38b
  0x0000000002c6c381: movabs $0x158,%rcx
  0x0000000002c6c38b: mov    (%rdx,%rcx,1),%r8
  0x0000000002c6c38f: lea    0x1(%r8),%r8
  0x0000000002c6c393: mov    %r8,(%rdx,%rcx,1)
  0x0000000002c6c397: jl     0x0000000002c6c3c4
  0x0000000002c6c39d: jmpq   0x0000000002c6c2b8  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002c6c3a2: mov    $0x0,%eax
  0x0000000002c6c3a7: add    $0x30,%rsp
  0x0000000002c6c3ab: pop    %rbp
  0x0000000002c6c3ac: test   %eax,-0x1e4c2b2(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6c3b2: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002c6c3b3: mov    $0x0,%eax
  0x0000000002c6c3b8: add    $0x30,%rsp
  0x0000000002c6c3bc: pop    %rbp
  0x0000000002c6c3bd: test   %eax,-0x1e4c2c3(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6c3c3: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002c6c3c4: mov    $0x1,%eax
  0x0000000002c6c3c9: add    $0x30,%rsp
  0x0000000002c6c3cd: pop    %rbp
  0x0000000002c6c3ce: test   %eax,-0x1e4c2d4(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6c3d4: retq   
  0x0000000002c6c3d5: mov    %rax,0x8(%rsp)
  0x0000000002c6c3da: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6c3e2: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002c6c3e7: jmpq   0x0000000002c6c21e
  0x0000000002c6c3ec: callq  0x0000000002c539c0  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002c6c3f1: callq  0x0000000002c539c0  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002c6c3f6: callq  0x0000000002c539c0  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002c6c3fb: mov    %r9,(%rsp)
  0x0000000002c6c3ff: callq  0x0000000002c53300  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c6c404: mov    %rbx,(%rsp)
  0x0000000002c6c408: callq  0x0000000002c53300  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c6c40d: mov    %r9,0x8(%rsp)
  0x0000000002c6c412: movq   $0x41,(%rsp)
  0x0000000002c6c41a: callq  0x0000000002c58220  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c6c41f: jmpq   0x0000000002c6c31e
  0x0000000002c6c424: nop
  0x0000000002c6c425: nop
  0x0000000002c6c426: mov    0x2a8(%r15),%rax
  0x0000000002c6c42d: movabs $0x0,%r10
  0x0000000002c6c437: mov    %r10,0x2a8(%r15)
  0x0000000002c6c43e: movabs $0x0,%r10
  0x0000000002c6c448: mov    %r10,0x2b0(%r15)
  0x0000000002c6c44f: add    $0x30,%rsp
  0x0000000002c6c453: pop    %rbp
  0x0000000002c6c454: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6c459: hlt    
  0x0000000002c6c45a: hlt    
  0x0000000002c6c45b: hlt    
  0x0000000002c6c45c: hlt    
  0x0000000002c6c45d: hlt    
  0x0000000002c6c45e: hlt    
  0x0000000002c6c45f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c6c460: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c6c465: mov    %rsp,-0x28(%rsp)
  0x0000000002c6c46a: sub    $0x80,%rsp
  0x0000000002c6c471: mov    %rax,0x78(%rsp)
  0x0000000002c6c476: mov    %rcx,0x70(%rsp)
  0x0000000002c6c47b: mov    %rdx,0x68(%rsp)
  0x0000000002c6c480: mov    %rbx,0x60(%rsp)
  0x0000000002c6c485: mov    %rbp,0x50(%rsp)
  0x0000000002c6c48a: mov    %rsi,0x48(%rsp)
  0x0000000002c6c48f: mov    %rdi,0x40(%rsp)
  0x0000000002c6c494: mov    %r8,0x38(%rsp)
  0x0000000002c6c499: mov    %r9,0x30(%rsp)
  0x0000000002c6c49e: mov    %r10,0x28(%rsp)
  0x0000000002c6c4a3: mov    %r11,0x20(%rsp)
  0x0000000002c6c4a8: mov    %r12,0x18(%rsp)
  0x0000000002c6c4ad: mov    %r13,0x10(%rsp)
  0x0000000002c6c4b2: mov    %r14,0x8(%rsp)
  0x0000000002c6c4b7: mov    %r15,(%rsp)
  0x0000000002c6c4bb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6c4c5: movabs $0x2c6c465,%rdx    ;   {internal_word}
  0x0000000002c6c4cf: mov    %rsp,%r8
  0x0000000002c6c4d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6c4d6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6c4db: hlt    
[Deopt Handler Code]
  0x0000000002c6c4dc: movabs $0x2c6c4dc,%r10    ;   {section_word}
  0x0000000002c6c4e6: push   %r10
  0x0000000002c6c4e8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6c4ed: hlt    
  0x0000000002c6c4ee: hlt    
  0x0000000002c6c4ef: hlt    
<nmethod compile_id='45' compiler='C1' level='3' entry='0x0000000002c6c1c0' size='1824' address='0x0000000002c6c050' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='362' backedge_count='727' iicount='362' stamp='12.592'/>
<writer thread='21536'/>
<task_queued compile_id='47' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='128' backedge_count='4183' iicount='128' level='3' stamp='12.593' comment='tiered' hot_count='128'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6c790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002c6c900: mov    %eax,-0x6000(%rsp)
  0x0000000002c6c907: push   %rbp
  0x0000000002c6c908: sub    $0x60,%rsp
  0x0000000002c6c90c: mov    %rdx,%r9
  0x0000000002c6c90f: movabs $0x1bd931f8,%rbx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6c919: mov    0xdc(%rbx),%edx
  0x0000000002c6c91f: add    $0x8,%edx
  0x0000000002c6c922: mov    %edx,0xdc(%rbx)
  0x0000000002c6c928: movabs $0x1bc88b60,%rbx   ;   {metadata({method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6c932: and    $0x1ff8,%edx
  0x0000000002c6c938: cmp    $0x0,%edx
  0x0000000002c6c93b: je     0x0000000002c6caf8  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)

  0x0000000002c6c941: mov    %r8,%rbx
  0x0000000002c6c944: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c6c94e: movslq %ebx,%rbx
  0x0000000002c6c951: mov    %rbx,%rdi
  0x0000000002c6c954: cmp    $0xffffff,%rbx
  0x0000000002c6c95b: ja     0x0000000002c6cb0f
  0x0000000002c6c961: movabs $0x17,%rsi
  0x0000000002c6c96b: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c6c96f: and    $0xfffffffffffffff8,%rsi
  0x0000000002c6c973: mov    0x60(%r15),%rax
  0x0000000002c6c977: lea    (%rax,%rsi,1),%rsi
  0x0000000002c6c97b: cmp    0x70(%r15),%rsi
  0x0000000002c6c97f: ja     0x0000000002c6cb0f
  0x0000000002c6c985: mov    %rsi,0x60(%r15)
  0x0000000002c6c989: sub    %rax,%rsi
  0x0000000002c6c98c: movq   $0x1,(%rax)
  0x0000000002c6c993: mov    %rdx,%rcx
  0x0000000002c6c996: shr    $0x3,%rcx
  0x0000000002c6c99a: mov    %ecx,0x8(%rax)
  0x0000000002c6c99d: mov    %ebx,0xc(%rax)
  0x0000000002c6c9a0: sub    $0x10,%rsi
  0x0000000002c6c9a4: je     0x0000000002c6c9bb
  0x0000000002c6c9aa: xor    %rbx,%rbx
  0x0000000002c6c9ad: shr    $0x3,%rsi
  0x0000000002c6c9b1: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c6c9b6: dec    %rsi
  0x0000000002c6c9b9: jne    0x0000000002c6c9b1  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)

  0x0000000002c6c9bb: mov    0xc(%r9),%edx      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; implicit exception: dispatches to 0x0000000002c6cb19
  0x0000000002c6c9bf: movabs $0x1bd931f8,%rdi   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6c9c9: addq   $0x1,0x108(%rdi)
  0x0000000002c6c9d1: movabs $0x1bd7ac78,%rdi   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6c9db: mov    0xdc(%rdi),%esi
  0x0000000002c6c9e1: add    $0x8,%esi
  0x0000000002c6c9e4: mov    %esi,0xdc(%rdi)
  0x0000000002c6c9ea: movabs $0x1bc64608,%rdi   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6c9f4: and    $0x7ffff8,%esi
  0x0000000002c6c9fa: cmp    $0x0,%esi
  0x0000000002c6c9fd: je     0x0000000002c6cb1e
  0x0000000002c6ca03: cmp    %r8d,%edx
  0x0000000002c6ca06: movabs $0x1bd7ac78,%rdi   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6ca10: movabs $0x108,%rsi
  0x0000000002c6ca1a: jg     0x0000000002c6ca2a
  0x0000000002c6ca20: movabs $0x118,%rsi
  0x0000000002c6ca2a: mov    (%rdi,%rsi,1),%rbx
  0x0000000002c6ca2e: lea    0x1(%rbx),%rbx
  0x0000000002c6ca32: mov    %rbx,(%rdi,%rsi,1)
  0x0000000002c6ca36: jg     0x0000000002c6ca55  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000002c6ca3c: movabs $0x1bd7ac78,%r8    ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6ca46: incl   0x128(%r8)
  0x0000000002c6ca4d: mov    %rdx,%rsi
  0x0000000002c6ca50: jmpq   0x0000000002c6ca58  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000002c6ca55: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)

  0x0000000002c6ca58: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6ca62: addq   $0x1,0x118(%rdx)
  0x0000000002c6ca6a: mov    %r9,%rdx
  0x0000000002c6ca6d: mov    $0x0,%r8d
  0x0000000002c6ca73: mov    %rax,%r9
  0x0000000002c6ca76: mov    $0x0,%edi
  0x0000000002c6ca7b: mov    %rax,0x50(%rsp)
  0x0000000002c6ca80: lea    (%r8,%rsi,1),%rcx
  0x0000000002c6ca84: cmp    0xc(%rdx),%ecx
  0x0000000002c6ca87: ja     0x0000000002c6cb35
  0x0000000002c6ca8d: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c6ca91: cmp    0xc(%r9),%ecx
  0x0000000002c6ca95: ja     0x0000000002c6cb35
  0x0000000002c6ca9b: test   %esi,%esi
  0x0000000002c6ca9d: jl     0x0000000002c6cb35
  0x0000000002c6caa3: je     0x0000000002c6cae7
  0x0000000002c6caa9: movslq %r8d,%r8
  0x0000000002c6caac: movslq %edi,%rdi
  0x0000000002c6caaf: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c6cab4: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c6cab9: mov    %rsi,%r8
  0x0000000002c6cabc: sub    $0x20,%rsp
  0x0000000002c6cac0: test   $0xf,%esp
  0x0000000002c6cac6: je     0x0000000002c6cade
  0x0000000002c6cacc: sub    $0x8,%rsp
  0x0000000002c6cad0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6cad5: add    $0x8,%rsp
  0x0000000002c6cad9: jmpq   0x0000000002c6cae3
  0x0000000002c6cade: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6cae3: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)

  0x0000000002c6cae7: mov    0x50(%rsp),%rax
  0x0000000002c6caec: add    $0x60,%rsp
  0x0000000002c6caf0: pop    %rbp
  0x0000000002c6caf1: test   %eax,-0x1e4c9f7(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6caf7: retq   
  0x0000000002c6caf8: mov    %rbx,0x8(%rsp)
  0x0000000002c6cafd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6cb05: callq  0x0000000002c58220  ; OopMap{r9=Oop off=522}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ;   {runtime_call}
  0x0000000002c6cb0a: jmpq   0x0000000002c6c941
  0x0000000002c6cb0f: callq  0x0000000002c54a40  ; OopMap{r9=Oop off=532}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ;   {runtime_call}
  0x0000000002c6cb14: jmpq   0x0000000002c6c9bb
  0x0000000002c6cb19: callq  0x0000000002c539c0  ; OopMap{r9=Oop rax=Oop off=542}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ;   {runtime_call}
  0x0000000002c6cb1e: mov    %rdi,0x8(%rsp)
  0x0000000002c6cb23: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6cb2b: callq  0x0000000002c58220  ; OopMap{r9=Oop rax=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ;   {runtime_call}
  0x0000000002c6cb30: jmpq   0x0000000002c6ca03
  0x0000000002c6cb35: nop
  0x0000000002c6cb36: nop
  0x0000000002c6cb37: callq  0x0000000002b96620  ; OopMap{[80]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ;   {static_call}
  0x0000000002c6cb3c: jmp    0x0000000002c6cae7
  0x0000000002c6cb3e: nop
  0x0000000002c6cb3f: nop
  0x0000000002c6cb40: mov    0x2a8(%r15),%rax
  0x0000000002c6cb47: movabs $0x0,%r10
  0x0000000002c6cb51: mov    %r10,0x2a8(%r15)
  0x0000000002c6cb58: movabs $0x0,%r10
  0x0000000002c6cb62: mov    %r10,0x2b0(%r15)
  0x0000000002c6cb69: add    $0x60,%rsp
  0x0000000002c6cb6d: pop    %rbp
  0x0000000002c6cb6e: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6cb73: hlt    
  0x0000000002c6cb74: hlt    
  0x0000000002c6cb75: hlt    
  0x0000000002c6cb76: hlt    
  0x0000000002c6cb77: hlt    
  0x0000000002c6cb78: hlt    
  0x0000000002c6cb79: hlt    
  0x0000000002c6cb7a: hlt    
  0x0000000002c6cb7b: hlt    
  0x0000000002c6cb7c: hlt    
  0x0000000002c6cb7d: hlt    
  0x0000000002c6cb7e: hlt    
  0x0000000002c6cb7f: hlt    
[Stub Code]
  0x0000000002c6cb80: nop                       ;   {no_reloc}
  0x0000000002c6cb81: nop
  0x0000000002c6cb82: nop
  0x0000000002c6cb83: nop
  0x0000000002c6cb84: nop
  0x0000000002c6cb85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6cb8f: jmpq   0x0000000002c6cb8f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c6cb94: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c6cb99: mov    %rsp,-0x28(%rsp)
  0x0000000002c6cb9e: sub    $0x80,%rsp
  0x0000000002c6cba5: mov    %rax,0x78(%rsp)
  0x0000000002c6cbaa: mov    %rcx,0x70(%rsp)
  0x0000000002c6cbaf: mov    %rdx,0x68(%rsp)
  0x0000000002c6cbb4: mov    %rbx,0x60(%rsp)
  0x0000000002c6cbb9: mov    %rbp,0x50(%rsp)
  0x0000000002c6cbbe: mov    %rsi,0x48(%rsp)
  0x0000000002c6cbc3: mov    %rdi,0x40(%rsp)
  0x0000000002c6cbc8: mov    %r8,0x38(%rsp)
  0x0000000002c6cbcd: mov    %r9,0x30(%rsp)
  0x0000000002c6cbd2: mov    %r10,0x28(%rsp)
  0x0000000002c6cbd7: mov    %r11,0x20(%rsp)
  0x0000000002c6cbdc: mov    %r12,0x18(%rsp)
  0x0000000002c6cbe1: mov    %r13,0x10(%rsp)
  0x0000000002c6cbe6: mov    %r14,0x8(%rsp)
  0x0000000002c6cbeb: mov    %r15,(%rsp)
  0x0000000002c6cbef: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6cbf9: movabs $0x2c6cb99,%rdx    ;   {internal_word}
  0x0000000002c6cc03: mov    %rsp,%r8
  0x0000000002c6cc06: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6cc0a: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6cc0f: hlt    
[Deopt Handler Code]
  0x0000000002c6cc10: movabs $0x2c6cc10,%r10    ;   {section_word}
  0x0000000002c6cc1a: push   %r10
  0x0000000002c6cc1c: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6cc21: hlt    
  0x0000000002c6cc22: hlt    
  0x0000000002c6cc23: hlt    
  0x0000000002c6cc24: hlt    
  0x0000000002c6cc25: hlt    
  0x0000000002c6cc26: hlt    
  0x0000000002c6cc27: hlt    
<nmethod compile_id='44' compiler='C1' level='3' entry='0x0000000002c6c900' size='1576' address='0x0000000002c6c790' relocation_offset='288' insts_offset='368' stub_offset='1008' scopes_data_offset='1192' scopes_pcs_offset='1328' dependencies_offset='1552' nul_chk_table_offset='1560' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='296' iicount='296' stamp='12.797'/>
<writer thread='21536'/>
<task_queued compile_id='48' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='384' iicount='384' level='3' stamp='12.797' comment='tiered' hot_count='384'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6cdd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x0000000002c6cf80: mov    %eax,-0x6000(%rsp)
  0x0000000002c6cf87: push   %rbp
  0x0000000002c6cf88: sub    $0x40,%rsp
  0x0000000002c6cf8c: mov    %r8d,0x20(%rsp)
  0x0000000002c6cf91: mov    %esi,0x24(%rsp)
  0x0000000002c6cf95: movabs $0x1bde3d68,%rax   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6cf9f: mov    0xdc(%rax),%ebx
  0x0000000002c6cfa5: add    $0x8,%ebx
  0x0000000002c6cfa8: mov    %ebx,0xdc(%rax)
  0x0000000002c6cfae: movabs $0x1bb75798,%rax   ;   {metadata({method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6cfb8: and    $0x1ff8,%ebx
  0x0000000002c6cfbe: cmp    $0x0,%ebx
  0x0000000002c6cfc1: je     0x0000000002c6d45e  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x0000000002c6cfc7: mov    0x50(%rsp),%eax
  0x0000000002c6cfcb: cmp    %r9d,%eax
  0x0000000002c6cfce: movabs $0x1bde3d68,%rbx   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6cfd8: movabs $0x108,%r11
  0x0000000002c6cfe2: jl     0x0000000002c6cff2
  0x0000000002c6cfe8: movabs $0x118,%r11
  0x0000000002c6cff2: mov    (%rbx,%r11,1),%r13
  0x0000000002c6cff6: lea    0x1(%r13),%r13
  0x0000000002c6cffa: mov    %r13,(%rbx,%r11,1)
  0x0000000002c6cffe: jl     0x0000000002c6d042  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000002c6d004: cmp    $0x0,%ecx
  0x0000000002c6d007: movabs $0x1bde3d68,%rax   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d011: movabs $0x128,%rsi
  0x0000000002c6d01b: jne    0x0000000002c6d02b
  0x0000000002c6d021: movabs $0x138,%rsi
  0x0000000002c6d02b: mov    (%rax,%rsi,1),%rdi
  0x0000000002c6d02f: lea    0x1(%rdi),%rdi
  0x0000000002c6d033: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c6d037: jne    0x0000000002c6d449
  0x0000000002c6d03d: jmpq   0x0000000002c6d434  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x0000000002c6d042: cmp    $0x0,%eax
  0x0000000002c6d045: movabs $0x1bde3d68,%rbx   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d04f: movabs $0x160,%r11
  0x0000000002c6d059: jge    0x0000000002c6d069
  0x0000000002c6d05f: movabs $0x170,%r11
  0x0000000002c6d069: mov    (%rbx,%r11,1),%r13
  0x0000000002c6d06d: lea    0x1(%r13),%r13
  0x0000000002c6d071: mov    %r13,(%rbx,%r11,1)
  0x0000000002c6d075: jge    0x0000000002c6d080  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000002c6d07b: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x0000000002c6d080: cmp    $0x0,%ecx
  0x0000000002c6d083: movabs $0x1bde3d68,%rbx   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d08d: movabs $0x180,%r11
  0x0000000002c6d097: jne    0x0000000002c6d0a7
  0x0000000002c6d09d: movabs $0x190,%r11
  0x0000000002c6d0a7: mov    (%rbx,%r11,1),%r13
  0x0000000002c6d0ab: lea    0x1(%r13),%r13
  0x0000000002c6d0af: mov    %r13,(%rbx,%r11,1)
  0x0000000002c6d0b3: je     0x0000000002c6d428  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000002c6d0b9: movslq %esi,%rbx
  0x0000000002c6d0bc: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000002c6d475
  0x0000000002c6d0bf: jae    0x0000000002c6d47f
  0x0000000002c6d0c5: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000002c6d0ca: mov    %ebx,0x28(%rsp)
  0x0000000002c6d0ce: sub    %ecx,%r9d
  0x0000000002c6d0d1: add    %r8d,%r9d
  0x0000000002c6d0d4: add    %r8d,%eax
  0x0000000002c6d0d7: nop
  0x0000000002c6d0d8: cmp    %r9d,%eax
  0x0000000002c6d0db: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d0e5: movabs $0x1a0,%r13
  0x0000000002c6d0ef: jg     0x0000000002c6d0ff
  0x0000000002c6d0f5: movabs $0x1b0,%r13
  0x0000000002c6d0ff: mov    (%r11,%r13,1),%r14
  0x0000000002c6d103: lea    0x1(%r14),%r14
  0x0000000002c6d107: mov    %r14,(%r11,%r13,1)
  0x0000000002c6d10b: jg     0x0000000002c6d417  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000002c6d111: movslq %eax,%r11
  0x0000000002c6d114: cmp    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x0000000002c6d488
  0x0000000002c6d117: jae    0x0000000002c6d492
  0x0000000002c6d11d: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002c6d123: cmp    %ebx,%r11d
  0x0000000002c6d126: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d130: movabs $0x1c0,%r13
  0x0000000002c6d13a: je     0x0000000002c6d14a
  0x0000000002c6d140: movabs $0x1d0,%r13
  0x0000000002c6d14a: mov    (%r11,%r13,1),%r14
  0x0000000002c6d14e: lea    0x1(%r14),%r14
  0x0000000002c6d152: mov    %r14,(%r11,%r13,1)
  0x0000000002c6d156: je     0x0000000002c6d23c
  0x0000000002c6d15c: jmpq   0x0000000002c6d201  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000002c6d161: nopl   0x0(%rax)
  0x0000000002c6d168: movslq %eax,%r11
  0x0000000002c6d16b: cmp    0xc(%rdx),%eax
  0x0000000002c6d16e: jae    0x0000000002c6d49b
  0x0000000002c6d174: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002c6d17a: cmp    %ebx,%r11d
  0x0000000002c6d17d: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d187: movabs $0x200,%r13
  0x0000000002c6d191: je     0x0000000002c6d1a1
  0x0000000002c6d197: movabs $0x210,%r13
  0x0000000002c6d1a1: mov    (%r11,%r13,1),%r14
  0x0000000002c6d1a5: lea    0x1(%r14),%r14
  0x0000000002c6d1a9: mov    %r14,(%r11,%r13,1)
  0x0000000002c6d1ad: je     0x0000000002c6d23c  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002c6d1b3: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d1bd: mov    0xe0(%r11),%r13d
  0x0000000002c6d1c4: add    $0x8,%r13d
  0x0000000002c6d1c8: mov    %r13d,0xe0(%r11)
  0x0000000002c6d1cf: movabs $0x1bb75798,%r11   ;   {metadata({method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d1d9: and    $0xfff8,%r13d
  0x0000000002c6d1e0: cmp    $0x0,%r13d
  0x0000000002c6d1e4: je     0x0000000002c6d4a4  ; OopMap{rdi=Oop rdx=Oop off=618}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000002c6d1ea: test   %eax,-0x1e4d0f0(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6d1f0: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d1fa: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000002c6d201: inc    %eax
  0x0000000002c6d203: cmp    %r9d,%eax
  0x0000000002c6d206: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d210: movabs $0x1e0,%r13
  0x0000000002c6d21a: jg     0x0000000002c6d22a
  0x0000000002c6d220: movabs $0x1f0,%r13
  0x0000000002c6d22a: mov    (%r11,%r13,1),%r14
  0x0000000002c6d22e: lea    0x1(%r14),%r14
  0x0000000002c6d232: mov    %r14,(%r11,%r13,1)
  0x0000000002c6d236: jle    0x0000000002c6d168  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002c6d23c: cmp    %r9d,%eax
  0x0000000002c6d23f: movabs $0x1bde3d68,%r11   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d249: movabs $0x238,%r13
  0x0000000002c6d253: jg     0x0000000002c6d263
  0x0000000002c6d259: movabs $0x248,%r13
  0x0000000002c6d263: mov    (%r11,%r13,1),%r14
  0x0000000002c6d267: lea    0x1(%r14),%r14
  0x0000000002c6d26b: mov    %r14,(%r11,%r13,1)
  0x0000000002c6d26f: jg     0x0000000002c6d3ac  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000002c6d275: mov    %rax,%r11
  0x0000000002c6d278: inc    %r11d
  0x0000000002c6d27b: mov    %r11,%r13
  0x0000000002c6d27e: add    %ecx,%r13d
  0x0000000002c6d281: dec    %r13d
  0x0000000002c6d284: mov    %rsi,%r14
  0x0000000002c6d287: inc    %r14d
  0x0000000002c6d28a: jmpq   0x0000000002c6d33a  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x0000000002c6d28f: nop
  0x0000000002c6d290: movslq %r11d,%rsi
  0x0000000002c6d293: cmp    0xc(%rdx),%r11d
  0x0000000002c6d297: jae    0x0000000002c6d4bb
  0x0000000002c6d29d: movzwl 0x10(%rdx,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002c6d2a2: movslq %r14d,%rbx
  0x0000000002c6d2a5: cmp    0xc(%rdi),%r14d
  0x0000000002c6d2a9: jae    0x0000000002c6d4c4
  0x0000000002c6d2af: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002c6d2b4: cmp    %ebx,%esi
  0x0000000002c6d2b6: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d2c0: movabs $0x278,%rbx
  0x0000000002c6d2ca: jne    0x0000000002c6d2da
  0x0000000002c6d2d0: movabs $0x288,%rbx
  0x0000000002c6d2da: mov    (%rsi,%rbx,1),%r8
  0x0000000002c6d2de: lea    0x1(%r8),%r8
  0x0000000002c6d2e2: mov    %r8,(%rsi,%rbx,1)
  0x0000000002c6d2e6: jne    0x0000000002c6d373  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000002c6d2ec: inc    %r11d
  0x0000000002c6d2ef: inc    %r14d
  0x0000000002c6d2f2: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d2fc: mov    0xe0(%rsi),%ebx
  0x0000000002c6d302: add    $0x8,%ebx
  0x0000000002c6d305: mov    %ebx,0xe0(%rsi)
  0x0000000002c6d30b: movabs $0x1bb75798,%rsi   ;   {metadata({method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d315: and    $0xfff8,%ebx
  0x0000000002c6d31b: cmp    $0x0,%ebx
  0x0000000002c6d31e: je     0x0000000002c6d4cd  ; OopMap{rdi=Oop rdx=Oop off=932}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000002c6d324: test   %eax,-0x1e4d22a(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6d32a: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d334: incl   0x298(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x0000000002c6d33a: cmp    %r13d,%r11d
  0x0000000002c6d33d: movabs $0x1bde3d68,%r8    ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d347: movabs $0x258,%rsi
  0x0000000002c6d351: jge    0x0000000002c6d361
  0x0000000002c6d357: movabs $0x268,%rsi
  0x0000000002c6d361: mov    (%r8,%rsi,1),%rbx
  0x0000000002c6d365: lea    0x1(%rbx),%rbx
  0x0000000002c6d369: mov    %rbx,(%r8,%rsi,1)
  0x0000000002c6d36d: jl     0x0000000002c6d290  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000002c6d373: cmp    %r13d,%r11d
  0x0000000002c6d376: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d380: movabs $0x2b0,%rbx
  0x0000000002c6d38a: jne    0x0000000002c6d39a
  0x0000000002c6d390: movabs $0x2c0,%rbx
  0x0000000002c6d39a: mov    (%rsi,%rbx,1),%r8
  0x0000000002c6d39e: lea    0x1(%r8),%r8
  0x0000000002c6d3a2: mov    %r8,(%rsi,%rbx,1)
  0x0000000002c6d3a6: je     0x0000000002c6d403  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000002c6d3ac: inc    %eax
  0x0000000002c6d3ae: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d3b8: mov    0xe0(%rsi),%ebx
  0x0000000002c6d3be: add    $0x8,%ebx
  0x0000000002c6d3c1: mov    %ebx,0xe0(%rsi)
  0x0000000002c6d3c7: movabs $0x1bb75798,%rsi   ;   {metadata({method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d3d1: and    $0xfff8,%ebx
  0x0000000002c6d3d7: cmp    $0x0,%ebx
  0x0000000002c6d3da: je     0x0000000002c6d4e4  ; OopMap{rdi=Oop rdx=Oop off=1120}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000002c6d3e0: test   %eax,-0x1e4d2e6(%rip)        # 0x0000000000e20100
                                                ;   {poll}
  0x0000000002c6d3e6: movabs $0x1bde3d68,%rsi   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d3f0: incl   0x2d0(%rsi)
  0x0000000002c6d3f6: mov    0x28(%rsp),%ebx
  0x0000000002c6d3fa: mov    0x24(%rsp),%esi
  0x0000000002c6d3fe: jmpq   0x0000000002c6d0d8  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000002c6d403: mov    0x20(%rsp),%r8d
  0x0000000002c6d408: sub    %r8d,%eax
  0x0000000002c6d40b: add    $0x40,%rsp
  0x0000000002c6d40f: pop    %rbp
  0x0000000002c6d410: test   %eax,-0x1e4d316(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6d416: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x0000000002c6d417: mov    $0xffffffff,%eax
  0x0000000002c6d41c: add    $0x40,%rsp
  0x0000000002c6d420: pop    %rbp
  0x0000000002c6d421: test   %eax,-0x1e4d327(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6d427: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x0000000002c6d428: add    $0x40,%rsp
  0x0000000002c6d42c: pop    %rbp
  0x0000000002c6d42d: test   %eax,-0x1e4d333(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6d433: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x0000000002c6d434: movabs $0x1bde3d68,%rax   ;   {metadata(method data for {method} {0x000000001bb757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6d43e: incl   0x148(%rax)
  0x0000000002c6d444: jmpq   0x0000000002c6d44f  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x0000000002c6d449: mov    $0xffffffff,%r9d   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x0000000002c6d44f: mov    %r9,%rax
  0x0000000002c6d452: add    $0x40,%rsp
  0x0000000002c6d456: pop    %rbp
  0x0000000002c6d457: test   %eax,-0x1e4d35d(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6d45d: retq   
  0x0000000002c6d45e: mov    %rax,0x8(%rsp)
  0x0000000002c6d463: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6d46b: callq  0x0000000002c58220  ; OopMap{rdx=Oop rdi=Oop off=1264}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x0000000002c6d470: jmpq   0x0000000002c6cfc7
  0x0000000002c6d475: callq  0x0000000002c539c0  ; OopMap{rdi=Oop rdx=Oop off=1274}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000002c6d47a: callq  0x0000000002c539c0  ; OopMap{rdi=Oop rdx=Oop off=1279}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000002c6d47f: mov    %rsi,(%rsp)
  0x0000000002c6d483: callq  0x0000000002c53300  ; OopMap{rdi=Oop rdx=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000002c6d488: callq  0x0000000002c539c0  ; OopMap{rdi=Oop rdx=Oop off=1293}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002c6d48d: callq  0x0000000002c539c0  ; OopMap{rdi=Oop rdx=Oop off=1298}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002c6d492: mov    %rax,(%rsp)
  0x0000000002c6d496: callq  0x0000000002c53300  ; OopMap{rdi=Oop rdx=Oop off=1307}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002c6d49b: mov    %rax,(%rsp)
  0x0000000002c6d49f: callq  0x0000000002c53300  ; OopMap{rdi=Oop rdx=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000002c6d4a4: mov    %r11,0x8(%rsp)
  0x0000000002c6d4a9: movq   $0x58,(%rsp)
  0x0000000002c6d4b1: callq  0x0000000002c58220  ; OopMap{rdi=Oop rdx=Oop off=1334}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x0000000002c6d4b6: jmpq   0x0000000002c6d1ea
  0x0000000002c6d4bb: mov    %r11,(%rsp)
  0x0000000002c6d4bf: callq  0x0000000002c53300  ; OopMap{rdi=Oop rdx=Oop off=1348}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000002c6d4c4: mov    %r14,(%rsp)
  0x0000000002c6d4c8: callq  0x0000000002c53300  ; OopMap{rdi=Oop rdx=Oop off=1357}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000002c6d4cd: mov    %rsi,0x8(%rsp)
  0x0000000002c6d4d2: movq   $0x8f,(%rsp)
  0x0000000002c6d4da: callq  0x0000000002c58220  ; OopMap{rdi=Oop rdx=Oop off=1375}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x0000000002c6d4df: jmpq   0x0000000002c6d324
  0x0000000002c6d4e4: mov    %rsi,0x8(%rsp)
  0x0000000002c6d4e9: movq   $0xa1,(%rsp)
  0x0000000002c6d4f1: callq  0x0000000002c58220  ; OopMap{rdi=Oop rdx=Oop off=1398}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x0000000002c6d4f6: jmpq   0x0000000002c6d3e0
  0x0000000002c6d4fb: nop
  0x0000000002c6d4fc: nop
  0x0000000002c6d4fd: mov    0x2a8(%r15),%rax
  0x0000000002c6d504: movabs $0x0,%r10
  0x0000000002c6d50e: mov    %r10,0x2a8(%r15)
  0x0000000002c6d515: movabs $0x0,%r10
  0x0000000002c6d51f: mov    %r10,0x2b0(%r15)
  0x0000000002c6d526: add    $0x40,%rsp
  0x0000000002c6d52a: pop    %rbp
  0x0000000002c6d52b: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6d530: hlt    
  0x0000000002c6d531: hlt    
  0x0000000002c6d532: hlt    
  0x0000000002c6d533: hlt    
  0x0000000002c6d534: hlt    
  0x0000000002c6d535: hlt    
  0x0000000002c6d536: hlt    
  0x0000000002c6d537: hlt    
  0x0000000002c6d538: hlt    
  0x0000000002c6d539: hlt    
  0x0000000002c6d53a: hlt    
  0x0000000002c6d53b: hlt    
  0x0000000002c6d53c: hlt    
  0x0000000002c6d53d: hlt    
  0x0000000002c6d53e: hlt    
  0x0000000002c6d53f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c6d540: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c6d545: mov    %rsp,-0x28(%rsp)
  0x0000000002c6d54a: sub    $0x80,%rsp
  0x0000000002c6d551: mov    %rax,0x78(%rsp)
  0x0000000002c6d556: mov    %rcx,0x70(%rsp)
  0x0000000002c6d55b: mov    %rdx,0x68(%rsp)
  0x0000000002c6d560: mov    %rbx,0x60(%rsp)
  0x0000000002c6d565: mov    %rbp,0x50(%rsp)
  0x0000000002c6d56a: mov    %rsi,0x48(%rsp)
  0x0000000002c6d56f: mov    %rdi,0x40(%rsp)
  0x0000000002c6d574: mov    %r8,0x38(%rsp)
  0x0000000002c6d579: mov    %r9,0x30(%rsp)
  0x0000000002c6d57e: mov    %r10,0x28(%rsp)
  0x0000000002c6d583: mov    %r11,0x20(%rsp)
  0x0000000002c6d588: mov    %r12,0x18(%rsp)
  0x0000000002c6d58d: mov    %r13,0x10(%rsp)
  0x0000000002c6d592: mov    %r14,0x8(%rsp)
  0x0000000002c6d597: mov    %r15,(%rsp)
  0x0000000002c6d59b: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6d5a5: movabs $0x2c6d545,%rdx    ;   {internal_word}
  0x0000000002c6d5af: mov    %rsp,%r8
  0x0000000002c6d5b2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6d5b6: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6d5bb: hlt    
[Deopt Handler Code]
  0x0000000002c6d5bc: movabs $0x2c6d5bc,%r10    ;   {section_word}
  0x0000000002c6d5c6: push   %r10
  0x0000000002c6d5c8: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6d5cd: hlt    
  0x0000000002c6d5ce: hlt    
  0x0000000002c6d5cf: hlt    
<nmethod compile_id='47' compiler='C1' level='3' entry='0x0000000002c6cf80' size='3232' address='0x0000000002c6cdd0' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='149' backedge_count='5472' iicount='149' stamp='13.324'/>
<writer thread='21536'/>
<task_queued compile_id='49' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='13.324' comment='tiered' hot_count='128'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6da90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bb74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c6dc00: mov    0x8(%rdx),%r10d
  0x0000000002c6dc04: shl    $0x3,%r10
  0x0000000002c6dc08: cmp    %rax,%r10
  0x0000000002c6dc0b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c6dc11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6dc1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c6dc20: mov    %eax,-0x6000(%rsp)
  0x0000000002c6dc27: push   %rbp
  0x0000000002c6dc28: sub    $0x30,%rsp
  0x0000000002c6dc2c: movabs $0x1bde40c0,%r9    ;   {metadata(method data for {method} {0x000000001bb74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6dc36: mov    0xdc(%r9),%esi
  0x0000000002c6dc3d: add    $0x8,%esi
  0x0000000002c6dc40: mov    %esi,0xdc(%r9)
  0x0000000002c6dc47: movabs $0x1bb74e48,%r9    ;   {metadata({method} {0x000000001bb74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6dc51: and    $0x1ff8,%esi
  0x0000000002c6dc57: cmp    $0x0,%esi
  0x0000000002c6dc5a: je     0x0000000002c6dd0b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002c6dc60: mov    %rdx,%r9
  0x0000000002c6dc63: movabs $0x1bde40c0,%rsi   ;   {metadata(method data for {method} {0x000000001bb74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c6dc6d: mov    0x8(%r9),%r9d
  0x0000000002c6dc71: shl    $0x3,%r9
  0x0000000002c6dc75: cmp    0x110(%rsi),%r9
  0x0000000002c6dc7c: jne    0x0000000002c6dc8b
  0x0000000002c6dc7e: addq   $0x1,0x118(%rsi)
  0x0000000002c6dc86: jmpq   0x0000000002c6dcf1
  0x0000000002c6dc8b: cmp    0x120(%rsi),%r9
  0x0000000002c6dc92: jne    0x0000000002c6dca1
  0x0000000002c6dc94: addq   $0x1,0x128(%rsi)
  0x0000000002c6dc9c: jmpq   0x0000000002c6dcf1
  0x0000000002c6dca1: cmpq   $0x0,0x110(%rsi)
  0x0000000002c6dcac: jne    0x0000000002c6dcc5
  0x0000000002c6dcae: mov    %r9,0x110(%rsi)
  0x0000000002c6dcb5: movq   $0x1,0x118(%rsi)
  0x0000000002c6dcc0: jmpq   0x0000000002c6dcf1
  0x0000000002c6dcc5: cmpq   $0x0,0x120(%rsi)
  0x0000000002c6dcd0: jne    0x0000000002c6dce9
  0x0000000002c6dcd2: mov    %r9,0x120(%rsi)
  0x0000000002c6dcd9: movq   $0x1,0x128(%rsi)
  0x0000000002c6dce4: jmpq   0x0000000002c6dcf1
  0x0000000002c6dce9: addq   $0x1,0x108(%rsi)
  0x0000000002c6dcf1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002c6dcf7: callq  0x0000000002b961a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002c6dcfc: and    $0x1,%eax
  0x0000000002c6dcff: add    $0x30,%rsp
  0x0000000002c6dd03: pop    %rbp
  0x0000000002c6dd04: test   %eax,-0x1e4dc0a(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6dd0a: retq   
  0x0000000002c6dd0b: mov    %r9,0x8(%rsp)
  0x0000000002c6dd10: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6dd18: callq  0x0000000002c58220  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002c6dd1d: jmpq   0x0000000002c6dc60
  0x0000000002c6dd22: nop
  0x0000000002c6dd23: nop
  0x0000000002c6dd24: mov    0x2a8(%r15),%rax
  0x0000000002c6dd2b: movabs $0x0,%r10
  0x0000000002c6dd35: mov    %r10,0x2a8(%r15)
  0x0000000002c6dd3c: movabs $0x0,%r10
  0x0000000002c6dd46: mov    %r10,0x2b0(%r15)
  0x0000000002c6dd4d: add    $0x30,%rsp
  0x0000000002c6dd51: pop    %rbp
  0x0000000002c6dd52: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6dd57: hlt    
  0x0000000002c6dd58: hlt    
  0x0000000002c6dd59: hlt    
  0x0000000002c6dd5a: hlt    
  0x0000000002c6dd5b: hlt    
  0x0000000002c6dd5c: hlt    
  0x0000000002c6dd5d: hlt    
  0x0000000002c6dd5e: hlt    
  0x0000000002c6dd5f: hlt    
[Stub Code]
  0x0000000002c6dd60: nop                       ;   {no_reloc}
  0x0000000002c6dd61: nop
  0x0000000002c6dd62: nop
  0x0000000002c6dd63: nop
  0x0000000002c6dd64: nop
  0x0000000002c6dd65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6dd6f: jmpq   0x0000000002c6dd6f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c6dd74: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c6dd79: mov    %rsp,-0x28(%rsp)
  0x0000000002c6dd7e: sub    $0x80,%rsp
  0x0000000002c6dd85: mov    %rax,0x78(%rsp)
  0x0000000002c6dd8a: mov    %rcx,0x70(%rsp)
  0x0000000002c6dd8f: mov    %rdx,0x68(%rsp)
  0x0000000002c6dd94: mov    %rbx,0x60(%rsp)
  0x0000000002c6dd99: mov    %rbp,0x50(%rsp)
  0x0000000002c6dd9e: mov    %rsi,0x48(%rsp)
  0x0000000002c6dda3: mov    %rdi,0x40(%rsp)
  0x0000000002c6dda8: mov    %r8,0x38(%rsp)
  0x0000000002c6ddad: mov    %r9,0x30(%rsp)
  0x0000000002c6ddb2: mov    %r10,0x28(%rsp)
  0x0000000002c6ddb7: mov    %r11,0x20(%rsp)
  0x0000000002c6ddbc: mov    %r12,0x18(%rsp)
  0x0000000002c6ddc1: mov    %r13,0x10(%rsp)
  0x0000000002c6ddc6: mov    %r14,0x8(%rsp)
  0x0000000002c6ddcb: mov    %r15,(%rsp)
  0x0000000002c6ddcf: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6ddd9: movabs $0x2c6dd79,%rdx    ;   {internal_word}
  0x0000000002c6dde3: mov    %rsp,%r8
  0x0000000002c6dde6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6ddea: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6ddef: hlt    
[Deopt Handler Code]
  0x0000000002c6ddf0: movabs $0x2c6ddf0,%r10    ;   {section_word}
  0x0000000002c6ddfa: push   %r10
  0x0000000002c6ddfc: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6de01: hlt    
  0x0000000002c6de02: hlt    
  0x0000000002c6de03: hlt    
  0x0000000002c6de04: hlt    
  0x0000000002c6de05: hlt    
  0x0000000002c6de06: hlt    
  0x0000000002c6de07: hlt    
<nmethod compile_id='48' compiler='C1' level='3' entry='0x0000000002c6dc00' size='1040' address='0x0000000002c6da90' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='643' iicount='643' stamp='13.494'/>
Decoding compiled method 0x0000000002c6ded0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc3eb60} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c6e020: mov    0x8(%rdx),%r10d
  0x0000000002c6e024: shl    $0x3,%r10
  0x0000000002c6e028: cmp    %rax,%r10
  0x0000000002c6e02b: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c6e031: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6e03c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c6e040: mov    %eax,-0x6000(%rsp)
  0x0000000002c6e047: push   %rbp
  0x0000000002c6e048: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 282)

  0x0000000002c6e04c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)

  0x0000000002c6e04f: add    $0x30,%rsp
  0x0000000002c6e053: pop    %rbp
  0x0000000002c6e054: test   %eax,-0x1e4df5a(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6e05a: retq   
  0x0000000002c6e05b: nop
  0x0000000002c6e05c: nop
  0x0000000002c6e05d: mov    0x2a8(%r15),%rax
  0x0000000002c6e064: movabs $0x0,%r10
  0x0000000002c6e06e: mov    %r10,0x2a8(%r15)
  0x0000000002c6e075: movabs $0x0,%r10
  0x0000000002c6e07f: mov    %r10,0x2b0(%r15)
  0x0000000002c6e086: add    $0x30,%rsp
  0x0000000002c6e08a: pop    %rbp
  0x0000000002c6e08b: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6e090: hlt    
  0x0000000002c6e091: hlt    
  0x0000000002c6e092: hlt    
  0x0000000002c6e093: hlt    
  0x0000000002c6e094: hlt    
  0x0000000002c6e095: hlt    
  0x0000000002c6e096: hlt    
  0x0000000002c6e097: hlt    
  0x0000000002c6e098: hlt    
  0x0000000002c6e099: hlt    
  0x0000000002c6e09a: hlt    
  0x0000000002c6e09b: hlt    
  0x0000000002c6e09c: hlt    
  0x0000000002c6e09d: hlt    
  0x0000000002c6e09e: hlt    
  0x0000000002c6e09f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c6e0a0: callq  0x0000000002c559e0  ;   {no_reloc}
  0x0000000002c6e0a5: mov    %rsp,-0x28(%rsp)
  0x0000000002c6e0aa: sub    $0x80,%rsp
  0x0000000002c6e0b1: mov    %rax,0x78(%rsp)
  0x0000000002c6e0b6: mov    %rcx,0x70(%rsp)
  0x0000000002c6e0bb: mov    %rdx,0x68(%rsp)
  0x0000000002c6e0c0: mov    %rbx,0x60(%rsp)
  0x0000000002c6e0c5: mov    %rbp,0x50(%rsp)
  0x0000000002c6e0ca: mov    %rsi,0x48(%rsp)
  0x0000000002c6e0cf: mov    %rdi,0x40(%rsp)
  0x0000000002c6e0d4: mov    %r8,0x38(%rsp)
  0x0000000002c6e0d9: mov    %r9,0x30(%rsp)
  0x0000000002c6e0de: mov    %r10,0x28(%rsp)
  0x0000000002c6e0e3: mov    %r11,0x20(%rsp)
  0x0000000002c6e0e8: mov    %r12,0x18(%rsp)
  0x0000000002c6e0ed: mov    %r13,0x10(%rsp)
  0x0000000002c6e0f2: mov    %r14,0x8(%rsp)
  0x0000000002c6e0f7: mov    %r15,(%rsp)
  0x0000000002c6e0fb: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6e105: movabs $0x2c6e0a5,%rdx    ;   {internal_word}
  0x0000000002c6e10f: mov    %rsp,%r8
  0x0000000002c6e112: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6e116: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6e11b: hlt    
[Deopt Handler Code]
  0x0000000002c6e11c: movabs $0x2c6e11c,%r10    ;   {section_word}
  0x0000000002c6e126: push   %r10
  0x0000000002c6e128: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6e12d: hlt    
  0x0000000002c6e12e: hlt    
  0x0000000002c6e12f: hlt    
<nmethod compile_id='46' compiler='C1' level='1' entry='0x0000000002c6e020' size='704' address='0x0000000002c6ded0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='239' iicount='239' stamp='13.596'/>
<writer thread='21536'/>
<task_queued compile_id='50' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='1405' iicount='1405' level='3' stamp='13.597' comment='tiered' hot_count='1405'/>
<writer thread='19132'/>
Decoding compiled method 0x0000000002c6e410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0xe0]  (sp of caller)
  0x0000000002c6e5c0: mov    0x8(%rdx),%r10d
  0x0000000002c6e5c4: shl    $0x3,%r10
  0x0000000002c6e5c8: cmp    %rax,%r10
  0x0000000002c6e5cb: jne    0x0000000002b95f60  ;   {runtime_call}
  0x0000000002c6e5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c6e5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c6e5e0: mov    %eax,-0x6000(%rsp)
  0x0000000002c6e5e7: push   %rbp
  0x0000000002c6e5e8: sub    $0xd0,%rsp
  0x0000000002c6e5ef: movabs $0x1bd934a0,%rsi   ;   {metadata(method data for {method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e5f9: mov    0xdc(%rsi),%edi
  0x0000000002c6e5ff: add    $0x8,%edi
  0x0000000002c6e602: mov    %edi,0xdc(%rsi)
  0x0000000002c6e608: movabs $0x1bbe4db8,%rsi   ;   {metadata({method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e612: and    $0x1ff8,%edi
  0x0000000002c6e618: cmp    $0x0,%edi
  0x0000000002c6e61b: je     0x0000000002c6e971  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 649)

  0x0000000002c6e621: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002c6e624: inc    %esi
  0x0000000002c6e626: mov    %rdx,%rdi
  0x0000000002c6e629: movabs $0x1bd934a0,%rbx   ;   {metadata(method data for {method} {0x000000001bbe4dc0} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e633: addq   $0x1,0x108(%rbx)
  0x0000000002c6e63b: movabs $0x1bd92eb8,%rdi   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e645: mov    0xdc(%rdi),%ebx
  0x0000000002c6e64b: add    $0x8,%ebx
  0x0000000002c6e64e: mov    %ebx,0xdc(%rdi)
  0x0000000002c6e654: movabs $0x1bbe3c80,%rdi   ;   {metadata({method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e65e: and    $0x7ffff8,%ebx
  0x0000000002c6e664: cmp    $0x0,%ebx
  0x0000000002c6e667: je     0x0000000002c6e988
  0x0000000002c6e66d: mov    0x10(%rdx),%edi
  0x0000000002c6e670: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e674: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000002c6e99f
  0x0000000002c6e677: mov    %rsi,%rax
  0x0000000002c6e67a: sub    %ebx,%eax
  0x0000000002c6e67c: cmp    $0x0,%eax
  0x0000000002c6e67f: movabs $0x1bd92eb8,%rax   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e689: movabs $0x108,%rcx
  0x0000000002c6e693: jle    0x0000000002c6e6a3
  0x0000000002c6e699: movabs $0x118,%rcx
  0x0000000002c6e6a3: mov    (%rax,%rcx,1),%r9
  0x0000000002c6e6a7: lea    0x1(%r9),%r9
  0x0000000002c6e6ab: mov    %r9,(%rax,%rcx,1)
  0x0000000002c6e6af: jg     0x0000000002c6e6c2  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e6b5: mov    %r8d,0xac(%rsp)
  0x0000000002c6e6bd: jmpq   0x0000000002c6e933  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e6c2: mov    %ebx,0xa8(%rsp)
  0x0000000002c6e6c9: mov    %rdi,0xb0(%rsp)
  0x0000000002c6e6d1: mov    %r8d,0xac(%rsp)
  0x0000000002c6e6d9: mov    %rdx,%rax
  0x0000000002c6e6dc: movabs $0x1bd92eb8,%rcx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e6e6: addq   $0x1,0x128(%rcx)
  0x0000000002c6e6ee: mov    %rsi,%r8
  0x0000000002c6e6f1: mov    %rdx,%rsi
  0x0000000002c6e6f4: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e6f7: mov    %rsi,0xb8(%rsp)
  0x0000000002c6e6ff: callq  0x0000000002b961a0  ; OopMap{[184]=Oop [176]=Oop off=324}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000002c6e704: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e707: movabs $0x1bd92eb8,%rbx   ;   {metadata(method data for {method} {0x000000001bbe3c88} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c6e711: addq   $0x1,0x138(%rbx)
  0x0000000002c6e719: movabs $0x1bd931f8,%rbx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6e723: mov    0xdc(%rbx),%edx
  0x0000000002c6e729: add    $0x8,%edx
  0x0000000002c6e72c: mov    %edx,0xdc(%rbx)
  0x0000000002c6e732: movabs $0x1bc88b60,%rbx   ;   {metadata({method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6e73c: and    $0x7ffff8,%edx
  0x0000000002c6e742: cmp    $0x0,%edx
  0x0000000002c6e745: je     0x0000000002c6e9a4
  0x0000000002c6e74b: mov    %r8,%rbx
  0x0000000002c6e74e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c6e758: movslq %ebx,%rbx
  0x0000000002c6e75b: mov    %rbx,%rdi
  0x0000000002c6e75e: cmp    $0xffffff,%rbx
  0x0000000002c6e765: ja     0x0000000002c6e9bb
  0x0000000002c6e76b: movabs $0x17,%rsi
  0x0000000002c6e775: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c6e779: and    $0xfffffffffffffff8,%rsi
  0x0000000002c6e77d: mov    0x60(%r15),%rax
  0x0000000002c6e781: lea    (%rax,%rsi,1),%rsi
  0x0000000002c6e785: cmp    0x70(%r15),%rsi
  0x0000000002c6e789: ja     0x0000000002c6e9bb
  0x0000000002c6e78f: mov    %rsi,0x60(%r15)
  0x0000000002c6e793: sub    %rax,%rsi
  0x0000000002c6e796: movq   $0x1,(%rax)
  0x0000000002c6e79d: mov    %rdx,%rcx
  0x0000000002c6e7a0: shr    $0x3,%rcx
  0x0000000002c6e7a4: mov    %ecx,0x8(%rax)
  0x0000000002c6e7a7: mov    %ebx,0xc(%rax)
  0x0000000002c6e7aa: sub    $0x10,%rsi
  0x0000000002c6e7ae: je     0x0000000002c6e7c5
  0x0000000002c6e7b4: xor    %rbx,%rbx
  0x0000000002c6e7b7: shr    $0x3,%rsi
  0x0000000002c6e7bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c6e7c0: dec    %rsi
  0x0000000002c6e7c3: jne    0x0000000002c6e7bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e7c5: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6e7cf: addq   $0x1,0x108(%rdx)
  0x0000000002c6e7d7: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6e7e1: mov    0xdc(%rdx),%r9d
  0x0000000002c6e7e8: add    $0x8,%r9d
  0x0000000002c6e7ec: mov    %r9d,0xdc(%rdx)
  0x0000000002c6e7f3: movabs $0x1bc64608,%rdx   ;   {metadata({method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6e7fd: and    $0x7ffff8,%r9d
  0x0000000002c6e804: cmp    $0x0,%r9d
  0x0000000002c6e808: je     0x0000000002c6e9c5
  0x0000000002c6e80e: mov    0xa8(%rsp),%ebx
  0x0000000002c6e815: cmp    %r8d,%ebx
  0x0000000002c6e818: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6e822: movabs $0x108,%r9
  0x0000000002c6e82c: jg     0x0000000002c6e83c
  0x0000000002c6e832: movabs $0x118,%r9
  0x0000000002c6e83c: mov    (%rdx,%r9,1),%rdi
  0x0000000002c6e840: lea    0x1(%rdi),%rdi
  0x0000000002c6e844: mov    %rdi,(%rdx,%r9,1)
  0x0000000002c6e848: jg     0x0000000002c6e863  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e84e: movabs $0x1bd7ac78,%rdx   ;   {metadata(method data for {method} {0x000000001bc64610} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c6e858: incl   0x128(%rdx)
  0x0000000002c6e85e: jmpq   0x0000000002c6e866  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e863: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e866: mov    0xb0(%rsp),%rdi
  0x0000000002c6e86e: movabs $0x1bd931f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc88b68} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c6e878: addq   $0x1,0x118(%rdx)
  0x0000000002c6e880: mov    %rdi,%rdx
  0x0000000002c6e883: mov    $0x0,%r8d
  0x0000000002c6e889: mov    %rax,%r9
  0x0000000002c6e88c: mov    $0x0,%edi
  0x0000000002c6e891: mov    %rbx,%rsi
  0x0000000002c6e894: mov    %rax,0xc0(%rsp)
  0x0000000002c6e89c: lea    (%r8,%rsi,1),%rcx
  0x0000000002c6e8a0: cmp    0xc(%rdx),%ecx
  0x0000000002c6e8a3: ja     0x0000000002c6e9dc
  0x0000000002c6e8a9: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c6e8ad: cmp    0xc(%r9),%ecx
  0x0000000002c6e8b1: ja     0x0000000002c6e9dc
  0x0000000002c6e8b7: test   %esi,%esi
  0x0000000002c6e8b9: jl     0x0000000002c6e9dc
  0x0000000002c6e8bf: je     0x0000000002c6e903
  0x0000000002c6e8c5: movslq %r8d,%r8
  0x0000000002c6e8c8: movslq %edi,%rdi
  0x0000000002c6e8cb: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c6e8d0: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c6e8d5: mov    %rsi,%r8
  0x0000000002c6e8d8: sub    $0x20,%rsp
  0x0000000002c6e8dc: test   $0xf,%esp
  0x0000000002c6e8e2: je     0x0000000002c6e8fa
  0x0000000002c6e8e8: sub    $0x8,%rsp
  0x0000000002c6e8ec: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6e8f1: add    $0x8,%rsp
  0x0000000002c6e8f5: jmpq   0x0000000002c6e8ff
  0x0000000002c6e8fa: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c6e8ff: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e903: mov    0xc0(%rsp),%rax
  0x0000000002c6e90b: mov    0xb8(%rsp),%rdx
  0x0000000002c6e913: mov    %rax,%r10
  0x0000000002c6e916: shr    $0x3,%r10
  0x0000000002c6e91a: mov    %r10d,0x10(%rdx)
  0x0000000002c6e91e: mov    %rdx,%rax
  0x0000000002c6e921: shr    $0x9,%rax
  0x0000000002c6e925: movabs $0xe8fe000,%rsi
  0x0000000002c6e92f: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c6e933: mov    0xac(%rsp),%r8d
  0x0000000002c6e93b: mov    0x10(%rdx),%eax
  0x0000000002c6e93e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)

  0x0000000002c6e942: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002c6e945: mov    %rsi,%rdi
  0x0000000002c6e948: inc    %edi
  0x0000000002c6e94a: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002c6e94d: movslq %esi,%rdi
  0x0000000002c6e950: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002c6e9e9
  0x0000000002c6e953: jae    0x0000000002c6e9f3
  0x0000000002c6e959: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002c6e95f: mov    %rdx,%rax
  0x0000000002c6e962: add    $0xd0,%rsp
  0x0000000002c6e969: pop    %rbp
  0x0000000002c6e96a: test   %eax,-0x1e4e870(%rip)        # 0x0000000000e20100
                                                ;   {poll_return}
  0x0000000002c6e970: retq   
  0x0000000002c6e971: mov    %rsi,0x8(%rsp)
  0x0000000002c6e976: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6e97e: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=963}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e983: jmpq   0x0000000002c6e621
  0x0000000002c6e988: mov    %rdi,0x8(%rsp)
  0x0000000002c6e98d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6e995: callq  0x0000000002c58220  ; OopMap{rdx=Oop off=986}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e99a: jmpq   0x0000000002c6e66d
  0x0000000002c6e99f: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rdi=Oop off=996}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e9a4: mov    %rbx,0x8(%rsp)
  0x0000000002c6e9a9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6e9b1: callq  0x0000000002c58220  ; OopMap{[184]=Oop [176]=Oop off=1014}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e9b6: jmpq   0x0000000002c6e74b
  0x0000000002c6e9bb: callq  0x0000000002c54a40  ; OopMap{[184]=Oop [176]=Oop off=1024}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e9c0: jmpq   0x0000000002c6e7c5
  0x0000000002c6e9c5: mov    %rdx,0x8(%rsp)
  0x0000000002c6e9ca: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c6e9d2: callq  0x0000000002c58220  ; OopMap{[184]=Oop [176]=Oop rax=Oop off=1047}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c6e9d7: jmpq   0x0000000002c6e80e
  0x0000000002c6e9dc: nop
  0x0000000002c6e9dd: nop
  0x0000000002c6e9de: nop
  0x0000000002c6e9df: callq  0x0000000002b96620  ; OopMap{[184]=Oop [192]=Oop off=1060}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {static_call}
  0x0000000002c6e9e4: jmpq   0x0000000002c6e903
  0x0000000002c6e9e9: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rax=Oop off=1070}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c6e9ee: callq  0x0000000002c539c0  ; OopMap{rdx=Oop rax=Oop off=1075}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c6e9f3: mov    %rsi,(%rsp)
  0x0000000002c6e9f7: callq  0x0000000002c53300  ; OopMap{rdx=Oop rax=Oop off=1084}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c6e9fc: nop
  0x0000000002c6e9fd: nop
  0x0000000002c6e9fe: mov    0x2a8(%r15),%rax
  0x0000000002c6ea05: movabs $0x0,%r10
  0x0000000002c6ea0f: mov    %r10,0x2a8(%r15)
  0x0000000002c6ea16: movabs $0x0,%r10
  0x0000000002c6ea20: mov    %r10,0x2b0(%r15)
  0x0000000002c6ea27: add    $0xd0,%rsp
  0x0000000002c6ea2e: pop    %rbp
  0x0000000002c6ea2f: jmpq   0x0000000002c52f60  ;   {runtime_call}
  0x0000000002c6ea34: hlt    
  0x0000000002c6ea35: hlt    
  0x0000000002c6ea36: hlt    
  0x0000000002c6ea37: hlt    
  0x0000000002c6ea38: hlt    
  0x0000000002c6ea39: hlt    
  0x0000000002c6ea3a: hlt    
  0x0000000002c6ea3b: hlt    
  0x0000000002c6ea3c: hlt    
  0x0000000002c6ea3d: hlt    
  0x0000000002c6ea3e: hlt    
  0x0000000002c6ea3f: hlt    
[Stub Code]
  0x0000000002c6ea40: nop                       ;   {no_reloc}
  0x0000000002c6ea41: nop
  0x0000000002c6ea42: nop
  0x0000000002c6ea43: nop
  0x0000000002c6ea44: nop
  0x0000000002c6ea45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6ea4f: jmpq   0x0000000002c6ea4f  ;   {runtime_call}
  0x0000000002c6ea54: nop
  0x0000000002c6ea55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c6ea5f: jmpq   0x0000000002c6ea5f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c6ea64: callq  0x0000000002c559e0  ;   {runtime_call}
  0x0000000002c6ea69: mov    %rsp,-0x28(%rsp)
  0x0000000002c6ea6e: sub    $0x80,%rsp
  0x0000000002c6ea75: mov    %rax,0x78(%rsp)
  0x0000000002c6ea7a: mov    %rcx,0x70(%rsp)
  0x0000000002c6ea7f: mov    %rdx,0x68(%rsp)
  0x0000000002c6ea84: mov    %rbx,0x60(%rsp)
  0x0000000002c6ea89: mov    %rbp,0x50(%rsp)
  0x0000000002c6ea8e: mov    %rsi,0x48(%rsp)
  0x0000000002c6ea93: mov    %rdi,0x40(%rsp)
  0x0000000002c6ea98: mov    %r8,0x38(%rsp)
  0x0000000002c6ea9d: mov    %r9,0x30(%rsp)
  0x0000000002c6eaa2: mov    %r10,0x28(%rsp)
  0x0000000002c6eaa7: mov    %r11,0x20(%rsp)
  0x0000000002c6eaac: mov    %r12,0x18(%rsp)
  0x0000000002c6eab1: mov    %r13,0x10(%rsp)
  0x0000000002c6eab6: mov    %r14,0x8(%rsp)
  0x0000000002c6eabb: mov    %r15,(%rsp)
  0x0000000002c6eabf: movabs $0x6a3e9d50,%rcx   ;   {external_word}
  0x0000000002c6eac9: movabs $0x2c6ea69,%rdx    ;   {internal_word}
  0x0000000002c6ead3: mov    %rsp,%r8
  0x0000000002c6ead6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c6eada: callq  0x000000006a0a3530  ;   {runtime_call}
  0x0000000002c6eadf: hlt    
[Deopt Handler Code]
  0x0000000002c6eae0: movabs $0x2c6eae0,%r10    ;   {section_word}
  0x0000000002c6eaea: push   %r10
  0x0000000002c6eaec: jmpq   0x0000000002b97600  ;   {runtime_call}
  0x0000000002c6eaf1: hlt    
  0x0000000002c6eaf2: hlt    
  0x0000000002c6eaf3: hlt    
  0x0000000002c6eaf4: hlt    
  0x0000000002c6eaf5: hlt    
  0x0000000002c6eaf6: hlt    
  0x0000000002c6eaf7: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x0000000002c6e5c0' size='2624' address='0x0000000002c6e410' relocation_offset='288' insts_offset='432' stub_offset='1584' scopes_data_offset='1800' scopes_pcs_offset='2088' dependencies_offset='2584' nul_chk_table_offset='2592' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='1418' iicount='1418' stamp='14.119'/>
<tty_done stamp='14.122'/>
</tty>
<compilation_log thread='14456'>
<start_compile_thread name='C2 CompilerThread2' thread='14456' process='25036' stamp='0.205'/>
<task compile_id='13' method='java/lang/String charAt (I)C' bytes='29' count='90201' iicount='90201' stamp='2.755'>
<phase name='parse' nodes='3' live='3' stamp='2.755'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='90201'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='90201' stamp='2.755'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='90201' cnt='90201' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='90201' not_taken='0' cnt='90201' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='2.755'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='2.755'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='2.755'>
<phase name='ccp' nodes='103' live='63' stamp='2.755'>
<phase_done name='ccp' nodes='103' live='63' stamp='2.755'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='2.756'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='2.756'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='2.756'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='2.756'>
<phase_done name='matcher' nodes='55' live='55' stamp='2.756'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='2.756'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='2.756'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='2.756'>
<phase_done name='output' nodes='93' live='85' stamp='2.817'/>
</phase>
<code_cache total_blobs='245' nmethods='14' adapters='144' free_code_cache='250545216'/>
<task_done success='1' nmsize='216' count='90429' stamp='3.016'/>
</task>
</compilation_log>
<compilation_log thread='20376'>
<start_compile_thread name='C2 CompilerThread1' thread='20376' process='25036' stamp='0.199'/>
<task compile_id='15' method='java/lang/String length ()I' bytes='6' count='26843' iicount='26843' stamp='2.755'>
<phase name='parse' nodes='3' live='3' stamp='2.755'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='26843'/>
<parse method='832' uses='26843' stamp='2.755'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='2.755'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='2.755'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='2.755'>
<phase name='ccp' nodes='45' live='27' stamp='2.755'>
<phase_done name='ccp' nodes='45' live='27' stamp='2.755'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='2.755'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='2.755'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='2.755'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='2.755'>
<phase_done name='matcher' nodes='24' live='24' stamp='2.756'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='2.756'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='2.756'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='2.756'>
<phase_done name='output' nodes='38' live='37' stamp='2.756'/>
</phase>
<code_cache total_blobs='246' nmethods='12' adapters='144' free_code_cache='250529920'/>
<task_done success='1' nmsize='120' count='26854' stamp='2.817'/>
</task>
</compilation_log>
<compilation_log thread='20928'>
<start_compile_thread name='C2 CompilerThread0' thread='20928' process='25036' stamp='0.188'/>
<task compile_id='14' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10393' iicount='10393' stamp='2.755'>
<phase name='parse' nodes='3' live='3' stamp='2.755'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='parentOf' return='833' arguments='833' flags='10' bytes='13' iicount='10393'/>
<parse method='834' uses='10393' stamp='2.755'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='10393' not_taken='0' cnt='10393' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='2.755'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='2.755'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='2.755'>
<phase name='ccp' nodes='44' live='25' stamp='2.755'>
<phase_done name='ccp' nodes='44' live='25' stamp='2.755'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='2.755'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='2.755'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='2.755'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='2.755'>
<phase_done name='matcher' nodes='24' live='24' stamp='2.756'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='2.756'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='2.756'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='2.756'>
<phase_done name='output' nodes='39' live='36' stamp='2.756'/>
</phase>
<code_cache total_blobs='246' nmethods='13' adapters='144' free_code_cache='250534592'/>
<task_done success='1' nmsize='88' count='10393' stamp='2.880'/>
</task>
</compilation_log>
<compilation_log thread='19132'>
<start_compile_thread name='C1 CompilerThread3' thread='19132' process='25036' stamp='0.184'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='441' backedge_count='5613' iicount='441' level='3' stamp='0.184'>
<phase name='buildIR' stamp='0.184'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='441'/>
<parse method='832'  stamp='0.184'>
<parse_done stamp='0.185'/>
</parse>
<phase name='optimize_blocks' stamp='0.185'>
<phase_done name='optimize_blocks' stamp='0.185'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.185'>
<phase_done name='rangeCheckElimination' stamp='0.185'/>
</phase>
<phase name='optimize_null_checks' stamp='0.185'>
<phase_done name='optimize_null_checks' stamp='0.185'/>
</phase>
<phase_done name='buildIR' stamp='0.185'/>
</phase>
<phase name='emit_lir' stamp='0.185'>
<phase name='lirGeneration' stamp='0.185'>
<phase_done name='lirGeneration' stamp='0.185'/>
</phase>
<phase name='linearScan' stamp='0.185'>
<phase_done name='linearScan' stamp='0.185'/>
</phase>
<phase_done name='emit_lir' stamp='0.185'/>
</phase>
<phase name='codeemit' stamp='0.185'>
<phase_done name='codeemit' stamp='0.185'/>
</phase>
<phase name='codeinstall' stamp='0.185'>
<phase_done name='codeinstall' stamp='0.373'/>
</phase>
<code_cache total_blobs='212' nmethods='1' adapters='140' free_code_cache='250573696'/>
<task_done success='1' nmsize='656' count='470' backedge_count='5985' stamp='0.373'/>
</task>
<task compile_id='7' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='658' iicount='658' level='3' stamp='0.373'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='658' stamp='0.373'/>
</task>
<task compile_id='6' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='658' iicount='658' level='3' stamp='0.373'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='658' stamp='0.373'/>
</task>
<task compile_id='5' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='658' iicount='658' level='3' stamp='0.373'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='658' stamp='0.373'/>
</task>
<task compile_id='4' method='java/lang/Character toLowerCase (I)I' bytes='9' count='658' iicount='658' level='3' stamp='0.373'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='658' stamp='0.373'/>
</task>
<task compile_id='9' method='java/lang/String indexOf (II)I' bytes='70' count='305' backedge_count='9349' iicount='305' level='3' stamp='0.373'>
<phase name='buildIR' stamp='0.373'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='305'/>
<parse method='832'  stamp='0.373'>
<bc code='183' bci='66'/>
<method id='834' holder='730' name='indexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='71' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.374'/>
</parse>
<phase name='optimize_blocks' stamp='0.374'>
<phase_done name='optimize_blocks' stamp='0.374'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.374'>
<phase_done name='rangeCheckElimination' stamp='0.374'/>
</phase>
<phase name='optimize_null_checks' stamp='0.374'>
<phase_done name='optimize_null_checks' stamp='0.374'/>
</phase>
<phase_done name='buildIR' stamp='0.374'/>
</phase>
<phase name='emit_lir' stamp='0.374'>
<phase name='lirGeneration' stamp='0.374'>
<phase_done name='lirGeneration' stamp='0.374'/>
</phase>
<phase name='linearScan' stamp='0.374'>
<phase_done name='linearScan' stamp='0.374'/>
</phase>
<phase_done name='emit_lir' stamp='0.374'/>
</phase>
<phase name='codeemit' stamp='0.374'>
<phase_done name='codeemit' stamp='0.374'/>
</phase>
<phase name='codeinstall' stamp='0.374'>
<phase_done name='codeinstall' stamp='0.823'/>
</phase>
<code_cache total_blobs='217' nmethods='3' adapters='140' free_code_cache='250559168'/>
<task_done success='1' nmsize='936' count='360' backedge_count='10284' stamp='0.823'/>
</task>
<task compile_id='2' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='280' backedge_count='1302' iicount='280' level='3' stamp='0.823'>
<phase name='buildIR' stamp='0.823'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='280'/>
<parse method='832'  stamp='0.823'>
<parse_done stamp='0.823'/>
</parse>
<phase name='optimize_blocks' stamp='0.823'>
<phase_done name='optimize_blocks' stamp='0.823'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.823'>
<phase_done name='rangeCheckElimination' stamp='0.823'/>
</phase>
<phase name='optimize_null_checks' stamp='0.823'>
<phase_done name='optimize_null_checks' stamp='0.823'/>
</phase>
<phase_done name='buildIR' stamp='0.823'/>
</phase>
<phase name='emit_lir' stamp='0.823'>
<phase name='lirGeneration' stamp='0.823'>
<phase_done name='lirGeneration' stamp='0.824'/>
</phase>
<phase name='linearScan' stamp='0.824'>
<phase_done name='linearScan' stamp='0.824'/>
</phase>
<phase_done name='emit_lir' stamp='0.824'/>
</phase>
<phase name='codeemit' stamp='0.824'>
<phase_done name='codeemit' stamp='0.824'/>
</phase>
<phase name='codeinstall' stamp='0.824'>
<phase_done name='codeinstall' stamp='1.216'/>
</phase>
<code_cache total_blobs='219' nmethods='4' adapters='140' free_code_cache='250567296'/>
<task_done success='1' nmsize='1360' count='280' backedge_count='1302' stamp='1.216'/>
</task>
<task compile_id='3' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='2609' iicount='2609' level='3' stamp='1.217'>
<phase name='buildIR' stamp='1.217'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='2609'/>
<parse method='832'  stamp='1.217'>
<parse_done stamp='1.217'/>
</parse>
<phase name='optimize_blocks' stamp='1.217'>
<phase_done name='optimize_blocks' stamp='1.217'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.217'>
<phase_done name='rangeCheckElimination' stamp='1.217'/>
</phase>
<phase name='optimize_null_checks' stamp='1.217'>
<phase_done name='optimize_null_checks' stamp='1.217'/>
</phase>
<phase_done name='buildIR' stamp='1.217'/>
</phase>
<phase name='emit_lir' stamp='1.217'>
<phase name='lirGeneration' stamp='1.217'>
<phase_done name='lirGeneration' stamp='1.217'/>
</phase>
<phase name='linearScan' stamp='1.217'>
<phase_done name='linearScan' stamp='1.217'/>
</phase>
<phase_done name='emit_lir' stamp='1.217'/>
</phase>
<phase name='codeemit' stamp='1.217'>
<phase_done name='codeemit' stamp='1.217'/>
</phase>
<phase name='codeinstall' stamp='1.217'>
<phase_done name='codeinstall' stamp='1.308'/>
</phase>
<code_cache total_blobs='222' nmethods='5' adapters='140' free_code_cache='250555072'/>
<task_done success='1' nmsize='336' count='2610' stamp='1.308'/>
</task>
<task compile_id='12' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='394' iicount='394' level='3' stamp='1.308'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='394' stamp='1.308'/>
</task>
<task compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='394' iicount='394' level='3' stamp='1.308'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='394' stamp='1.308'/>
</task>
<task compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='591' iicount='591' level='3' stamp='1.308'>
<phase name='buildIR' stamp='1.308'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='591'/>
<parse method='833'  stamp='1.308'>
<parse_done stamp='1.308'/>
</parse>
<phase name='optimize_blocks' stamp='1.308'>
<phase_done name='optimize_blocks' stamp='1.308'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.308'>
<phase_done name='rangeCheckElimination' stamp='1.308'/>
</phase>
<phase name='optimize_null_checks' stamp='1.308'>
<phase_done name='optimize_null_checks' stamp='1.308'/>
</phase>
<phase_done name='buildIR' stamp='1.308'/>
</phase>
<phase name='emit_lir' stamp='1.308'>
<phase name='lirGeneration' stamp='1.308'>
<phase_done name='lirGeneration' stamp='1.308'/>
</phase>
<phase name='linearScan' stamp='1.308'>
<phase_done name='linearScan' stamp='1.309'/>
</phase>
<phase_done name='emit_lir' stamp='1.309'/>
</phase>
<phase name='codeemit' stamp='1.309'>
<phase_done name='codeemit' stamp='1.309'/>
</phase>
<phase name='codeinstall' stamp='1.309'>
<phase_done name='codeinstall' stamp='1.460'/>
</phase>
<code_cache total_blobs='223' nmethods='6' adapters='140' free_code_cache='250559872'/>
<task_done success='1' nmsize='400' count='641' stamp='1.460'/>
</task>
<task compile_id='16' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='768' iicount='768' level='3' stamp='1.460'>
<phase name='buildIR' stamp='1.460'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='768'/>
<parse method='833'  stamp='1.460'>
<parse_done stamp='1.460'/>
</parse>
<phase name='optimize_blocks' stamp='1.460'>
<phase_done name='optimize_blocks' stamp='1.460'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.460'>
<phase_done name='rangeCheckElimination' stamp='1.460'/>
</phase>
<phase name='optimize_null_checks' stamp='1.460'>
<phase_done name='optimize_null_checks' stamp='1.460'/>
</phase>
<phase_done name='buildIR' stamp='1.460'/>
</phase>
<phase name='emit_lir' stamp='1.460'>
<phase name='lirGeneration' stamp='1.460'>
<phase_done name='lirGeneration' stamp='1.461'/>
</phase>
<phase name='linearScan' stamp='1.461'>
<phase_done name='linearScan' stamp='1.461'/>
</phase>
<phase_done name='emit_lir' stamp='1.461'/>
</phase>
<phase name='codeemit' stamp='1.461'>
<phase_done name='codeemit' stamp='1.461'/>
</phase>
<phase name='codeinstall' stamp='1.461'>
<phase_done name='codeinstall' stamp='2.016'/>
</phase>
<code_cache total_blobs='225' nmethods='7' adapters='140' free_code_cache='250561856'/>
<task_done success='1' nmsize='1456' count='913' stamp='2.016'/>
</task>
<task compile_id='18' method='java/lang/Character toUpperCase (C)C' bytes='6' count='259' iicount='260' level='3' stamp='2.016'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='264' stamp='2.016'/>
</task>
<task compile_id='17' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='922' iicount='922' level='3' stamp='2.016'>
<phase name='buildIR' stamp='2.016'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='934'/>
<parse method='833'  stamp='2.016'>
<parse_done stamp='2.016'/>
</parse>
<phase name='optimize_blocks' stamp='2.016'>
<phase_done name='optimize_blocks' stamp='2.016'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.016'>
<phase_done name='rangeCheckElimination' stamp='2.016'/>
</phase>
<phase name='optimize_null_checks' stamp='2.016'>
<phase_done name='optimize_null_checks' stamp='2.016'/>
</phase>
<phase_done name='buildIR' stamp='2.016'/>
</phase>
<phase name='emit_lir' stamp='2.016'>
<phase name='lirGeneration' stamp='2.016'>
<phase_done name='lirGeneration' stamp='2.016'/>
</phase>
<phase name='linearScan' stamp='2.016'>
<phase_done name='linearScan' stamp='2.016'/>
</phase>
<phase_done name='emit_lir' stamp='2.016'/>
</phase>
<phase name='codeemit' stamp='2.016'>
<phase_done name='codeemit' stamp='2.016'/>
</phase>
<phase name='codeinstall' stamp='2.016'>
<phase_done name='codeinstall' stamp='2.143'/>
</phase>
<code_cache total_blobs='226' nmethods='8' adapters='140' free_code_cache='250560832'/>
<task_done success='1' nmsize='400' count='1182' stamp='2.143'/>
</task>
<task compile_id='19' method='java/lang/Character toUpperCase (C)C' bytes='6' count='524' iicount='524' level='3' stamp='2.144'>
<phase name='buildIR' stamp='2.144'>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toUpperCase' return='717' arguments='717' flags='9' bytes='6' iicount='524'/>
<parse method='832'  stamp='2.144'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='834' holder='810' name='toUpperCase' return='722' arguments='722' flags='9' bytes='9' iicount='524'/>
<call method='834' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='184' bci='1'/>
<klass id='837' name='java/lang/CharacterData' flags='1024'/>
<method id='838' holder='837' name='of' return='837' arguments='722' flags='24' bytes='120' compile_id='16' compiler='C1' level='3' iicount='1182'/>
<call method='838' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='840' holder='837' name='toUpperCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='840' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='2.144'/>
</parse>
<parse_done stamp='2.144'/>
</parse>
<phase name='optimize_blocks' stamp='2.144'>
<phase_done name='optimize_blocks' stamp='2.144'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.144'>
<phase_done name='rangeCheckElimination' stamp='2.144'/>
</phase>
<phase name='optimize_null_checks' stamp='2.144'>
<phase_done name='optimize_null_checks' stamp='2.144'/>
</phase>
<phase_done name='buildIR' stamp='2.144'/>
</phase>
<phase name='emit_lir' stamp='2.144'>
<phase name='lirGeneration' stamp='2.144'>
<phase_done name='lirGeneration' stamp='2.144'/>
</phase>
<phase name='linearScan' stamp='2.144'>
<phase_done name='linearScan' stamp='2.144'/>
</phase>
<phase_done name='emit_lir' stamp='2.144'/>
</phase>
<phase name='codeemit' stamp='2.144'>
<phase_done name='codeemit' stamp='2.144'/>
</phase>
<phase name='codeinstall' stamp='2.144'>
<phase_done name='codeinstall' stamp='2.334'/>
</phase>
<code_cache total_blobs='230' nmethods='9' adapters='140' free_code_cache='250547840'/>
<task_done success='1' nmsize='664' count='534' inlined_bytes='9' stamp='2.334'/>
</task>
<task compile_id='22' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='641' iicount='641' level='3' stamp='2.334'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='641' stamp='2.334'/>
</task>
<task compile_id='20' method='java/lang/Character toUpperCase (I)I' bytes='9' count='534' iicount='534' level='3' stamp='2.334'>
<phase name='buildIR' stamp='2.334'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toUpperCase' return='722' arguments='722' flags='9' bytes='9' iicount='534'/>
<parse method='832'  stamp='2.334'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='16' compiler='C1' level='3' iicount='1203'/>
<call method='836' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='838' holder='835' name='toUpperCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='2.334'/>
</parse>
<phase name='optimize_blocks' stamp='2.334'>
<phase_done name='optimize_blocks' stamp='2.334'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.334'>
<phase_done name='rangeCheckElimination' stamp='2.334'/>
</phase>
<phase name='optimize_null_checks' stamp='2.334'>
<phase_done name='optimize_null_checks' stamp='2.334'/>
</phase>
<phase_done name='buildIR' stamp='2.334'/>
</phase>
<phase name='emit_lir' stamp='2.334'>
<phase name='lirGeneration' stamp='2.334'>
<phase_done name='lirGeneration' stamp='2.334'/>
</phase>
<phase name='linearScan' stamp='2.334'>
<phase_done name='linearScan' stamp='2.334'/>
</phase>
<phase_done name='emit_lir' stamp='2.334'/>
</phase>
<phase name='codeemit' stamp='2.334'>
<phase_done name='codeemit' stamp='2.334'/>
</phase>
<phase name='codeinstall' stamp='2.334'>
<phase_done name='codeinstall' stamp='2.532'/>
</phase>
<code_cache total_blobs='233' nmethods='10' adapters='140' free_code_cache='250546176'/>
<task_done success='1' nmsize='568' count='534' stamp='2.532'/>
</task>
<task compile_id='21' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='534' iicount='534' level='3' stamp='2.533'>
<phase name='buildIR' stamp='2.533'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toUpperCase' return='722' arguments='722' flags='0' bytes='53' iicount='534'/>
<parse method='833'  stamp='2.533'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='17' compiler='C1' level='3' iicount='1203'/>
<call method='835' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='835'>
<parse_done stamp='2.533'/>
</parse>
<parse_done stamp='2.533'/>
</parse>
<phase name='optimize_blocks' stamp='2.533'>
<phase_done name='optimize_blocks' stamp='2.533'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.533'>
<phase_done name='rangeCheckElimination' stamp='2.533'/>
</phase>
<phase name='optimize_null_checks' stamp='2.533'>
<phase_done name='optimize_null_checks' stamp='2.533'/>
</phase>
<phase_done name='buildIR' stamp='2.533'/>
</phase>
<phase name='emit_lir' stamp='2.533'>
<phase name='lirGeneration' stamp='2.533'>
<phase_done name='lirGeneration' stamp='2.533'/>
</phase>
<phase name='linearScan' stamp='2.533'>
<phase_done name='linearScan' stamp='2.533'/>
</phase>
<phase_done name='emit_lir' stamp='2.533'/>
</phase>
<phase name='codeemit' stamp='2.533'>
<phase_done name='codeemit' stamp='2.533'/>
</phase>
<phase name='codeinstall' stamp='2.533'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='2.754'/>
</phase>
<code_cache total_blobs='236' nmethods='11' adapters='140' free_code_cache='250544192'/>
<task_done success='1' nmsize='720' count='534' inlined_bytes='11' stamp='2.754'/>
</task>
<task compile_id='24' method='java/lang/Character toLowerCase (I)I' bytes='9' count='768' iicount='768' level='3' stamp='3.016'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='768' stamp='3.016'/>
</task>
<task compile_id='23' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='354' iicount='354' level='3' stamp='3.016'>
<phase name='buildIR' stamp='3.016'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='354'/>
<parse method='832'  stamp='3.016'>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='124'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='156'/>
<call method='837' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='886'/>
<call method='840' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='3.016'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='842' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='842' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='3.016'/>
</parse>
<parse_done stamp='3.016'/>
</parse>
<phase name='optimize_blocks' stamp='3.016'>
<phase_done name='optimize_blocks' stamp='3.016'/>
</phase>
<phase name='rangeCheckElimination' stamp='3.016'>
<phase_done name='rangeCheckElimination' stamp='3.016'/>
</phase>
<phase name='optimize_null_checks' stamp='3.016'>
<phase_done name='optimize_null_checks' stamp='3.016'/>
</phase>
<phase_done name='buildIR' stamp='3.016'/>
</phase>
<phase name='emit_lir' stamp='3.016'>
<phase name='lirGeneration' stamp='3.016'>
<phase_done name='lirGeneration' stamp='3.016'/>
</phase>
<phase name='linearScan' stamp='3.016'>
<phase_done name='linearScan' stamp='3.016'/>
</phase>
<phase_done name='emit_lir' stamp='3.016'/>
</phase>
<phase name='codeemit' stamp='3.016'>
<phase_done name='codeemit' stamp='3.016'/>
</phase>
<phase name='codeinstall' stamp='3.017'>
<phase_done name='codeinstall' stamp='3.404'/>
</phase>
<code_cache total_blobs='245' nmethods='15' adapters='144' free_code_cache='250548416'/>
<task_done success='1' nmsize='1144' count='509' inlined_bytes='30' stamp='3.404'/>
</task>
<task compile_id='27' method='java/lang/Character toLowerCase (I)I' bytes='9' count='896' iicount='896' level='3' stamp='3.404'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='900' stamp='3.404'/>
</task>
<task compile_id='25' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='935' iicount='935' level='3' stamp='3.404'>
<phase name='buildIR' stamp='3.404'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='935'/>
<parse method='833'  stamp='3.404'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='17' compiler='C1' level='3' iicount='1469'/>
<call method='835' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='835'>
<parse_done stamp='3.404'/>
</parse>
<parse_done stamp='3.404'/>
</parse>
<phase name='optimize_blocks' stamp='3.404'>
<phase_done name='optimize_blocks' stamp='3.404'/>
</phase>
<phase name='rangeCheckElimination' stamp='3.404'>
<phase_done name='rangeCheckElimination' stamp='3.404'/>
</phase>
<phase name='optimize_null_checks' stamp='3.404'>
<phase_done name='optimize_null_checks' stamp='3.404'/>
</phase>
<phase_done name='buildIR' stamp='3.404'/>
</phase>
<phase name='emit_lir' stamp='3.404'>
<phase name='lirGeneration' stamp='3.404'>
<phase_done name='lirGeneration' stamp='3.404'/>
</phase>
<phase name='linearScan' stamp='3.404'>
<phase_done name='linearScan' stamp='3.404'/>
</phase>
<phase_done name='emit_lir' stamp='3.404'/>
</phase>
<phase name='codeemit' stamp='3.404'>
<phase_done name='codeemit' stamp='3.405'/>
</phase>
<phase name='codeinstall' stamp='3.405'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='3.597'/>
</phase>
<code_cache total_blobs='246' nmethods='16' adapters='144' free_code_cache='250547008'/>
<task_done success='1' nmsize='624' count='1002' inlined_bytes='11' stamp='3.597'/>
</task>
<task compile_id='29' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1536' iicount='1536' level='1' stamp='3.598'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1542' stamp='3.598'/>
</task>
<task compile_id='28' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='317' iicount='317' level='3' stamp='3.598'>
<phase name='buildIR' stamp='3.598'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='317'/>
<parse method='832'  stamp='3.598'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='381'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='836' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='23' compiler='C1' level='3' iicount='618'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='17'/>
<method id='838' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='139'/>
<call method='838' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='840' name='java/util/Arrays' flags='1'/>
<method id='841' holder='840' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='171'/>
<call method='841' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='937'/>
<call method='844' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<parse_done stamp='3.598'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='846' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='3.598'/>
</parse>
<parse_done stamp='3.598'/>
</parse>
<parse_done stamp='3.598'/>
</parse>
<parse_done stamp='3.598'/>
</parse>
<phase name='optimize_blocks' stamp='3.598'>
<phase_done name='optimize_blocks' stamp='3.598'/>
</phase>
<phase name='rangeCheckElimination' stamp='3.598'>
<phase_done name='rangeCheckElimination' stamp='3.598'/>
</phase>
<phase name='optimize_null_checks' stamp='3.598'>
<phase_done name='optimize_null_checks' stamp='3.598'/>
</phase>
<phase_done name='buildIR' stamp='3.598'/>
</phase>
<phase name='emit_lir' stamp='3.598'>
<phase name='lirGeneration' stamp='3.598'>
<phase_done name='lirGeneration' stamp='3.598'/>
</phase>
<phase name='linearScan' stamp='3.598'>
<phase_done name='linearScan' stamp='3.598'/>
</phase>
<phase_done name='emit_lir' stamp='3.598'/>
</phase>
<phase name='codeemit' stamp='3.598'>
<phase_done name='codeemit' stamp='3.598'/>
</phase>
<phase name='codeinstall' stamp='3.598'>
<phase_done name='codeinstall' stamp='4.267'/>
</phase>
<code_cache total_blobs='247' nmethods='17' adapters='144' free_code_cache='250543680'/>
<task_done success='1' nmsize='1848' count='413' inlined_bytes='86' stamp='4.267'/>
</task>
<task compile_id='30' method='java/lang/Character toLowerCase (I)I' bytes='9' count='1098' iicount='1098' level='3' stamp='4.267'>
<phase name='buildIR' stamp='4.267'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='1098'/>
<parse method='832'  stamp='4.267'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='16' compiler='C1' level='3' iicount='1632'/>
<call method='836' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='838' holder='835' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='4.267'/>
</parse>
<phase name='optimize_blocks' stamp='4.267'>
<phase_done name='optimize_blocks' stamp='4.267'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.267'>
<phase_done name='rangeCheckElimination' stamp='4.267'/>
</phase>
<phase name='optimize_null_checks' stamp='4.267'>
<phase_done name='optimize_null_checks' stamp='4.267'/>
</phase>
<phase_done name='buildIR' stamp='4.267'/>
</phase>
<phase name='emit_lir' stamp='4.267'>
<phase name='lirGeneration' stamp='4.268'>
<phase_done name='lirGeneration' stamp='4.268'/>
</phase>
<phase name='linearScan' stamp='4.268'>
<phase_done name='linearScan' stamp='4.268'/>
</phase>
<phase_done name='emit_lir' stamp='4.268'/>
</phase>
<phase name='codeemit' stamp='4.268'>
<phase_done name='codeemit' stamp='4.268'/>
</phase>
<phase name='codeinstall' stamp='4.268'>
<phase_done name='codeinstall' stamp='4.432'/>
</phase>
<code_cache total_blobs='248' nmethods='18' adapters='144' free_code_cache='250542464'/>
<task_done success='1' nmsize='568' count='1098' stamp='4.432'/>
</task>
<task compile_id='31' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='521' iicount='521' level='3' stamp='4.432'>
<phase name='buildIR' stamp='4.432'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='521'/>
<parse method='833'  stamp='4.432'>
<parse_done stamp='4.432'/>
</parse>
<phase name='optimize_blocks' stamp='4.432'>
<phase_done name='optimize_blocks' stamp='4.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.432'>
<phase_done name='rangeCheckElimination' stamp='4.432'/>
</phase>
<phase name='optimize_null_checks' stamp='4.432'>
<phase_done name='optimize_null_checks' stamp='4.432'/>
</phase>
<phase_done name='buildIR' stamp='4.432'/>
</phase>
<phase name='emit_lir' stamp='4.432'>
<phase name='lirGeneration' stamp='4.432'>
<phase_done name='lirGeneration' stamp='4.432'/>
</phase>
<phase name='linearScan' stamp='4.432'>
<phase_done name='linearScan' stamp='4.432'/>
</phase>
<phase_done name='emit_lir' stamp='4.432'/>
</phase>
<phase name='codeemit' stamp='4.432'>
<phase_done name='codeemit' stamp='4.432'/>
</phase>
<phase name='codeinstall' stamp='4.432'>
<phase_done name='codeinstall' stamp='4.556'/>
</phase>
<code_cache total_blobs='249' nmethods='19' adapters='144' free_code_cache='250541376'/>
<task_done success='1' nmsize='496' count='521' stamp='4.556'/>
</task>
<task compile_id='26' method='java/lang/String getChars (II[CI)V' bytes='62' count='309' iicount='309' level='3' stamp='4.556'>
<phase name='buildIR' stamp='4.556'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='309'/>
<parse method='832'  stamp='4.556'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='4.556'/>
</parse>
<phase name='optimize_blocks' stamp='4.556'>
<phase_done name='optimize_blocks' stamp='4.556'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.556'>
<phase_done name='rangeCheckElimination' stamp='4.556'/>
</phase>
<phase name='optimize_null_checks' stamp='4.556'>
<phase_done name='optimize_null_checks' stamp='4.556'/>
</phase>
<phase_done name='buildIR' stamp='4.556'/>
</phase>
<phase name='emit_lir' stamp='4.556'>
<phase name='lirGeneration' stamp='4.556'>
<phase_done name='lirGeneration' stamp='4.556'/>
</phase>
<phase name='linearScan' stamp='4.556'>
<phase_done name='linearScan' stamp='4.556'/>
</phase>
<phase_done name='emit_lir' stamp='4.556'/>
</phase>
<phase name='codeemit' stamp='4.556'>
<phase_done name='codeemit' stamp='4.556'/>
</phase>
<phase name='codeinstall' stamp='4.556'>
<phase_done name='codeinstall' stamp='4.905'/>
</phase>
<code_cache total_blobs='250' nmethods='20' adapters='144' free_code_cache='250539072'/>
<task_done success='1' nmsize='1080' count='315' stamp='4.905'/>
</task>
<task compile_id='32' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='257' iicount='257' level='3' stamp='4.905'>
<phase name='buildIR' stamp='4.905'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='257'/>
<parse method='832'  stamp='4.905'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='15' compiler='C2' level='4' iicount='26854'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='4.906'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='23' compiler='C1' level='3' iicount='783'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='146'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='184'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='967'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='4.906'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='4.906'/>
</parse>
<parse_done stamp='4.906'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='26' compiler='C1' level='3' iicount='315'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='4.906'/>
</parse>
<phase name='optimize_blocks' stamp='4.906'>
<phase_done name='optimize_blocks' stamp='4.906'/>
</phase>
<phase name='rangeCheckElimination' stamp='4.906'>
<phase_done name='rangeCheckElimination' stamp='4.906'/>
</phase>
<phase name='optimize_null_checks' stamp='4.906'>
<phase_done name='optimize_null_checks' stamp='4.906'/>
</phase>
<phase_done name='buildIR' stamp='4.906'/>
</phase>
<phase name='emit_lir' stamp='4.906'>
<phase name='lirGeneration' stamp='4.906'>
<phase_done name='lirGeneration' stamp='4.906'/>
</phase>
<phase name='linearScan' stamp='4.906'>
<phase_done name='linearScan' stamp='4.907'/>
</phase>
<phase_done name='emit_lir' stamp='4.907'/>
</phase>
<phase name='codeemit' stamp='4.907'>
<phase_done name='codeemit' stamp='4.907'/>
</phase>
<phase name='codeinstall' stamp='4.907'>
<phase_done name='codeinstall' stamp='5.538'/>
</phase>
<code_cache total_blobs='251' nmethods='21' adapters='144' free_code_cache='250535552'/>
<task_done success='1' nmsize='1880' count='257' inlined_bytes='63' stamp='5.538'/>
</task>
<task compile_id='33' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='265' iicount='265' level='3' stamp='5.543'>
<phase name='buildIR' stamp='5.543'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='265'/>
<parse method='832'  stamp='5.543'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='32' compiler='C1' level='3' iicount='295'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.543'/>
</parse>
<phase name='optimize_blocks' stamp='5.543'>
<phase_done name='optimize_blocks' stamp='5.543'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.543'>
<phase_done name='rangeCheckElimination' stamp='5.543'/>
</phase>
<phase name='optimize_null_checks' stamp='5.543'>
<phase_done name='optimize_null_checks' stamp='5.543'/>
</phase>
<phase_done name='buildIR' stamp='5.543'/>
</phase>
<phase name='emit_lir' stamp='5.543'>
<phase name='lirGeneration' stamp='5.543'>
<phase_done name='lirGeneration' stamp='5.543'/>
</phase>
<phase name='linearScan' stamp='5.543'>
<phase_done name='linearScan' stamp='5.543'/>
</phase>
<phase_done name='emit_lir' stamp='5.543'/>
</phase>
<phase name='codeemit' stamp='5.543'>
<phase_done name='codeemit' stamp='5.543'/>
</phase>
<phase name='codeinstall' stamp='5.543'>
<phase_done name='codeinstall' stamp='5.704'/>
</phase>
<code_cache total_blobs='258' nmethods='22' adapters='150' free_code_cache='250531520'/>
<task_done success='1' nmsize='392' count='283' stamp='5.704'/>
</task>
<task compile_id='34' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='5.704'>
<phase name='buildIR' stamp='5.704'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='256'/>
<parse method='832'  stamp='5.704'>
<parse_done stamp='5.704'/>
</parse>
<phase name='optimize_blocks' stamp='5.704'>
<phase_done name='optimize_blocks' stamp='5.704'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.704'>
<phase_done name='rangeCheckElimination' stamp='5.704'/>
</phase>
<phase name='optimize_null_checks' stamp='5.704'>
<phase_done name='optimize_null_checks' stamp='5.705'/>
</phase>
<phase_done name='buildIR' stamp='5.705'/>
</phase>
<phase name='emit_lir' stamp='5.705'>
<phase name='lirGeneration' stamp='5.705'>
<phase_done name='lirGeneration' stamp='5.705'/>
</phase>
<phase name='linearScan' stamp='5.705'>
<phase_done name='linearScan' stamp='5.705'/>
</phase>
<phase_done name='emit_lir' stamp='5.705'/>
</phase>
<phase name='codeemit' stamp='5.705'>
<phase_done name='codeemit' stamp='5.705'/>
</phase>
<phase name='codeinstall' stamp='5.705'>
<phase_done name='codeinstall' stamp='5.824'/>
</phase>
<code_cache total_blobs='259' nmethods='23' adapters='150' free_code_cache='250530688'/>
<task_done success='1' nmsize='336' count='257' stamp='5.824'/>
</task>
<task compile_id='35' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='519' iicount='519' level='3' stamp='5.831'>
<phase name='buildIR' stamp='5.831'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='519'/>
<parse method='833'  stamp='5.831'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='147'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='185'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='3246'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='5.831'/>
</parse>
<parse_done stamp='5.831'/>
</parse>
<parse_done stamp='5.831'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.831'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='33' compiler='C1' level='3' iicount='311'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='32' compiler='C1' level='3' iicount='356'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.831'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.831'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='146'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='485'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='5.831'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='1134'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='5.831'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='5.831'/>
</parse>
<phase name='optimize_blocks' stamp='5.831'>
<phase_done name='optimize_blocks' stamp='5.831'/>
</phase>
<phase name='rangeCheckElimination' stamp='5.831'>
<phase_done name='rangeCheckElimination' stamp='5.831'/>
</phase>
<phase name='optimize_null_checks' stamp='5.831'>
<phase_done name='optimize_null_checks' stamp='5.832'/>
</phase>
<phase_done name='buildIR' stamp='5.832'/>
</phase>
<phase name='emit_lir' stamp='5.832'>
<phase name='lirGeneration' stamp='5.832'>
<phase_done name='lirGeneration' stamp='5.832'/>
</phase>
<phase name='linearScan' stamp='5.832'>
<phase_done name='linearScan' stamp='5.832'/>
</phase>
<phase_done name='emit_lir' stamp='5.832'/>
</phase>
<phase name='codeemit' stamp='5.832'>
<phase_done name='codeemit' stamp='5.832'/>
</phase>
<phase name='codeinstall' stamp='5.832'>
<phase_done name='codeinstall' stamp='6.713'/>
</phase>
<code_cache total_blobs='260' nmethods='24' adapters='150' free_code_cache='250525760'/>
<task_done success='1' nmsize='2872' count='564' inlined_bytes='72' stamp='6.713'/>
</task>
<task compile_id='36' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='118' backedge_count='2589' iicount='118' level='3' stamp='6.714'>
<phase name='buildIR' stamp='6.714'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/io/BufferedReader' flags='1'/>
<method id='833' holder='832' name='readLine' return='730' arguments='716' flags='0' bytes='304' iicount='124'/>
<parse method='833'  stamp='6.714'>
<bc code='183' bci='11'/>
<type id='724' name='void'/>
<method id='836' holder='832' name='ensureOpen' return='724' flags='2' bytes='18' iicount='163'/>
<call method='836' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='13'/>
<klass id='838' name='java/io/IOException' unloaded='1'/>
<method id='840' holder='838' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='6.714'/>
</parse>
<bc code='183' bci='44'/>
<method id='841' holder='832' name='fill' return='724' flags='2' bytes='170' iicount='4'/>
<call method='841' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='63'/>
<type id='722' name='int'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='843' holder='794' name='length' return='722' flags='33' bytes='5' iicount='3'/>
<call method='843' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<parse_done stamp='6.714'/>
</parse>
<bc code='182' bci='70'/>
<method id='845' holder='794' name='toString' return='730' flags='33' bytes='36' iicount='37'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='208'/>
<klass id='821' name='[C' flags='1041'/>
<method id='847' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='597'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='226'/>
<method id='849' holder='794' name='append' return='794' arguments='821 722 722' flags='33' bytes='15' iicount='2'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='9'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='851' holder='793' name='append' return='793' arguments='821 722 722' flags='1' bytes='40' iicount='2'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.715'/>
</parse>
<bc code='182' bci='231'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='275'/>
<method id='854' holder='794' name='&lt;init&gt;' return='724' arguments='722' flags='1' bytes='6' iicount='39'/>
<call method='854' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='2'/>
<method id='856' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='186'/>
<call method='856' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='858' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='3409'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='6.715'/>
</parse>
<parse_done stamp='6.715'/>
</parse>
<parse_done stamp='6.715'/>
</parse>
<bc code='182' bci='289'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='9'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='6.715'/>
</parse>
<parse_done stamp='6.715'/>
</parse>
<phase name='optimize_blocks' stamp='6.715'>
<phase_done name='optimize_blocks' stamp='6.715'/>
</phase>
<phase name='rangeCheckElimination' stamp='6.715'>
<phase_done name='rangeCheckElimination' stamp='6.715'/>
</phase>
<phase name='optimize_null_checks' stamp='6.715'>
<phase_done name='optimize_null_checks' stamp='6.715'/>
</phase>
<phase_done name='buildIR' stamp='6.715'/>
</phase>
<phase name='emit_lir' stamp='6.715'>
<phase name='lirGeneration' stamp='6.715'>
<phase_done name='lirGeneration' stamp='6.716'/>
</phase>
<phase name='linearScan' stamp='6.716'>
<phase_done name='linearScan' stamp='6.716'/>
</phase>
<phase_done name='emit_lir' stamp='6.716'/>
</phase>
<phase name='codeemit' stamp='6.716'>
<phase_done name='codeemit' stamp='6.716'/>
</phase>
<phase name='codeinstall' stamp='6.716'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='9.376'/>
</phase>
<code_cache total_blobs='261' nmethods='25' adapters='150' free_code_cache='250514752'/>
<task_done success='1' nmsize='5960' count='163' backedge_count='3267' inlined_bytes='72' stamp='9.376'/>
</task>
<task compile_id='37' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='613' iicount='613' level='3' stamp='9.376'>
<phase name='buildIR' stamp='9.376'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='613'/>
<parse method='832'  stamp='9.377'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='3443'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='9.377'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='35' compiler='C1' level='3' iicount='655'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='9.377'/>
</parse>
<phase name='optimize_blocks' stamp='9.377'>
<phase_done name='optimize_blocks' stamp='9.377'/>
</phase>
<phase name='rangeCheckElimination' stamp='9.377'>
<phase_done name='rangeCheckElimination' stamp='9.377'/>
</phase>
<phase name='optimize_null_checks' stamp='9.377'>
<phase_done name='optimize_null_checks' stamp='9.377'/>
</phase>
<phase_done name='buildIR' stamp='9.377'/>
</phase>
<phase name='emit_lir' stamp='9.377'>
<phase name='lirGeneration' stamp='9.377'>
<phase_done name='lirGeneration' stamp='9.377'/>
</phase>
<phase name='linearScan' stamp='9.377'>
<phase_done name='linearScan' stamp='9.378'/>
</phase>
<phase_done name='emit_lir' stamp='9.378'/>
</phase>
<phase name='codeemit' stamp='9.378'>
<phase_done name='codeemit' stamp='9.378'/>
</phase>
<phase name='codeinstall' stamp='9.378'>
<phase_done name='codeinstall' stamp='10.093'/>
</phase>
<code_cache total_blobs='262' nmethods='26' adapters='150' free_code_cache='250512000'/>
<task_done success='1' nmsize='1272' count='637' inlined_bytes='1' stamp='10.093'/>
</task>
<task compile_id='39' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='256' iicount='256' level='3' stamp='10.093'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='256' stamp='10.093'/>
</task>
<task compile_id='38' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='133' iicount='134' level='1' stamp='10.093'>
<phase name='buildIR' stamp='10.093'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='799' name='java/io/File' flags='1'/>
<method id='832' holder='799' name='getPath' return='730' flags='1' bytes='5' iicount='134'/>
<parse method='832'  stamp='10.093'>
<parse_done stamp='10.093'/>
</parse>
<phase name='optimize_blocks' stamp='10.093'>
<phase_done name='optimize_blocks' stamp='10.093'/>
</phase>
<phase name='rangeCheckElimination' stamp='10.093'>
<phase_done name='rangeCheckElimination' stamp='10.093'/>
</phase>
<phase name='optimize_null_checks' stamp='10.093'>
<phase_done name='optimize_null_checks' stamp='10.093'/>
</phase>
<phase_done name='buildIR' stamp='10.093'/>
</phase>
<phase name='emit_lir' stamp='10.093'>
<phase name='lirGeneration' stamp='10.093'>
<phase_done name='lirGeneration' stamp='10.093'/>
</phase>
<phase name='linearScan' stamp='10.093'>
<phase_done name='linearScan' stamp='10.093'/>
</phase>
<phase_done name='emit_lir' stamp='10.093'/>
</phase>
<phase name='codeemit' stamp='10.093'>
<phase_done name='codeemit' stamp='10.093'/>
</phase>
<phase name='codeinstall' stamp='10.093'>
<phase_done name='codeinstall' stamp='10.177'/>
</phase>
<code_cache total_blobs='263' nmethods='27' adapters='150' free_code_cache='250511232'/>
<task_done success='1' nmsize='272' count='136' stamp='10.177'/>
</task>
<task compile_id='40' method='java/lang/Character toLowerCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='10.177'>
<phase name='buildIR' stamp='10.177'>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='717' arguments='717' flags='9' bytes='6' iicount='256'/>
<parse method='832'  stamp='10.177'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='834' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' compile_id='30' compiler='C1' level='3' iicount='1946'/>
<call method='834' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='184' bci='1'/>
<klass id='837' name='java/lang/CharacterData' flags='1024'/>
<method id='838' holder='837' name='of' return='837' arguments='722' flags='24' bytes='120' compile_id='16' compiler='C1' level='3' iicount='2482'/>
<call method='838' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='840' holder='837' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='840' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='10.177'/>
</parse>
<parse_done stamp='10.177'/>
</parse>
<phase name='optimize_blocks' stamp='10.177'>
<phase_done name='optimize_blocks' stamp='10.177'/>
</phase>
<phase name='rangeCheckElimination' stamp='10.177'>
<phase_done name='rangeCheckElimination' stamp='10.177'/>
</phase>
<phase name='optimize_null_checks' stamp='10.177'>
<phase_done name='optimize_null_checks' stamp='10.177'/>
</phase>
<phase_done name='buildIR' stamp='10.177'/>
</phase>
<phase name='emit_lir' stamp='10.177'>
<phase name='lirGeneration' stamp='10.177'>
<phase_done name='lirGeneration' stamp='10.177'/>
</phase>
<phase name='linearScan' stamp='10.177'>
<phase_done name='linearScan' stamp='10.177'/>
</phase>
<phase_done name='emit_lir' stamp='10.177'/>
</phase>
<phase name='codeemit' stamp='10.177'>
<phase_done name='codeemit' stamp='10.178'/>
</phase>
<phase name='codeinstall' stamp='10.178'>
<phase_done name='codeinstall' stamp='10.356'/>
</phase>
<code_cache total_blobs='264' nmethods='28' adapters='150' free_code_cache='250509888'/>
<task_done success='1' nmsize='664' count='260' inlined_bytes='9' stamp='10.356'/>
</task>
<task compile_id='42' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='3589' iicount='3589' level='1' stamp='10.357'>
<phase name='buildIR' stamp='10.357'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='3' compiler='C1' level='3' iicount='3589'/>
<parse method='832'  stamp='10.357'>
<parse_done stamp='10.357'/>
</parse>
<phase name='optimize_blocks' stamp='10.357'>
<phase_done name='optimize_blocks' stamp='10.357'/>
</phase>
<phase name='rangeCheckElimination' stamp='10.357'>
<phase_done name='rangeCheckElimination' stamp='10.357'/>
</phase>
<phase name='optimize_null_checks' stamp='10.357'>
<phase_done name='optimize_null_checks' stamp='10.357'/>
</phase>
<phase_done name='buildIR' stamp='10.357'/>
</phase>
<phase name='emit_lir' stamp='10.357'>
<phase name='lirGeneration' stamp='10.357'>
<phase_done name='lirGeneration' stamp='10.357'/>
</phase>
<phase name='linearScan' stamp='10.357'>
<phase_done name='linearScan' stamp='10.358'/>
</phase>
<phase_done name='emit_lir' stamp='10.358'/>
</phase>
<phase name='codeemit' stamp='10.358'>
<phase_done name='codeemit' stamp='10.358'/>
</phase>
<phase name='codeinstall' stamp='10.358'>
<phase_done name='codeinstall' stamp='10.440'/>
</phase>
<code_cache total_blobs='265' nmethods='29' adapters='150' free_code_cache='250509120'/>
<task_done success='1' nmsize='272' count='3590' stamp='10.440'/>
</task>
<task compile_id='41' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='131' backedge_count='2044' iicount='131' level='3' stamp='10.440'>
<phase name='buildIR' stamp='10.440'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/util/Locale' flags='17'/>
<method id='833' holder='730' name='toLowerCase' return='730' arguments='832' flags='1' bytes='439' iicount='131'/>
<parse method='833'  stamp='10.440'>
<bc code='183' bci='8'/>
<type id='724' name='void'/>
<klass id='828' name='java/lang/NullPointerException' flags='1'/>
<method id='835' holder='828' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='49'/>
<type id='722' name='int'/>
<method id='837' holder='730' name='codePointAt' return='722' arguments='722' flags='1' bytes='36' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='58'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='839' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' compile_id='30' compiler='C1' level='3' iicount='2139'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='184' bci='1'/>
<klass id='842' name='java/lang/CharacterData' flags='1024'/>
<method id='843' holder='842' name='of' return='842' arguments='722' flags='24' bytes='120' compile_id='16' compiler='C1' level='3' iicount='2675'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='845' holder='842' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='10.440'/>
</parse>
<bc code='184' bci='70'/>
<method id='846' holder='810' name='charCount' return='722' arguments='722' flags='9' bytes='12' iicount='2'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='10.441'/>
</parse>
<bc code='184' bci='82'/>
<type id='717' name='char'/>
<method id='848' holder='810' name='toLowerCase' return='717' arguments='717' flags='9' bytes='6' compile_id='40' compiler='C1' level='3' iicount='292'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='184' bci='1'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='184' bci='1'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='10.441'/>
</parse>
<parse_done stamp='10.441'/>
</parse>
<bc code='184' bci='116'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='850' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='120'/>
<method id='852' holder='832' name='getLanguage' return='730' flags='1' bytes='8' iicount='49'/>
<call method='852' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='182' bci='4'/>
<klass id='854' name='sun/util/locale/BaseLocale' flags='17'/>
<method id='855' holder='854' name='getLanguage' return='730' flags='1' bytes='5' iicount='50'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='10.441'/>
</parse>
<parse_done stamp='10.441'/>
</parse>
<bc code='182' bci='190'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='197'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='10.441'/>
</parse>
<bc code='184' bci='243'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='184' bci='1'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='10.441'/>
</parse>
<bc code='184' bci='233'/>
<klass id='860' name='java/lang/ConditionalSpecialCasing' unloaded='1'/>
<method id='861' holder='860' name='toLowerCaseEx' return='722' arguments='730 722 832' unloaded='1'/>
<call method='861' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='271'/>
<klass id='821' name='[C' flags='1041'/>
<method id='862' holder='860' name='toLowerCaseCharArray' return='821' arguments='730 722 832' unloaded='1'/>
<call method='862' instr='invokestatic'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='296'/>
<method id='863' holder='810' name='toChars' return='722' arguments='722 821 722' flags='9' bytes='37' iicount='1'/>
<call method='863' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='310'/>
<method id='865' holder='810' name='toChars' return='821' arguments='722' flags='9' bytes='43' iicount='1'/>
<call method='865' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='351'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='435'/>
<method id='867' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='37' compiler='C1' level='3' iicount='671'/>
<call method='867' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='10.442'/>
</parse>
<phase name='optimize_blocks' stamp='10.442'>
<phase_done name='optimize_blocks' stamp='10.442'/>
</phase>
<phase name='rangeCheckElimination' stamp='10.442'>
<phase_done name='rangeCheckElimination' stamp='10.442'/>
</phase>
<phase name='optimize_null_checks' stamp='10.442'>
<phase_done name='optimize_null_checks' stamp='10.442'/>
</phase>
<phase_done name='buildIR' stamp='10.442'/>
</phase>
<phase name='emit_lir' stamp='10.442'>
<phase name='lirGeneration' stamp='10.442'>
<phase_done name='lirGeneration' stamp='10.442'/>
</phase>
<phase name='linearScan' stamp='10.442'>
<phase_done name='linearScan' stamp='10.443'/>
</phase>
<phase_done name='emit_lir' stamp='10.443'/>
</phase>
<phase name='codeemit' stamp='10.443'>
<phase_done name='codeemit' stamp='10.443'/>
</phase>
<phase name='codeinstall' stamp='10.443'>
<phase_done name='codeinstall' stamp='12.202'/>
</phase>
<code_cache total_blobs='267' nmethods='30' adapters='151' free_code_cache='250496960'/>
<task_done success='1' nmsize='6296' count='151' backedge_count='2261' inlined_bytes='70' stamp='12.202'/>
</task>
<task compile_id='43' method='java/lang/String indexOf (I)I' bytes='7' count='384' iicount='384' level='3' stamp='12.204'>
<phase name='buildIR' stamp='12.204'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='384'/>
<parse method='832'  stamp='12.204'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='9' compiler='C1' level='3' iicount='546'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='12.204'/>
</parse>
<phase name='optimize_blocks' stamp='12.204'>
<phase_done name='optimize_blocks' stamp='12.204'/>
</phase>
<phase name='rangeCheckElimination' stamp='12.204'>
<phase_done name='rangeCheckElimination' stamp='12.204'/>
</phase>
<phase name='optimize_null_checks' stamp='12.204'>
<phase_done name='optimize_null_checks' stamp='12.204'/>
</phase>
<phase_done name='buildIR' stamp='12.204'/>
</phase>
<phase name='emit_lir' stamp='12.204'>
<phase name='lirGeneration' stamp='12.204'>
<phase_done name='lirGeneration' stamp='12.204'/>
</phase>
<phase name='linearScan' stamp='12.204'>
<phase_done name='linearScan' stamp='12.204'/>
</phase>
<phase_done name='emit_lir' stamp='12.204'/>
</phase>
<phase name='codeemit' stamp='12.204'>
<phase_done name='codeemit' stamp='12.204'/>
</phase>
<phase name='codeinstall' stamp='12.204'>
<phase_done name='codeinstall' stamp='12.338'/>
</phase>
<code_cache total_blobs='268' nmethods='31' adapters='151' free_code_cache='250495872'/>
<task_done success='1' nmsize='520' count='387' stamp='12.338'/>
</task>
<task compile_id='45' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='258' backedge_count='615' iicount='258' level='3' stamp='12.338'>
<phase name='buildIR' stamp='12.338'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='295'/>
<parse method='832'  stamp='12.338'>
<parse_done stamp='12.338'/>
</parse>
<phase name='optimize_blocks' stamp='12.338'>
<phase_done name='optimize_blocks' stamp='12.338'/>
</phase>
<phase name='rangeCheckElimination' stamp='12.338'>
<phase_done name='rangeCheckElimination' stamp='12.338'/>
</phase>
<phase name='optimize_null_checks' stamp='12.338'>
<phase_done name='optimize_null_checks' stamp='12.338'/>
</phase>
<phase_done name='buildIR' stamp='12.338'/>
</phase>
<phase name='emit_lir' stamp='12.338'>
<phase name='lirGeneration' stamp='12.338'>
<phase_done name='lirGeneration' stamp='12.338'/>
</phase>
<phase name='linearScan' stamp='12.338'>
<phase_done name='linearScan' stamp='12.338'/>
</phase>
<phase_done name='emit_lir' stamp='12.338'/>
</phase>
<phase name='codeemit' stamp='12.338'>
<phase_done name='codeemit' stamp='12.338'/>
</phase>
<phase name='codeinstall' stamp='12.338'>
<phase_done name='codeinstall' stamp='12.592'/>
</phase>
<code_cache total_blobs='270' nmethods='32' adapters='152' free_code_cache='250493504'/>
<task_done success='1' nmsize='816' count='362' backedge_count='727' stamp='12.592'/>
</task>
<task compile_id='44' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='291' iicount='291' level='3' stamp='12.592'>
<phase name='buildIR' stamp='12.592'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='291'/>
<parse method='833'  stamp='12.593'>
<bc code='184' bci='11'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='1479'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='12.593'/>
</parse>
<bc code='184' bci='14'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='838' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='12.593'/>
</parse>
<phase name='optimize_blocks' stamp='12.593'>
<phase_done name='optimize_blocks' stamp='12.593'/>
</phase>
<phase name='rangeCheckElimination' stamp='12.593'>
<phase_done name='rangeCheckElimination' stamp='12.593'/>
</phase>
<phase name='optimize_null_checks' stamp='12.593'>
<phase_done name='optimize_null_checks' stamp='12.593'/>
</phase>
<phase_done name='buildIR' stamp='12.593'/>
</phase>
<phase name='emit_lir' stamp='12.593'>
<phase name='lirGeneration' stamp='12.593'>
<phase_done name='lirGeneration' stamp='12.593'/>
</phase>
<phase name='linearScan' stamp='12.593'>
<phase_done name='linearScan' stamp='12.593'/>
</phase>
<phase_done name='emit_lir' stamp='12.593'/>
</phase>
<phase name='codeemit' stamp='12.593'>
<phase_done name='codeemit' stamp='12.593'/>
</phase>
<phase name='codeinstall' stamp='12.593'>
<phase_done name='codeinstall' stamp='12.797'/>
</phase>
<code_cache total_blobs='271' nmethods='33' adapters='152' free_code_cache='250491904'/>
<task_done success='1' nmsize='808' count='296' inlined_bytes='11' stamp='12.797'/>
</task>
<task compile_id='47' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='130' backedge_count='4393' iicount='130' level='3' stamp='12.797'>
<phase name='buildIR' stamp='12.797'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='130'/>
<parse method='832'  stamp='12.797'>
<parse_done stamp='12.797'/>
</parse>
<phase name='optimize_blocks' stamp='12.797'>
<phase_done name='optimize_blocks' stamp='12.797'/>
</phase>
<phase name='rangeCheckElimination' stamp='12.797'>
<phase_done name='rangeCheckElimination' stamp='12.797'/>
</phase>
<phase name='optimize_null_checks' stamp='12.797'>
<phase_done name='optimize_null_checks' stamp='12.797'/>
</phase>
<phase_done name='buildIR' stamp='12.797'/>
</phase>
<phase name='emit_lir' stamp='12.797'>
<phase name='lirGeneration' stamp='12.797'>
<phase_done name='lirGeneration' stamp='12.797'/>
</phase>
<phase name='linearScan' stamp='12.797'>
<phase_done name='linearScan' stamp='12.797'/>
</phase>
<phase_done name='emit_lir' stamp='12.797'/>
</phase>
<phase name='codeemit' stamp='12.797'>
<phase_done name='codeemit' stamp='12.797'/>
</phase>
<phase name='codeinstall' stamp='12.797'>
<phase_done name='codeinstall' stamp='13.324'/>
</phase>
<code_cache total_blobs='272' nmethods='34' adapters='152' free_code_cache='250488640'/>
<task_done success='1' nmsize='1616' count='149' backedge_count='5472' stamp='13.324'/>
</task>
<task compile_id='49' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='13.324'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='128' stamp='13.324'/>
</task>
<task compile_id='48' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='643' iicount='643' level='3' stamp='13.324'>
<phase name='buildIR' stamp='13.324'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730' flags='1' bytes='7' iicount='643'/>
<parse method='832'  stamp='13.324'>
<bc code='182' bci='3'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' compile_id='45' compiler='C1' level='3' iicount='763'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='13.324'/>
</parse>
<phase name='optimize_blocks' stamp='13.324'>
<phase_done name='optimize_blocks' stamp='13.324'/>
</phase>
<phase name='rangeCheckElimination' stamp='13.324'>
<phase_done name='rangeCheckElimination' stamp='13.324'/>
</phase>
<phase name='optimize_null_checks' stamp='13.324'>
<phase_done name='optimize_null_checks' stamp='13.324'/>
</phase>
<phase_done name='buildIR' stamp='13.324'/>
</phase>
<phase name='emit_lir' stamp='13.324'>
<phase name='lirGeneration' stamp='13.324'>
<phase_done name='lirGeneration' stamp='13.324'/>
</phase>
<phase name='linearScan' stamp='13.324'>
<phase_done name='linearScan' stamp='13.324'/>
</phase>
<phase_done name='emit_lir' stamp='13.324'/>
</phase>
<phase name='codeemit' stamp='13.324'>
<phase_done name='codeemit' stamp='13.324'/>
</phase>
<phase name='codeinstall' stamp='13.324'>
<phase_done name='codeinstall' stamp='13.494'/>
</phase>
<code_cache total_blobs='273' nmethods='35' adapters='152' free_code_cache='250487552'/>
<task_done success='1' nmsize='520' count='643' stamp='13.494'/>
</task>
<task compile_id='46' method='java/util/ArrayList size ()I' bytes='5' count='239' iicount='239' level='1' stamp='13.494'>
<phase name='buildIR' stamp='13.494'>
<type id='722' name='int'/>
<klass id='832' name='java/util/ArrayList' flags='1'/>
<method id='833' holder='832' name='size' return='722' flags='1' bytes='5' iicount='239'/>
<parse method='833'  stamp='13.494'>
<parse_done stamp='13.494'/>
</parse>
<phase name='optimize_blocks' stamp='13.494'>
<phase_done name='optimize_blocks' stamp='13.494'/>
</phase>
<phase name='rangeCheckElimination' stamp='13.495'>
<phase_done name='rangeCheckElimination' stamp='13.495'/>
</phase>
<phase name='optimize_null_checks' stamp='13.495'>
<phase_done name='optimize_null_checks' stamp='13.495'/>
</phase>
<phase_done name='buildIR' stamp='13.495'/>
</phase>
<phase name='emit_lir' stamp='13.495'>
<phase name='lirGeneration' stamp='13.495'>
<phase_done name='lirGeneration' stamp='13.495'/>
</phase>
<phase name='linearScan' stamp='13.495'>
<phase_done name='linearScan' stamp='13.495'/>
</phase>
<phase_done name='emit_lir' stamp='13.495'/>
</phase>
<phase name='codeemit' stamp='13.495'>
<phase_done name='codeemit' stamp='13.495'/>
</phase>
<phase name='codeinstall' stamp='13.495'>
<phase_done name='codeinstall' stamp='13.596'/>
</phase>
<code_cache total_blobs='274' nmethods='36' adapters='152' free_code_cache='250486784'/>
<task_done success='1' nmsize='272' count='239' stamp='13.596'/>
</task>
<task compile_id='50' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='1418' iicount='1418' level='3' stamp='13.597'>
<phase name='buildIR' stamp='13.597'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='1418'/>
<parse method='832'  stamp='13.597'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='23' compiler='C1' level='3' iicount='1955'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='17'/>
<method id='836' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='260'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' compile_id='44' compiler='C1' level='3' iicount='321'/>
<call method='839' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='1582'/>
<call method='842' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<parse_done stamp='13.597'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='10' compile_kind='c2n' level='0' iicount='1280'/>
<call method='844' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='13.597'/>
</parse>
<parse_done stamp='13.597'/>
</parse>
<parse_done stamp='13.597'/>
</parse>
<phase name='optimize_blocks' stamp='13.597'>
<phase_done name='optimize_blocks' stamp='13.597'/>
</phase>
<phase name='rangeCheckElimination' stamp='13.597'>
<phase_done name='rangeCheckElimination' stamp='13.597'/>
</phase>
<phase name='optimize_null_checks' stamp='13.597'>
<phase_done name='optimize_null_checks' stamp='13.597'/>
</phase>
<phase_done name='buildIR' stamp='13.597'/>
</phase>
<phase name='emit_lir' stamp='13.597'>
<phase name='lirGeneration' stamp='13.597'>
<phase_done name='lirGeneration' stamp='13.598'/>
</phase>
<phase name='linearScan' stamp='13.598'>
<phase_done name='linearScan' stamp='13.598'/>
</phase>
<phase_done name='emit_lir' stamp='13.598'/>
</phase>
<phase name='codeemit' stamp='13.598'>
<phase_done name='codeemit' stamp='13.598'/>
</phase>
<phase name='codeinstall' stamp='13.598'>
<phase_done name='codeinstall' stamp='14.119'/>
</phase>
<code_cache total_blobs='276' nmethods='37' adapters='153' free_code_cache='250483520'/>
<task_done success='1' nmsize='1336' count='1418' inlined_bytes='57' stamp='14.119'/>
</task>
</compilation_log>
<hotspot_log_done stamp='14.157'/>
</hotspot_log>
